{
  "version": 3,
<<<<<<< HEAD
  "sources": ["../../vuetify/src/components/VAutocomplete/VAutocomplete.tsx", "../../vuetify/src/components/VSelect/VSelect.tsx", "../../vuetify/src/components/VVirtualScroll/VVirtualScroll.tsx", "../../vuetify/src/components/VVirtualScroll/VVirtualScrollItem.tsx", "../../vuetify/src/composables/virtual.ts", "../../vuetify/src/components/VSelect/useScrolling.ts", "../../vuetify/src/composables/filter.ts"],
  "sourcesContent": ["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from '../VSelect/useScrolling'\nimport { useTextColor } from '@/composables/color'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  noop,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { FilterMatch } from '@/composables/filter'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\nfunction highlightResult (text: string, matches: FilterMatch | undefined, length: number) {\n  if (matches == null) return text\n\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeVAutocompleteProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String] as PropType<boolean | 'exact'>,\n  },\n  search: String,\n\n  ...makeFilterProps({ filterKeys: ['title'] }),\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: false }),\n}, 'VAutocomplete')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VAutocomplete = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VAutocomplete',\n\n  props: makeVAutocompleteProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:search': (value: any) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = shallowRef(false)\n    const isPristine = shallowRef(true)\n    const listHasFocus = shallowRef(false)\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return\n        _menu.value = v\n      },\n    })\n    const selectionIndex = shallowRef(-1)\n    const color = computed(() => vTextFieldRef.value?.color)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const { filteredItems, getMatches } = useFilter(props, items, () => isPristine.value ? '' : search.value)\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const selectedValues = computed(() => model.value.map(selection => selection.props.value))\n\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true ||\n        (props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title)\n      return selectFirst &&\n        displayItems.value.length > 0 &&\n        !isPristine.value &&\n        !listHasFocus.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !items.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const listRef = ref<VList>()\n    const { onListScroll, onListKeydown } = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = true\n    }\n    function onMousedownMenuIcon (e: MouseEvent) {\n      if (menuDisabled.value) return\n\n      if (isFocused.value) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value.selectionStart\n      const length = model.value.length\n\n      if (\n        selectionIndex.value > -1 ||\n        ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (highlightFirst.value && ['Enter', 'Tab'].includes(e.key)) {\n        select(displayItems.value[0])\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next')\n      }\n\n      if (!props.multiple) return\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1\n          }\n\n          return\n        }\n\n        const originalSelectionIndex = selectionIndex.value\n\n        const selectedItem = model.value[selectionIndex.value]\n        if (selectedItem && !selectedItem.props.disabled) select(selectedItem)\n\n        selectionIndex.value = originalSelectionIndex >= length - 1 ? (length - 2) : originalSelectionIndex\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(search.value?.length, search.value?.length)\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (model.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(0, 0)\n        }\n      }\n    }\n\n    function onInput (e: InputEvent) {\n      search.value = (e.target as HTMLInputElement).value\n    }\n\n    function onChange (e: Event) {\n      if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === (e.target as HTMLInputElement).value)\n        if (item) {\n          select(item)\n        }\n      }\n    }\n\n    function onAfterLeave () {\n      if (isFocused.value) {\n        isPristine.value = true\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n      setTimeout(() => {\n        listHasFocus.value = true\n      })\n    }\n    function onFocusout (e: FocusEvent) {\n      listHasFocus.value = false\n    }\n    function onUpdateModelValue (v: any) {\n      if (v == null || (v === '' && !props.multiple)) model.value = []\n    }\n\n    const isSelecting = shallowRef(false)\n\n    function select (item: ListItem) {\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n\n        isSelecting.value = true\n\n        search.value = item.title\n\n        menu.value = false\n        isPristine.value = true\n\n        nextTick(() => (isSelecting.value = false))\n      }\n    }\n\n    watch(isFocused, (val, oldVal) => {\n      if (val === oldVal) return\n\n      if (val) {\n        isSelecting.value = true\n        search.value = props.multiple ? '' : String(model.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        if (!props.multiple && !search.value) model.value = []\n        else if (\n          highlightFirst.value &&\n          !listHasFocus.value &&\n          !model.value.some(({ value }) => value === displayItems.value[0].value)\n        ) {\n          select(displayItems.value[0])\n        }\n        menu.value = false\n        search.value = ''\n        selectionIndex.value = -1\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => item.value === s.value)\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ search.value }\n          onUpdate:modelValue={ onUpdateModelValue }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          onInput={ onInput }\n          onChange={ onChange }\n          class={[\n            'v-autocomplete',\n            `v-autocomplete--${props.multiple ? 'multiple' : 'single'}`,\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              'v-autocomplete--selection-slot': !!slots.selection,\n              'v-autocomplete--selecting-index': selectionIndex.value > -1,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          readonly={ props.readonly }\n          placeholder={ isDirty ? undefined : props.placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-autocomplete__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                      onScrollPassive={ onListScroll }\n                      tabindex=\"-1\"\n                      color={ props.itemColor ?? props.color }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            active: (highlightFirst.value && index === 0) ? true : undefined,\n                            onClick: () => select(item),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps }>\n                            {{\n                              prepend: ({ isSelected }) => (\n                                <>\n                                  { props.multiple && !props.hideSelected ? (\n                                    <VCheckboxBtn\n                                      key={ item.value }\n                                      modelValue={ isSelected }\n                                      ripple={ false }\n                                      tabindex=\"-1\"\n                                    />\n                                  ) : undefined }\n\n                                  { item.props.prependIcon && (\n                                    <VIcon icon={ item.props.prependIcon } />\n                                  )}\n                                </>\n                              ),\n                              title: () => {\n                                return isPristine.value\n                                  ? item.title\n                                  : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0)\n                              },\n                            }}\n                          </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-autocomplete__selection',\n                        index === selectionIndex.value && [\n                          'v-autocomplete__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-autocomplete__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-autocomplete__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-autocomplete__menu-icon\"\n                    icon={ props.menuIcon }\n                    onMousedown={ onMousedownMenuIcon }\n                    onClick={ noop }\n                    aria-label={ t(label.value) }\n                    title={ t(label.value) }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n", "// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, ref, shallowRef, watch } from 'vue'\nimport {\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'button',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => s === item))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !items.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const listRef = ref<VList>()\n    const { onListScroll, onListKeydown } = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      function checkPrintable (e: KeyboardEvent) {\n        const isPrintableChar = e.key.length === 1\n        const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey\n        return isPrintableChar && noModifier\n      }\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n      }\n    }\n    function select (item: ListItem) {\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n        menu.value = false\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onScrollPassive={ onListScroll }\n                      tabindex=\"-1\"\n                      color={ props.itemColor ?? props.color }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            onClick: () => select(item),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n", "// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.index }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n", "// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight?: number | string\n  height?: number | string\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n  watch(viewportHeight, (val, oldVal) => {\n    oldVal && calculateVisibleItems()\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => ({\n      raw: item,\n      index: index + first.value,\n    }))\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: true })\n\n  return {\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n", "// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return { onListScroll, onListKeydown }\n}\n", "/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { computed, ref, unref, watchEffect } from 'vue'\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\n/**\n * - match without highlight\n * - single match (index), length already known\n * - single match (start, end)\n * - multiple matches (start, end), probably shouldn't overlap\n */\nexport type FilterMatch = boolean | number | [number, number] | [number, number][]\nexport type FilterFunction = (value: string, query: string, item?: InternalItem) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\nexport interface InternalItem<T = any> {\n  value: any\n  raw: T\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems (\n  items: readonly (readonly [item: InternalItem, transformed: {}])[] | readonly InternalItem[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { index: number, matches: Record<string, FilterMatch> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (let i = 0; i < items.length; i++) {\n    const [item, transformed = item] = wrapInArray(items[i]) as readonly [InternalItem, {}]\n    const customMatches: Record<string, FilterMatch> = {}\n    const defaultMatches: Record<string, FilterMatch> = {}\n    let match: FilterMatch = -1\n\n    if (query && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(transformed)\n\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(transformed, key, transformed)\n          const keyFilter = options?.customKeyFilter?.[key]\n\n          match = keyFilter\n            ? keyFilter(value, query, item)\n            : filter(value, query, item)\n\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match\n            else defaultMatches[key] = match\n          } else if (options?.filterMode === 'every') {\n            continue loop\n          }\n        }\n      } else {\n        match = filter(item, query, item)\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ index: i, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter <T extends InternalItem> (\n  props: FilterProps,\n  items: MaybeRef<T[]>,\n  query: Ref<string | undefined> | (() => string | undefined),\n  options?: {\n    transform?: (item: T) => {}\n    customKeyFilter?: MaybeRef<FilterKeyFunctions | undefined>\n  }\n) {\n  const filteredItems: Ref<T[]> = ref([])\n  const filteredMatches: Ref<Map<unknown, Record<string, FilterMatch>>> = ref(new Map())\n  const transformedItems = computed(() => (\n    options?.transform\n      ? unref(items).map(item => ([item, options.transform!(item)] as const))\n      : unref(items)\n  ))\n\n  watchEffect(() => {\n    const _query = typeof query === 'function' ? query() : unref(query)\n    const strQuery = (\n      typeof _query !== 'string' &&\n      typeof _query !== 'number'\n    ) ? '' : String(_query)\n\n    const results = filterItems(\n      transformedItems.value,\n      strQuery,\n      {\n        customKeyFilter: {\n          ...props.customKeyFilter,\n          ...unref(options?.customKeyFilter),\n        },\n        default: props.customFilter,\n        filterKeys: props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n\n    const originalItems = unref(items)\n\n    const _filteredItems: typeof filteredItems['value'] = []\n    const _filteredMatches: typeof filteredMatches['value'] = new Map()\n    results.forEach(({ index, matches }) => {\n      const item = originalItems[index]\n      _filteredItems.push(item)\n      _filteredMatches.set(item.value, matches)\n    })\n    filteredItems.value = _filteredItems\n    filteredMatches.value = _filteredMatches\n  })\n\n  function getMatches (item: T) {\n    return filteredMatches.value.get(item.value)\n  }\n\n  return { filteredItems, filteredMatches, getMatches }\n}\n"],
  "mappings": "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",
  "names": ["makeVVirtualScrollItemProps", "propsFactory", "renderless", "Boolean", "makeComponentProps", "VVirtualScrollItem", "genericComponent", "name", "inheritAttrs", "props", "emits", "height", "setup", "_ref", "attrs", "emit", "slots", "resizeRef", "contentRect", "useResizeObserver", "undefined", "watch", "value", "useRender", "_createVNode", "_Fragment", "default", "itemRef", "_mergeProps", "class", "style", "UP", "DOWN", "BUFFER_PX", "makeVirtualProps", "propsFactory", "itemHeight", "type", "Number", "String", "default", "height", "useVirtual", "props", "items", "display", "useDisplay", "shallowRef", "watchEffect", "value", "parseFloat", "first", "last", "Math", "ceil", "parseInt", "paddingTop", "paddingBottom", "containerRef", "ref", "markerRef", "markerOffset", "resizeRef", "contentRect", "useResizeObserver", "viewportHeight", "computed", "document", "documentElement", "hasInitialRender", "sizes", "Array", "from", "length", "offsets", "updateTime", "targetScrollIndex", "getSize", "index", "updateOffsets", "debounce", "start", "performance", "now", "i", "max", "unwatch", "watch", "v", "offsetTop", "immediate", "calculateVisibleItems", "nextTick", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "val", "oldVal", "onScopeDispose", "clear", "handleItemResize", "prevHeight", "prevMinHeight", "min", "calculateOffset", "clamp", "calculateIndex", "scrollTop", "binaryClosest", "lastScrollTop", "scrollVelocity", "lastScrollTime", "handleScroll", "scrollTime", "scrollDeltaT", "sign", "handleScrollend", "raf", "cancelAnimationFrame", "_calculateVisibleItems", "direction", "startPx", "endPx", "end", "topOverflow", "bottomOverflow", "bufferOverflow", "offset", "computedItems", "slice", "map", "item", "raw", "deep", "arr", "high", "low", "mid", "target", "makeVVirtualScrollProps", "propsFactory", "items", "type", "Array", "default", "renderless", "Boolean", "makeVirtualProps", "makeComponentProps", "makeDimensionProps", "VVirtualScroll", "genericComponent", "name", "props", "setup", "_ref", "slots", "vm", "getCurrentInstance", "dimensionStyles", "useDimension", "containerRef", "markerRef", "handleScroll", "handleScrollend", "handleItemResize", "scrollToIndex", "paddingTop", "paddingBottom", "computedItems", "useVirtual", "toRef", "useToggleScope", "handleListeners", "add", "arguments", "length", "undefined", "method", "value", "document", "documentElement", "passive", "onMounted", "getScrollParent", "vnode", "el", "onScopeDispose", "useRender", "children", "map", "item", "_createVNode", "VVirtualScrollItem", "index", "height", "slotProps", "raw", "_Fragment", "convertToUnit", "class", "style", "useScrolling", "listRef", "textFieldRef", "isScrolling", "shallowRef", "scrollTimeout", "onListScroll", "e", "cancelAnimationFrame", "value", "requestAnimationFrame", "finishScrolling", "Promise", "resolve", "stop", "watch", "onListKeydown", "key", "focus", "includes", "el", "$el", "scrollTo", "top", "scrollHeight", "behavior", "children", "querySelectorAll", "getBoundingClientRect", "child", "bottom", "reverse", "makeSelectProps", "propsFactory", "chips", "Boolean", "closableChips", "closeText", "type", "String", "default", "openText", "eager", "hideNoData", "hideSelected", "menu", "menuIcon", "IconValue", "menuProps", "Object", "multiple", "noDataText", "openOnClear", "itemColor", "makeItemsProps", "itemChildren", "makeVSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "component", "VDialogTransition", "VSelect", "genericComponent", "name", "props", "emits", "focused", "value", "ue", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "vMenuRef", "vVirtualScrollRef", "_menu", "useProxiedModel", "computed", "get", "set", "v", "Î¨openChildren", "items", "transformIn", "transformOut", "useItems", "model", "wrapInArray", "transformed", "counterValue", "length", "form", "useForm", "selectedValues", "map", "selection", "isFocused", "shallowRef", "label", "keyboardLookupPrefix", "keyboardLookupLastTime", "displayItems", "filter", "item", "some", "s", "menuDisabled", "readonly", "isReadonly", "listRef", "onListScroll", "onListKeydown", "useScrolling", "onClear", "e", "onMousedownControl", "onKeydown", "key", "includes", "preventDefault", "focus", "KEYBOARD_LOOKUP_THRESHOLD", "checkPrintable", "isPrintableChar", "noModifier", "ctrlKey", "metaKey", "altKey", "now", "performance", "toLowerCase", "find", "title", "startsWith", "undefined", "select", "index", "findIndex", "valueComparator", "splice", "onBlur", "$el", "contains", "relatedTarget", "onAfterLeave", "onFocusin", "onModelUpdate", "matchesSelector", "watch", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "useRender", "hasChips", "chip", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "placeholder", "persistentPlaceholder", "_createVNode", "_mergeProps", "join", "$event", "externalValue", "class", "style", "_Fragment", "VMenu", "VList", "color", "VListItem", "VVirtualScroll", "_ref2", "itemRef", "itemProps", "mergeProps", "onClick", "prepend", "_ref3", "isSelected", "VCheckboxBtn", "prependIcon", "VIcon", "onChipClose", "stopPropagation", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "disabled", "VDefaultsProvider", "closable", "size", "text", "_createTextVNode", "_len", "arguments", "args", "Array", "_key", "forwardRefs", "defaultFilter", "value", "query", "item", "toString", "toLocaleLowerCase", "indexOf", "makeFilterProps", "propsFactory", "customFilter", "Function", "customKeyFilter", "Object", "filterKeys", "Array", "String", "filterMode", "type", "default", "noFilter", "Boolean", "filterItems", "items", "options", "array", "filter", "keys", "wrapInArray", "customFiltersLength", "length", "loop", "i", "transformed", "customMatches", "defaultMatches", "match", "key", "getPropertyFromItem", "keyFilter", "title", "defaultMatchesLength", "customMatchesLength", "push", "index", "matches", "useFilter", "props", "filteredItems", "ref", "filteredMatches", "Map", "transformedItems", "computed", "transform", "unref", "map", "watchEffect", "_query", "strQuery", "results", "originalItems", "_filteredItems", "_filteredMatches", "forEach", "_ref", "set", "getMatches", "get", "highlightResult", "text", "matches", "length", "Array", "isArray", "Error", "_createVNode", "_Fragment", "substr", "makeVAutocompleteProps", "propsFactory", "autoSelectFirst", "type", "Boolean", "String", "search", "makeFilterProps", "filterKeys", "makeSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "VAutocomplete", "genericComponent", "name", "props", "emits", "focused", "value", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "isFocused", "shallowRef", "isPristine", "listHasFocus", "vMenuRef", "vVirtualScrollRef", "_menu", "useProxiedModel", "menu", "computed", "get", "set", "v", "Î¨openChildren", "selectionIndex", "color", "label", "closeText", "openText", "items", "transformIn", "transformOut", "useItems", "textColorClasses", "textColorStyles", "useTextColor", "model", "wrapInArray", "transformed", "multiple", "counterValue", "form", "useForm", "filteredItems", "getMatches", "useFilter", "displayItems", "hideSelected", "filter", "filteredItem", "some", "s", "selectedValues", "map", "selection", "highlightFirst", "selectFirst", "title", "menuDisabled", "hideNoData", "readonly", "isReadonly", "listRef", "onListScroll", "onListKeydown", "useScrolling", "onClear", "e", "openOnClear", "onMousedownControl", "onMousedownMenuIcon", "preventDefault", "stopPropagation", "onKeydown", "selectionStart", "includes", "key", "select", "focus", "originalSelectionIndex", "selectedItem", "disabled", "prev", "setSelectionRange", "next", "onInput", "target", "onChange", "matchesSelector", "item", "find", "onAfterLeave", "onFocusin", "setTimeout", "onFocusout", "onUpdateModelValue", "isSelecting", "index", "findIndex", "valueComparator", "splice", "nextTick", "watch", "val", "oldVal", "at", "_ref2", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "useRender", "hasChips", "chips", "chip", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "_mergeProps", "$event", "externalValue", "class", "style", "undefined", "placeholder", "default", "VMenu", "eager", "menuProps", "VList", "itemColor", "VListItem", "noDataText", "VVirtualScroll", "_ref3", "itemRef", "itemProps", "mergeProps", "active", "onClick", "prepend", "_ref4", "isSelected", "VCheckboxBtn", "prependIcon", "VIcon", "onChipClose", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "closableChips", "VDefaultsProvider", "closable", "size", "_createTextVNode", "_len", "arguments", "args", "_key", "menuIcon", "noop", "forwardRefs"]
=======
  "sources": ["../../vuetify/src/components/VAutocomplete/VAutocomplete.tsx"],
  "sourcesContent": ["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from '../VSelect/useScrolling'\nimport { useTextColor } from '@/composables/color'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  noop,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { FilterMatch } from '@/composables/filter'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\nfunction highlightResult (text: string, matches: FilterMatch | undefined, length: number) {\n  if (matches == null) return text\n\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeVAutocompleteProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String] as PropType<boolean | 'exact'>,\n  },\n  search: String,\n\n  ...makeFilterProps({ filterKeys: ['title'] }),\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: false }),\n}, 'VAutocomplete')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VAutocomplete = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VAutocomplete',\n\n  props: makeVAutocompleteProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:search': (value: any) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = shallowRef(false)\n    const isPristine = shallowRef(true)\n    const listHasFocus = shallowRef(false)\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return\n        _menu.value = v\n      },\n    })\n    const selectionIndex = shallowRef(-1)\n    const color = computed(() => vTextFieldRef.value?.color)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const { filteredItems, getMatches } = useFilter(props, items, () => isPristine.value ? '' : search.value)\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const selectedValues = computed(() => model.value.map(selection => selection.props.value))\n\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true ||\n        (props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title)\n      return selectFirst &&\n        displayItems.value.length > 0 &&\n        !isPristine.value &&\n        !listHasFocus.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !items.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const listRef = ref<VList>()\n    const { onListScroll, onListKeydown } = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = true\n    }\n    function onMousedownMenuIcon (e: MouseEvent) {\n      if (menuDisabled.value) return\n\n      if (isFocused.value) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value.selectionStart\n      const length = model.value.length\n\n      if (\n        selectionIndex.value > -1 ||\n        ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (highlightFirst.value && ['Enter', 'Tab'].includes(e.key)) {\n        select(displayItems.value[0])\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next')\n      }\n\n      if (!props.multiple) return\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1\n          }\n\n          return\n        }\n\n        const originalSelectionIndex = selectionIndex.value\n\n        const selectedItem = model.value[selectionIndex.value]\n        if (selectedItem && !selectedItem.props.disabled) select(selectedItem)\n\n        selectionIndex.value = originalSelectionIndex >= length - 1 ? (length - 2) : originalSelectionIndex\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(search.value?.length, search.value?.length)\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (model.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(0, 0)\n        }\n      }\n    }\n\n    function onInput (e: InputEvent) {\n      search.value = (e.target as HTMLInputElement).value\n    }\n\n    function onChange (e: Event) {\n      if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === (e.target as HTMLInputElement).value)\n        if (item) {\n          select(item)\n        }\n      }\n    }\n\n    function onAfterLeave () {\n      if (isFocused.value) {\n        isPristine.value = true\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n      setTimeout(() => {\n        listHasFocus.value = true\n      })\n    }\n    function onFocusout (e: FocusEvent) {\n      listHasFocus.value = false\n    }\n    function onUpdateModelValue (v: any) {\n      if (v == null || (v === '' && !props.multiple)) model.value = []\n    }\n\n    const isSelecting = shallowRef(false)\n\n    function select (item: ListItem) {\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n\n        isSelecting.value = true\n\n        search.value = item.title\n\n        menu.value = false\n        isPristine.value = true\n\n        nextTick(() => (isSelecting.value = false))\n      }\n    }\n\n    watch(isFocused, (val, oldVal) => {\n      if (val === oldVal) return\n\n      if (val) {\n        isSelecting.value = true\n        search.value = props.multiple ? '' : String(model.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        if (!props.multiple && !search.value) model.value = []\n        else if (\n          highlightFirst.value &&\n          !listHasFocus.value &&\n          !model.value.some(({ value }) => value === displayItems.value[0].value)\n        ) {\n          select(displayItems.value[0])\n        }\n        menu.value = false\n        search.value = ''\n        selectionIndex.value = -1\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => item.value === s.value)\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ search.value }\n          onUpdate:modelValue={ onUpdateModelValue }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          onInput={ onInput }\n          onChange={ onChange }\n          class={[\n            'v-autocomplete',\n            `v-autocomplete--${props.multiple ? 'multiple' : 'single'}`,\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              'v-autocomplete--selection-slot': !!slots.selection,\n              'v-autocomplete--selecting-index': selectionIndex.value > -1,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          readonly={ props.readonly }\n          placeholder={ isDirty ? undefined : props.placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-autocomplete__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                      onScrollPassive={ onListScroll }\n                      tabindex=\"-1\"\n                      color={ props.itemColor ?? props.color }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            active: (highlightFirst.value && index === 0) ? true : undefined,\n                            onClick: () => select(item),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps }>\n                            {{\n                              prepend: ({ isSelected }) => (\n                                <>\n                                  { props.multiple && !props.hideSelected ? (\n                                    <VCheckboxBtn\n                                      key={ item.value }\n                                      modelValue={ isSelected }\n                                      ripple={ false }\n                                      tabindex=\"-1\"\n                                    />\n                                  ) : undefined }\n\n                                  { item.props.prependIcon && (\n                                    <VIcon icon={ item.props.prependIcon } />\n                                  )}\n                                </>\n                              ),\n                              title: () => {\n                                return isPristine.value\n                                  ? item.title\n                                  : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0)\n                              },\n                            }}\n                          </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-autocomplete__selection',\n                        index === selectionIndex.value && [\n                          'v-autocomplete__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-autocomplete__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-autocomplete__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-autocomplete__menu-icon\"\n                    icon={ props.menuIcon }\n                    onMousedown={ onMousedownMenuIcon }\n                    onClick={ noop }\n                    aria-label={ t(label.value) }\n                    title={ t(label.value) }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n"],
  "mappings": "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",
  "names": ["highlightResult", "text", "matches", "length", "Array", "isArray", "Error", "_createVNode", "_Fragment", "substr", "makeVAutocompleteProps", "propsFactory", "autoSelectFirst", "type", "Boolean", "String", "search", "makeFilterProps", "filterKeys", "makeSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "VAutocomplete", "genericComponent", "name", "props", "emits", "focused", "value", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "isFocused", "shallowRef", "isPristine", "listHasFocus", "vMenuRef", "vVirtualScrollRef", "_menu", "useProxiedModel", "menu", "computed", "get", "set", "v", "Î¨openChildren", "selectionIndex", "color", "label", "closeText", "openText", "items", "transformIn", "transformOut", "useItems", "textColorClasses", "textColorStyles", "useTextColor", "model", "wrapInArray", "transformed", "multiple", "counterValue", "form", "useForm", "filteredItems", "getMatches", "useFilter", "displayItems", "hideSelected", "filter", "filteredItem", "some", "s", "selectedValues", "map", "selection", "highlightFirst", "selectFirst", "title", "menuDisabled", "hideNoData", "readonly", "isReadonly", "listRef", "onListScroll", "onListKeydown", "useScrolling", "onClear", "e", "openOnClear", "onMousedownControl", "onMousedownMenuIcon", "preventDefault", "stopPropagation", "onKeydown", "selectionStart", "includes", "key", "select", "focus", "originalSelectionIndex", "selectedItem", "disabled", "prev", "setSelectionRange", "next", "onInput", "target", "onChange", "matchesSelector", "item", "find", "onAfterLeave", "onFocusin", "setTimeout", "onFocusout", "onUpdateModelValue", "isSelecting", "index", "findIndex", "valueComparator", "splice", "nextTick", "watch", "val", "oldVal", "at", "_ref2", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "useRender", "hasChips", "chips", "chip", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "_mergeProps", "$event", "externalValue", "class", "style", "undefined", "placeholder", "default", "VMenu", "eager", "menuProps", "VList", "itemColor", "VListItem", "noDataText", "VVirtualScroll", "_ref3", "itemRef", "itemProps", "mergeProps", "active", "onClick", "prepend", "_ref4", "isSelected", "VCheckboxBtn", "prependIcon", "VIcon", "onChipClose", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "closableChips", "VDefaultsProvider", "closable", "size", "_createTextVNode", "_len", "arguments", "args", "_key", "menuIcon", "noop", "forwardRefs"]
>>>>>>> ccc65404a54a6455d2236d9322e02ed1a537df07
}
