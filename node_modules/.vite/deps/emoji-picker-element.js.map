{
  "version": 3,
  "sources": ["../../emoji-picker-element/database.js", "../../emoji-picker-element/picker.js"],
  "sourcesContent": ["function assertNonEmptyString (str) {\n  if (typeof str !== 'string' || !str) {\n    throw new Error('expected a non-empty string, got: ' + str)\n  }\n}\n\nfunction assertNumber (number) {\n  if (typeof number !== 'number') {\n    throw new Error('expected a number, got: ' + number)\n  }\n}\n\nconst DB_VERSION_CURRENT = 1;\nconst DB_VERSION_INITIAL = 1;\nconst STORE_EMOJI = 'emoji';\nconst STORE_KEYVALUE = 'keyvalue';\nconst STORE_FAVORITES = 'favorites';\nconst FIELD_TOKENS = 'tokens';\nconst INDEX_TOKENS = 'tokens';\nconst FIELD_UNICODE = 'unicode';\nconst INDEX_COUNT = 'count';\nconst FIELD_GROUP = 'group';\nconst FIELD_ORDER = 'order';\nconst INDEX_GROUP_AND_ORDER = 'group-order';\nconst KEY_ETAG = 'eTag';\nconst KEY_URL = 'url';\nconst KEY_PREFERRED_SKINTONE = 'skinTone';\nconst MODE_READONLY = 'readonly';\nconst MODE_READWRITE = 'readwrite';\nconst INDEX_SKIN_UNICODE = 'skinUnicodes';\nconst FIELD_SKIN_UNICODE = 'skinUnicodes';\n\nconst DEFAULT_DATA_SOURCE = 'https://cdn.jsdelivr.net/npm/emoji-picker-element-data@^1/en/emojibase/data.json';\nconst DEFAULT_LOCALE = 'en';\n\n// like lodash's uniqBy but much smaller\nfunction uniqBy (arr, func) {\n  const set = new Set();\n  const res = [];\n  for (const item of arr) {\n    const key = func(item);\n    if (!set.has(key)) {\n      set.add(key);\n      res.push(item);\n    }\n  }\n  return res\n}\n\nfunction uniqEmoji (emojis) {\n  return uniqBy(emojis, _ => _.unicode)\n}\n\nfunction initialMigration (db) {\n  function createObjectStore (name, keyPath, indexes) {\n    const store = keyPath\n      ? db.createObjectStore(name, { keyPath })\n      : db.createObjectStore(name);\n    if (indexes) {\n      for (const [indexName, [keyPath, multiEntry]] of Object.entries(indexes)) {\n        store.createIndex(indexName, keyPath, { multiEntry });\n      }\n    }\n    return store\n  }\n\n  createObjectStore(STORE_KEYVALUE);\n  createObjectStore(STORE_EMOJI, /* keyPath */ FIELD_UNICODE, {\n    [INDEX_TOKENS]: [FIELD_TOKENS, /* multiEntry */ true],\n    [INDEX_GROUP_AND_ORDER]: [[FIELD_GROUP, FIELD_ORDER]],\n    [INDEX_SKIN_UNICODE]: [FIELD_SKIN_UNICODE, /* multiEntry */ true]\n  });\n  createObjectStore(STORE_FAVORITES, undefined, {\n    [INDEX_COUNT]: ['']\n  });\n}\n\nconst openIndexedDBRequests = {};\nconst databaseCache = {};\nconst onCloseListeners = {};\n\nfunction handleOpenOrDeleteReq (resolve, reject, req) {\n  // These things are almost impossible to test with fakeIndexedDB sadly\n  /* istanbul ignore next */\n  req.onerror = () => reject(req.error);\n  /* istanbul ignore next */\n  req.onblocked = () => reject(new Error('IDB blocked'));\n  req.onsuccess = () => resolve(req.result);\n}\n\nasync function createDatabase (dbName) {\n  const db = await new Promise((resolve, reject) => {\n    const req = indexedDB.open(dbName, DB_VERSION_CURRENT);\n    openIndexedDBRequests[dbName] = req;\n    req.onupgradeneeded = e => {\n      // Technically there is only one version, so we don't need this `if` check\n      // But if an old version of the JS is in another browser tab\n      // and it gets upgraded in the future and we have a new DB version, well...\n      // better safe than sorry.\n      /* istanbul ignore else */\n      if (e.oldVersion < DB_VERSION_INITIAL) {\n        initialMigration(req.result);\n      }\n    };\n    handleOpenOrDeleteReq(resolve, reject, req);\n  });\n  // Handle abnormal closes, e.g. \"delete database\" in chrome dev tools.\n  // No need for removeEventListener, because once the DB can no longer\n  // fire \"close\" events, it will auto-GC.\n  // Unfortunately cannot test in fakeIndexedDB: https://github.com/dumbmatter/fakeIndexedDB/issues/50\n  /* istanbul ignore next */\n  db.onclose = () => closeDatabase(dbName);\n  return db\n}\n\nfunction openDatabase (dbName) {\n  if (!databaseCache[dbName]) {\n    databaseCache[dbName] = createDatabase(dbName);\n  }\n  return databaseCache[dbName]\n}\n\nfunction dbPromise (db, storeName, readOnlyOrReadWrite, cb) {\n  return new Promise((resolve, reject) => {\n    // Use relaxed durability because neither the emoji data nor the favorites/preferred skin tone\n    // are really irreplaceable data. IndexedDB is just a cache in this case.\n    const txn = db.transaction(storeName, readOnlyOrReadWrite, { durability: 'relaxed' });\n    const store = typeof storeName === 'string'\n      ? txn.objectStore(storeName)\n      : storeName.map(name => txn.objectStore(name));\n    let res;\n    cb(store, txn, (result) => {\n      res = result;\n    });\n\n    txn.oncomplete = () => resolve(res);\n    /* istanbul ignore next */\n    txn.onerror = () => reject(txn.error);\n  })\n}\n\nfunction closeDatabase (dbName) {\n  // close any open requests\n  const req = openIndexedDBRequests[dbName];\n  const db = req && req.result;\n  if (db) {\n    db.close();\n    const listeners = onCloseListeners[dbName];\n    /* istanbul ignore else */\n    if (listeners) {\n      for (const listener of listeners) {\n        listener();\n      }\n    }\n  }\n  delete openIndexedDBRequests[dbName];\n  delete databaseCache[dbName];\n  delete onCloseListeners[dbName];\n}\n\nfunction deleteDatabase (dbName) {\n  return new Promise((resolve, reject) => {\n    // close any open requests\n    closeDatabase(dbName);\n    const req = indexedDB.deleteDatabase(dbName);\n    handleOpenOrDeleteReq(resolve, reject, req);\n  })\n}\n\n// The \"close\" event occurs during an abnormal shutdown, e.g. a user clearing their browser data.\n// However, it doesn't occur with the normal \"close\" event, so we handle that separately.\n// https://www.w3.org/TR/IndexedDB/#close-a-database-connection\nfunction addOnCloseListener (dbName, listener) {\n  let listeners = onCloseListeners[dbName];\n  if (!listeners) {\n    listeners = onCloseListeners[dbName] = [];\n  }\n  listeners.push(listener);\n}\n\n// list of emoticons that don't match a simple \\W+ regex\n// extracted using:\n// require('emoji-picker-element-data/en/emojibase/data.json').map(_ => _.emoticon).filter(Boolean).filter(_ => !/^\\W+$/.test(_))\nconst irregularEmoticons = new Set([\n  ':D', 'XD', \":'D\", 'O:)',\n  ':X', ':P', ';P', 'XP',\n  ':L', ':Z', ':j', '8D',\n  'XO', '8)', ':B', ':O',\n  ':S', \":'o\", 'Dx', 'X(',\n  'D:', ':C', '>0)', ':3',\n  '</3', '<3', '\\\\M/', ':E',\n  '8#'\n]);\n\nfunction extractTokens (str) {\n  return str\n    .split(/[\\s_]+/)\n    .map(word => {\n      if (!word.match(/\\w/) || irregularEmoticons.has(word)) {\n        // for pure emoticons like :) or :-), just leave them as-is\n        return word.toLowerCase()\n      }\n\n      return word\n        .replace(/[)(:,]/g, '')\n        .replace(/’/g, \"'\")\n        .toLowerCase()\n    }).filter(Boolean)\n}\n\nconst MIN_SEARCH_TEXT_LENGTH = 2;\n\n// This is an extra step in addition to extractTokens(). The difference here is that we expect\n// the input to have already been run through extractTokens(). This is useful for cases like\n// emoticons, where we don't want to do any tokenization (because it makes no sense to split up\n// \">:)\" by the colon) but we do want to lowercase it to have consistent search results, so that\n// the user can type ':P' or ':p' and still get the same result.\nfunction normalizeTokens (str) {\n  return str\n    .filter(Boolean)\n    .map(_ => _.toLowerCase())\n    .filter(_ => _.length >= MIN_SEARCH_TEXT_LENGTH)\n}\n\n// Transform emoji data for storage in IDB\nfunction transformEmojiData (emojiData) {\n  const res = emojiData.map(({ annotation, emoticon, group, order, shortcodes, skins, tags, emoji, version }) => {\n    const tokens = [...new Set(\n      normalizeTokens([\n        ...(shortcodes || []).map(extractTokens).flat(),\n        ...tags.map(extractTokens).flat(),\n        ...extractTokens(annotation),\n        emoticon\n      ])\n    )].sort();\n    const res = {\n      annotation,\n      group,\n      order,\n      tags,\n      tokens,\n      unicode: emoji,\n      version\n    };\n    if (emoticon) {\n      res.emoticon = emoticon;\n    }\n    if (shortcodes) {\n      res.shortcodes = shortcodes;\n    }\n    if (skins) {\n      res.skinTones = [];\n      res.skinUnicodes = [];\n      res.skinVersions = [];\n      for (const { tone, emoji, version } of skins) {\n        res.skinTones.push(tone);\n        res.skinUnicodes.push(emoji);\n        res.skinVersions.push(version);\n      }\n    }\n    return res\n  });\n  return res\n}\n\n// helper functions that help compress the code better\n\nfunction callStore (store, method, key, cb) {\n  store[method](key).onsuccess = e => (cb && cb(e.target.result));\n}\n\nfunction getIDB (store, key, cb) {\n  callStore(store, 'get', key, cb);\n}\n\nfunction getAllIDB (store, key, cb) {\n  callStore(store, 'getAll', key, cb);\n}\n\nfunction commit (txn) {\n  /* istanbul ignore else */\n  if (txn.commit) {\n    txn.commit();\n  }\n}\n\n// like lodash's minBy\nfunction minBy (array, func) {\n  let minItem = array[0];\n  for (let i = 1; i < array.length; i++) {\n    const item = array[i];\n    if (func(minItem) > func(item)) {\n      minItem = item;\n    }\n  }\n  return minItem\n}\n\n// return an array of results representing all items that are found in each one of the arrays\n//\n\nfunction findCommonMembers (arrays, uniqByFunc) {\n  const shortestArray = minBy(arrays, _ => _.length);\n  const results = [];\n  for (const item of shortestArray) {\n    // if this item is included in every array in the intermediate results, add it to the final results\n    if (!arrays.some(array => array.findIndex(_ => uniqByFunc(_) === uniqByFunc(item)) === -1)) {\n      results.push(item);\n    }\n  }\n  return results\n}\n\nasync function isEmpty (db) {\n  return !(await get(db, STORE_KEYVALUE, KEY_URL))\n}\n\nasync function hasData (db, url, eTag) {\n  const [oldETag, oldUrl] = await Promise.all([KEY_ETAG, KEY_URL]\n    .map(key => get(db, STORE_KEYVALUE, key)));\n  return (oldETag === eTag && oldUrl === url)\n}\n\nasync function doFullDatabaseScanForSingleResult (db, predicate) {\n  // This batching algorithm is just a perf improvement over a basic\n  // cursor. The BATCH_SIZE is an estimate of what would give the best\n  // perf for doing a full DB scan (worst case).\n  //\n  // Mini-benchmark for determining the best batch size:\n  //\n  // PERF=1 yarn build:rollup && yarn test:adhoc\n  //\n  // (async () => {\n  //   performance.mark('start')\n  //   await $('emoji-picker').database.getEmojiByShortcode('doesnotexist')\n  //   performance.measure('total', 'start')\n  //   console.log(performance.getEntriesByName('total').slice(-1)[0].duration)\n  // })()\n  const BATCH_SIZE = 50; // Typically around 150ms for 6x slowdown in Chrome for above benchmark\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    let lastKey;\n\n    const processNextBatch = () => {\n      emojiStore.getAll(lastKey && IDBKeyRange.lowerBound(lastKey, true), BATCH_SIZE).onsuccess = e => {\n        const results = e.target.result;\n        for (const result of results) {\n          lastKey = result.unicode;\n          if (predicate(result)) {\n            return cb(result)\n          }\n        }\n        if (results.length < BATCH_SIZE) {\n          return cb()\n        }\n        processNextBatch();\n      };\n    };\n    processNextBatch();\n  })\n}\n\nasync function loadData (db, emojiData, url, eTag) {\n  try {\n    const transformedData = transformEmojiData(emojiData);\n    await dbPromise(db, [STORE_EMOJI, STORE_KEYVALUE], MODE_READWRITE, ([emojiStore, metaStore], txn) => {\n      let oldETag;\n      let oldUrl;\n      let todo = 0;\n\n      function checkFetched () {\n        if (++todo === 2) { // 2 requests made\n          onFetched();\n        }\n      }\n\n      function onFetched () {\n        if (oldETag === eTag && oldUrl === url) {\n          // check again within the transaction to guard against concurrency, e.g. multiple browser tabs\n          return\n        }\n        // delete old data\n        emojiStore.clear();\n        // insert new data\n        for (const data of transformedData) {\n          emojiStore.put(data);\n        }\n        metaStore.put(eTag, KEY_ETAG);\n        metaStore.put(url, KEY_URL);\n        commit(txn);\n      }\n\n      getIDB(metaStore, KEY_ETAG, result => {\n        oldETag = result;\n        checkFetched();\n      });\n\n      getIDB(metaStore, KEY_URL, result => {\n        oldUrl = result;\n        checkFetched();\n      });\n    });\n  } finally {\n  }\n}\n\nasync function getEmojiByGroup (db, group) {\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    const range = IDBKeyRange.bound([group, 0], [group + 1, 0], false, true);\n    getAllIDB(emojiStore.index(INDEX_GROUP_AND_ORDER), range, cb);\n  })\n}\n\nasync function getEmojiBySearchQuery (db, query) {\n  const tokens = normalizeTokens(extractTokens(query));\n\n  if (!tokens.length) {\n    return []\n  }\n\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    // get all results that contain all tokens (i.e. an AND query)\n    const intermediateResults = [];\n\n    const checkDone = () => {\n      if (intermediateResults.length === tokens.length) {\n        onDone();\n      }\n    };\n\n    const onDone = () => {\n      const results = findCommonMembers(intermediateResults, _ => _.unicode);\n      cb(results.sort((a, b) => a.order < b.order ? -1 : 1));\n    };\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      const range = i === tokens.length - 1\n        ? IDBKeyRange.bound(token, token + '\\uffff', false, true) // treat last token as a prefix search\n        : IDBKeyRange.only(token); // treat all other tokens as an exact match\n      getAllIDB(emojiStore.index(INDEX_TOKENS), range, result => {\n        intermediateResults.push(result);\n        checkDone();\n      });\n    }\n  })\n}\n\n// This could have been implemented as an IDB index on shortcodes, but it seemed wasteful to do that\n// when we can already query by tokens and this will give us what we're looking for 99.9% of the time\nasync function getEmojiByShortcode (db, shortcode) {\n  const emojis = await getEmojiBySearchQuery(db, shortcode);\n\n  // In very rare cases (e.g. the shortcode \"v\" as in \"v for victory\"), we cannot search because\n  // there are no usable tokens (too short in this case). In that case, we have to do an inefficient\n  // full-database scan, which I believe is an acceptable tradeoff for not having to have an extra\n  // index on shortcodes.\n\n  if (!emojis.length) {\n    const predicate = _ => ((_.shortcodes || []).includes(shortcode.toLowerCase()));\n    return (await doFullDatabaseScanForSingleResult(db, predicate)) || null\n  }\n\n  return emojis.filter(_ => {\n    const lowerShortcodes = (_.shortcodes || []).map(_ => _.toLowerCase());\n    return lowerShortcodes.includes(shortcode.toLowerCase())\n  })[0] || null\n}\n\nasync function getEmojiByUnicode (db, unicode) {\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => (\n    getIDB(emojiStore, unicode, result => {\n      if (result) {\n        return cb(result)\n      }\n      getIDB(emojiStore.index(INDEX_SKIN_UNICODE), unicode, result => cb(result || null));\n    })\n  ))\n}\n\nfunction get (db, storeName, key) {\n  return dbPromise(db, storeName, MODE_READONLY, (store, txn, cb) => (\n    getIDB(store, key, cb)\n  ))\n}\n\nfunction set (db, storeName, key, value) {\n  return dbPromise(db, storeName, MODE_READWRITE, (store, txn) => {\n    store.put(value, key);\n    commit(txn);\n  })\n}\n\nfunction incrementFavoriteEmojiCount (db, unicode) {\n  return dbPromise(db, STORE_FAVORITES, MODE_READWRITE, (store, txn) => (\n    getIDB(store, unicode, result => {\n      store.put((result || 0) + 1, unicode);\n      commit(txn);\n    })\n  ))\n}\n\nfunction getTopFavoriteEmoji (db, customEmojiIndex, limit) {\n  if (limit === 0) {\n    return []\n  }\n  return dbPromise(db, [STORE_FAVORITES, STORE_EMOJI], MODE_READONLY, ([favoritesStore, emojiStore], txn, cb) => {\n    const results = [];\n    favoritesStore.index(INDEX_COUNT).openCursor(undefined, 'prev').onsuccess = e => {\n      const cursor = e.target.result;\n      if (!cursor) { // no more results\n        return cb(results)\n      }\n\n      function addResult (result) {\n        results.push(result);\n        if (results.length === limit) {\n          return cb(results) // done, reached the limit\n        }\n        cursor.continue();\n      }\n\n      const unicodeOrName = cursor.primaryKey;\n      const custom = customEmojiIndex.byName(unicodeOrName);\n      if (custom) {\n        return addResult(custom)\n      }\n      // This could be done in parallel (i.e. make the cursor and the get()s parallelized),\n      // but my testing suggests it's not actually faster.\n      getIDB(emojiStore, unicodeOrName, emoji => {\n        if (emoji) {\n          return addResult(emoji)\n        }\n        // emoji not found somehow, ignore (may happen if custom emoji change)\n        cursor.continue();\n      });\n    };\n  })\n}\n\n// trie data structure for prefix searches\n// loosely based on https://github.com/nolanlawson/substring-trie\n\nconst CODA_MARKER = ''; // marks the end of the string\n\nfunction trie (arr, itemToTokens) {\n  const map = new Map();\n  for (const item of arr) {\n    const tokens = itemToTokens(item);\n    for (const token of tokens) {\n      let currentMap = map;\n      for (let i = 0; i < token.length; i++) {\n        const char = token.charAt(i);\n        let nextMap = currentMap.get(char);\n        if (!nextMap) {\n          nextMap = new Map();\n          currentMap.set(char, nextMap);\n        }\n        currentMap = nextMap;\n      }\n      let valuesAtCoda = currentMap.get(CODA_MARKER);\n      if (!valuesAtCoda) {\n        valuesAtCoda = [];\n        currentMap.set(CODA_MARKER, valuesAtCoda);\n      }\n      valuesAtCoda.push(item);\n    }\n  }\n\n  const search = (query, exact) => {\n    let currentMap = map;\n    for (let i = 0; i < query.length; i++) {\n      const char = query.charAt(i);\n      const nextMap = currentMap.get(char);\n      if (nextMap) {\n        currentMap = nextMap;\n      } else {\n        return []\n      }\n    }\n\n    if (exact) {\n      const results = currentMap.get(CODA_MARKER);\n      return results || []\n    }\n\n    const results = [];\n    // traverse\n    const queue = [currentMap];\n    while (queue.length) {\n      const currentMap = queue.shift();\n      const entriesSortedByKey = [...currentMap.entries()].sort((a, b) => a[0] < b[0] ? -1 : 1);\n      for (const [key, value] of entriesSortedByKey) {\n        if (key === CODA_MARKER) { // CODA_MARKER always comes first; it's the empty string\n          results.push(...value);\n        } else {\n          queue.push(value);\n        }\n      }\n    }\n    return results\n  };\n\n  return search\n}\n\nconst requiredKeys$1 = [\n  'name',\n  'url'\n];\n\nfunction assertCustomEmojis (customEmojis) {\n  const isArray = customEmojis && Array.isArray(customEmojis);\n  const firstItemIsFaulty = isArray &&\n    customEmojis.length &&\n    (!customEmojis[0] || requiredKeys$1.some(key => !(key in customEmojis[0])));\n  if (!isArray || firstItemIsFaulty) {\n    throw new Error('Custom emojis are in the wrong format')\n  }\n}\n\nfunction customEmojiIndex (customEmojis) {\n  assertCustomEmojis(customEmojis);\n\n  const sortByName = (a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;\n\n  //\n  // all()\n  //\n  const all = customEmojis.sort(sortByName);\n\n  //\n  // search()\n  //\n  const emojiToTokens = emoji => (\n    [...new Set((emoji.shortcodes || []).map(shortcode => extractTokens(shortcode)).flat())]\n  );\n  const searchTrie = trie(customEmojis, emojiToTokens);\n  const searchByExactMatch = _ => searchTrie(_, true);\n  const searchByPrefix = _ => searchTrie(_, false);\n\n  // Search by query for custom emoji. Similar to how we do this in IDB, the last token\n  // is treated as a prefix search, but every other one is treated as an exact match.\n  // Then we AND the results together\n  const search = query => {\n    const tokens = extractTokens(query);\n    const intermediateResults = tokens.map((token, i) => (\n      (i < tokens.length - 1 ? searchByExactMatch : searchByPrefix)(token)\n    ));\n    return findCommonMembers(intermediateResults, _ => _.name).sort(sortByName)\n  };\n\n  //\n  // byShortcode, byName\n  //\n  const shortcodeToEmoji = new Map();\n  const nameToEmoji = new Map();\n  for (const customEmoji of customEmojis) {\n    nameToEmoji.set(customEmoji.name.toLowerCase(), customEmoji);\n    for (const shortcode of (customEmoji.shortcodes || [])) {\n      shortcodeToEmoji.set(shortcode.toLowerCase(), customEmoji);\n    }\n  }\n\n  const byShortcode = shortcode => shortcodeToEmoji.get(shortcode.toLowerCase());\n  const byName = name => nameToEmoji.get(name.toLowerCase());\n\n  return {\n    all,\n    search,\n    byShortcode,\n    byName\n  }\n}\n\nconst isFirefoxContentScript = typeof wrappedJSObject !== 'undefined';\n\n// remove some internal implementation details, i.e. the \"tokens\" array on the emoji object\n// essentially, convert the emoji from the version stored in IDB to the version used in-memory\nfunction cleanEmoji (emoji) {\n  if (!emoji) {\n    return emoji\n  }\n  // if inside a Firefox content script, need to clone the emoji object to prevent Firefox from complaining about\n  // cross-origin object. See: https://github.com/nolanlawson/emoji-picker-element/issues/356\n  /* istanbul ignore if */\n  if (isFirefoxContentScript) {\n    emoji = structuredClone(emoji);\n  }\n  delete emoji.tokens;\n  if (emoji.skinTones) {\n    const len = emoji.skinTones.length;\n    emoji.skins = Array(len);\n    for (let i = 0; i < len; i++) {\n      emoji.skins[i] = {\n        tone: emoji.skinTones[i],\n        unicode: emoji.skinUnicodes[i],\n        version: emoji.skinVersions[i]\n      };\n    }\n    delete emoji.skinTones;\n    delete emoji.skinUnicodes;\n    delete emoji.skinVersions;\n  }\n  return emoji\n}\n\nfunction warnETag (eTag) {\n  if (!eTag) {\n    console.warn('emoji-picker-element is more efficient if the dataSource server exposes an ETag header.');\n  }\n}\n\nconst requiredKeys = [\n  'annotation',\n  'emoji',\n  'group',\n  'order',\n  'tags',\n  'version'\n];\n\nfunction assertEmojiData (emojiData) {\n  if (!emojiData ||\n    !Array.isArray(emojiData) ||\n    !emojiData[0] ||\n    (typeof emojiData[0] !== 'object') ||\n    requiredKeys.some(key => (!(key in emojiData[0])))) {\n    throw new Error('Emoji data is in the wrong format')\n  }\n}\n\nfunction assertStatus (response, dataSource) {\n  if (Math.floor(response.status / 100) !== 2) {\n    throw new Error('Failed to fetch: ' + dataSource + ':  ' + response.status)\n  }\n}\n\nasync function getETag (dataSource) {\n  const response = await fetch(dataSource, { method: 'HEAD' });\n  assertStatus(response, dataSource);\n  const eTag = response.headers.get('etag');\n  warnETag(eTag);\n  return eTag\n}\n\nasync function getETagAndData (dataSource) {\n  const response = await fetch(dataSource);\n  assertStatus(response, dataSource);\n  const eTag = response.headers.get('etag');\n  warnETag(eTag);\n  const emojiData = await response.json();\n  assertEmojiData(emojiData);\n  return [eTag, emojiData]\n}\n\n// TODO: including these in blob-util.ts causes typedoc to generate docs for them,\n// even with --excludePrivate ¯\\_(ツ)_/¯\n/** @private */\n/**\n * Convert an `ArrayBuffer` to a binary string.\n *\n * Example:\n *\n * ```js\n * var myString = blobUtil.arrayBufferToBinaryString(arrayBuff)\n * ```\n *\n * @param buffer - array buffer\n * @returns binary string\n */\nfunction arrayBufferToBinaryString(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var length = bytes.byteLength;\n    var i = -1;\n    while (++i < length) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return binary;\n}\n/**\n * Convert a binary string to an `ArrayBuffer`.\n *\n * ```js\n * var myBuffer = blobUtil.binaryStringToArrayBuffer(binaryString)\n * ```\n *\n * @param binary - binary string\n * @returns array buffer\n */\nfunction binaryStringToArrayBuffer(binary) {\n    var length = binary.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    var i = -1;\n    while (++i < length) {\n        arr[i] = binary.charCodeAt(i);\n    }\n    return buf;\n}\n\n// generate a checksum based on the stringified JSON\nasync function jsonChecksum (object) {\n  const inString = JSON.stringify(object);\n  const inBuffer = binaryStringToArrayBuffer(inString);\n  // this does not need to be cryptographically secure, SHA-1 is fine\n  const outBuffer = await crypto.subtle.digest('SHA-1', inBuffer);\n  const outBinString = arrayBufferToBinaryString(outBuffer);\n  const res = btoa(outBinString);\n  return res\n}\n\nasync function checkForUpdates (db, dataSource) {\n  // just do a simple HEAD request first to see if the eTags match\n  let emojiData;\n  let eTag = await getETag(dataSource);\n  if (!eTag) { // work around lack of ETag/Access-Control-Expose-Headers\n    const eTagAndData = await getETagAndData(dataSource);\n    eTag = eTagAndData[0];\n    emojiData = eTagAndData[1];\n    if (!eTag) {\n      eTag = await jsonChecksum(emojiData);\n    }\n  }\n  if (await hasData(db, dataSource, eTag)) ; else {\n    if (!emojiData) {\n      const eTagAndData = await getETagAndData(dataSource);\n      emojiData = eTagAndData[1];\n    }\n    await loadData(db, emojiData, dataSource, eTag);\n  }\n}\n\nasync function loadDataForFirstTime (db, dataSource) {\n  let [eTag, emojiData] = await getETagAndData(dataSource);\n  if (!eTag) {\n    // Handle lack of support for ETag or Access-Control-Expose-Headers\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers#Browser_compatibility\n    eTag = await jsonChecksum(emojiData);\n  }\n\n  await loadData(db, emojiData, dataSource, eTag);\n}\n\nclass Database {\n  constructor ({ dataSource = DEFAULT_DATA_SOURCE, locale = DEFAULT_LOCALE, customEmoji = [] } = {}) {\n    this.dataSource = dataSource;\n    this.locale = locale;\n    this._dbName = `emoji-picker-element-${this.locale}`;\n    this._db = undefined;\n    this._lazyUpdate = undefined;\n    this._custom = customEmojiIndex(customEmoji);\n\n    this._clear = this._clear.bind(this);\n    this._ready = this._init();\n  }\n\n  async _init () {\n    const db = this._db = await openDatabase(this._dbName);\n\n    addOnCloseListener(this._dbName, this._clear);\n    const dataSource = this.dataSource;\n    const empty = await isEmpty(db);\n\n    if (empty) {\n      await loadDataForFirstTime(db, dataSource);\n    } else { // offline-first - do an update asynchronously\n      this._lazyUpdate = checkForUpdates(db, dataSource);\n    }\n  }\n\n  async ready () {\n    const checkReady = async () => {\n      if (!this._ready) {\n        this._ready = this._init();\n      }\n      return this._ready\n    };\n    await checkReady();\n    // There's a possibility of a race condition where the element gets added, removed, and then added again\n    // with a particular timing, which would set the _db to undefined.\n    // We *could* do a while loop here, but that seems excessive and could lead to an infinite loop.\n    if (!this._db) {\n      await checkReady();\n    }\n  }\n\n  async getEmojiByGroup (group) {\n    assertNumber(group);\n    await this.ready();\n    return uniqEmoji(await getEmojiByGroup(this._db, group)).map(cleanEmoji)\n  }\n\n  async getEmojiBySearchQuery (query) {\n    assertNonEmptyString(query);\n    await this.ready();\n    const customs = this._custom.search(query);\n    const natives = uniqEmoji(await getEmojiBySearchQuery(this._db, query)).map(cleanEmoji);\n    return [\n      ...customs,\n      ...natives\n    ]\n  }\n\n  async getEmojiByShortcode (shortcode) {\n    assertNonEmptyString(shortcode);\n    await this.ready();\n    const custom = this._custom.byShortcode(shortcode);\n    if (custom) {\n      return custom\n    }\n    return cleanEmoji(await getEmojiByShortcode(this._db, shortcode))\n  }\n\n  async getEmojiByUnicodeOrName (unicodeOrName) {\n    assertNonEmptyString(unicodeOrName);\n    await this.ready();\n    const custom = this._custom.byName(unicodeOrName);\n    if (custom) {\n      return custom\n    }\n    return cleanEmoji(await getEmojiByUnicode(this._db, unicodeOrName))\n  }\n\n  async getPreferredSkinTone () {\n    await this.ready();\n    return (await get(this._db, STORE_KEYVALUE, KEY_PREFERRED_SKINTONE)) || 0\n  }\n\n  async setPreferredSkinTone (skinTone) {\n    assertNumber(skinTone);\n    await this.ready();\n    return set(this._db, STORE_KEYVALUE, KEY_PREFERRED_SKINTONE, skinTone)\n  }\n\n  async incrementFavoriteEmojiCount (unicodeOrName) {\n    assertNonEmptyString(unicodeOrName);\n    await this.ready();\n    return incrementFavoriteEmojiCount(this._db, unicodeOrName)\n  }\n\n  async getTopFavoriteEmoji (limit) {\n    assertNumber(limit);\n    await this.ready();\n    return (await getTopFavoriteEmoji(this._db, this._custom, limit)).map(cleanEmoji)\n  }\n\n  set customEmoji (customEmojis) {\n    this._custom = customEmojiIndex(customEmojis);\n  }\n\n  get customEmoji () {\n    return this._custom.all\n  }\n\n  async _shutdown () {\n    await this.ready(); // reopen if we've already been closed/deleted\n    try {\n      await this._lazyUpdate; // allow any lazy updates to process before closing/deleting\n    } catch (err) { /* ignore network errors (offline-first) */ }\n  }\n\n  // clear references to IDB, e.g. during a close event\n  _clear () {\n    // We don't need to call removeEventListener or remove the manual \"close\" listeners.\n    // The memory leak tests prove this is unnecessary. It's because:\n    // 1) IDBDatabases that can no longer fire \"close\" automatically have listeners GCed\n    // 2) we clear the manual close listeners in databaseLifecycle.js.\n    this._db = this._ready = this._lazyUpdate = undefined;\n  }\n\n  async close () {\n    await this._shutdown();\n    await closeDatabase(this._dbName);\n  }\n\n  async delete () {\n    await this._shutdown();\n    await deleteDatabase(this._dbName);\n  }\n}\n\nexport { Database as default };\n", "import Database from './database.js';\n\n/** @returns {void} */\nfunction noop() {}\n\nfunction run(fn) {\n\treturn fn();\n}\n\nfunction blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nfunction run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nfunction is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nfunction safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @returns {boolean} */\nfunction is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\nfunction action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @type {typeof globalThis} */\nconst globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nfunction detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nfunction element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nfunction text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nfunction listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nfunction attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nfunction set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @returns {void} */\nfunction set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nfunction set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n\nlet current_component;\n\n/** @returns {void} */\nfunction set_current_component(component) {\n\tcurrent_component = component;\n}\n\nconst dirty_components = [];\nconst binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nfunction schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {void} */\nfunction add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nfunction flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nfunction flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n\nconst outroing = new Set();\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nfunction transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n\n// general each functions:\n\nfunction ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator && array_like_or_iterator.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nfunction destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {any[]} */\nfunction update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nfunction mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nfunction destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nfunction init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map((parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\t{\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tmount_component(component, options.target, undefined);\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nclass SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n\n// via https://unpkg.com/browse/emojibase-data@6.0.0/meta/groups.json\nconst allGroups = [\n  [-1, '✨', 'custom'],\n  [0, '😀', 'smileys-emotion'],\n  [1, '👋', 'people-body'],\n  [3, '🐱', 'animals-nature'],\n  [4, '🍎', 'food-drink'],\n  [5, '🏠️', 'travel-places'],\n  [6, '⚽', 'activities'],\n  [7, '📝', 'objects'],\n  [8, '⛔️', 'symbols'],\n  [9, '🏁', 'flags']\n].map(([id, emoji, name]) => ({ id, emoji, name }));\n\nconst groups = allGroups.slice(1);\nconst customGroup = allGroups[0];\n\nconst MIN_SEARCH_TEXT_LENGTH = 2;\nconst NUM_SKIN_TONES = 6;\n\n/* istanbul ignore next */\nconst rIC = typeof requestIdleCallback === 'function' ? requestIdleCallback : setTimeout;\n\n// check for ZWJ (zero width joiner) character\nfunction hasZwj (emoji) {\n  return emoji.unicode.includes('\\u200d')\n}\n\n// Find one good representative emoji from each version to test by checking its color.\n// Ideally it should have color in the center. For some inspiration, see:\n// https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n//\n// Note that for certain versions (12.1, 13.1), there is no point in testing them explicitly, because\n// all the emoji from this version are compound-emoji from previous versions. So they would pass a color\n// test, even in browsers that display them as double emoji. (E.g. \"face in clouds\" might render as\n// \"face without mouth\" plus \"fog\".) These emoji can only be filtered using the width test,\n// which happens in checkZwjSupport.js.\nconst versionsAndTestEmoji = {\n  '🫨': 15,\n  '🫠': 14,\n  '🥲': 13.1, // smiling face with tear, technically from v13 but see note above\n  '🥻': 12.1, // sari, technically from v12 but see note above\n  '🥰': 11,\n  '🤩': 5,\n  '👱‍♀️': 4,\n  '🤣': 3,\n  '👁️‍🗨️': 2,\n  '😀': 1,\n  '😐️': 0.7,\n  '😃': 0.6\n};\n\nconst TIMEOUT_BEFORE_LOADING_MESSAGE = 1000; // 1 second\nconst DEFAULT_SKIN_TONE_EMOJI = '🖐️';\nconst DEFAULT_NUM_COLUMNS = 8;\n\n// Based on https://fivethirtyeight.com/features/the-100-most-used-emojis/ and\n// https://blog.emojipedia.org/facebook-reveals-most-and-least-used-emojis/ with\n// a bit of my own curation. (E.g. avoid the \"OK\" gesture because of connotations:\n// https://emojipedia.org/ok-hand/)\nconst MOST_COMMONLY_USED_EMOJI = [\n  '😊',\n  '😒',\n  '♥️',\n  '👍️',\n  '😍',\n  '😂',\n  '😭',\n  '☺️',\n  '😔',\n  '😩',\n  '😏',\n  '💕',\n  '🙌',\n  '😘'\n];\n\n// It's important to list Twemoji Mozilla before everything else, because Mozilla bundles their\n// own font on some platforms (notably Windows and Linux as of this writing). Typically, Mozilla\n// updates faster than the underlying OS, and we don't want to render older emoji in one font and\n// newer emoji in another font:\n// https://github.com/nolanlawson/emoji-picker-element/pull/268#issuecomment-1073347283\nconst FONT_FAMILY = '\"Twemoji Mozilla\",\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",' +\n  '\"Noto Color Emoji\",\"EmojiOne Color\",\"Android Emoji\",sans-serif';\n\n/* istanbul ignore next */\nconst DEFAULT_CATEGORY_SORTING = (a, b) => a < b ? -1 : a > b ? 1 : 0;\n\n// Test if an emoji is supported by rendering it to canvas and checking that the color is not black\n// See https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n// and https://www.npmjs.com/package/if-emoji for inspiration\n// This implementation is largely borrowed from if-emoji, adding the font-family\n\n\nconst getTextFeature = (text, color) => {\n  const canvas = document.createElement('canvas');\n  canvas.width = canvas.height = 1;\n\n  const ctx = canvas.getContext('2d');\n  ctx.textBaseline = 'top';\n  ctx.font = `100px ${FONT_FAMILY}`;\n  ctx.fillStyle = color;\n  ctx.scale(0.01, 0.01);\n  ctx.fillText(text, 0, 0);\n\n  return ctx.getImageData(0, 0, 1, 1).data\n};\n\nconst compareFeatures = (feature1, feature2) => {\n  const feature1Str = [...feature1].join(',');\n  const feature2Str = [...feature2].join(',');\n  // This is RGBA, so for 0,0,0, we are checking that the first RGB is not all zeroes.\n  // Most of the time when unsupported this is 0,0,0,0, but on Chrome on Mac it is\n  // 0,0,0,61 - there is a transparency here.\n  return feature1Str === feature2Str && !feature1Str.startsWith('0,0,0,')\n};\n\nfunction testColorEmojiSupported (text) {\n  // Render white and black and then compare them to each other and ensure they're the same\n  // color, and neither one is black. This shows that the emoji was rendered in color.\n  const feature1 = getTextFeature(text, '#000');\n  const feature2 = getTextFeature(text, '#fff');\n  return feature1 && feature2 && compareFeatures(feature1, feature2)\n}\n\n// rather than check every emoji ever, which would be expensive, just check some representatives from the\n// different emoji releases to determine what the font supports\n\nfunction determineEmojiSupportLevel () {\n  const entries = Object.entries(versionsAndTestEmoji);\n  try {\n    // start with latest emoji and work backwards\n    for (const [emoji, version] of entries) {\n      if (testColorEmojiSupported(emoji)) {\n        return version\n      }\n    }\n  } catch (e) { // canvas error\n  } finally {\n  }\n  // In case of an error, be generous and just assume all emoji are supported (e.g. for canvas errors\n  // due to anti-fingerprinting add-ons). Better to show some gray boxes than nothing at all.\n  return entries[0][1] // first one in the list is the most recent version\n}\n\n// Check which emojis we know for sure aren't supported, based on Unicode version level\nlet promise;\nconst detectEmojiSupportLevel = () => {\n  if (!promise) {\n    // Delay so it can run while the IDB database is being created by the browser (on another thread).\n    // This helps especially with first load – we want to start pre-populating the database on the main thread,\n    // and then wait for IDB to commit everything, and while waiting we run this check.\n    promise = new Promise(resolve => (\n      rIC(() => (\n        resolve(determineEmojiSupportLevel()) // delay so ideally this can run while IDB is first populating\n      ))\n    ));\n  }\n  return promise\n};\n// determine which emojis containing ZWJ (zero width joiner) characters\n// are supported (rendered as one glyph) rather than unsupported (rendered as two or more glyphs)\nconst supportedZwjEmojis = new Map();\n\nconst VARIATION_SELECTOR = '\\ufe0f';\nconst SKINTONE_MODIFIER = '\\ud83c';\nconst ZWJ = '\\u200d';\nconst LIGHT_SKIN_TONE = 0x1F3FB;\nconst LIGHT_SKIN_TONE_MODIFIER = 0xdffb;\n\n// TODO: this is a naive implementation, we can improve it later\n// It's only used for the skintone picker, so as long as people don't customize with\n// really exotic emoji then it should work fine\nfunction applySkinTone (str, skinTone) {\n  if (skinTone === 0) {\n    return str\n  }\n  const zwjIndex = str.indexOf(ZWJ);\n  if (zwjIndex !== -1) {\n    return str.substring(0, zwjIndex) +\n      String.fromCodePoint(LIGHT_SKIN_TONE + skinTone - 1) +\n      str.substring(zwjIndex)\n  }\n  if (str.endsWith(VARIATION_SELECTOR)) {\n    str = str.substring(0, str.length - 1);\n  }\n  return str + SKINTONE_MODIFIER + String.fromCodePoint(LIGHT_SKIN_TONE_MODIFIER + skinTone - 1)\n}\n\nfunction halt (event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// Implementation left/right or up/down navigation, circling back when you\n// reach the start/end of the list\nfunction incrementOrDecrement (decrement, val, arr) {\n  val += (decrement ? -1 : 1);\n  if (val < 0) {\n    val = arr.length - 1;\n  } else if (val >= arr.length) {\n    val = 0;\n  }\n  return val\n}\n\n// like lodash's uniqBy but much smaller\nfunction uniqBy (arr, func) {\n  const set = new Set();\n  const res = [];\n  for (const item of arr) {\n    const key = func(item);\n    if (!set.has(key)) {\n      set.add(key);\n      res.push(item);\n    }\n  }\n  return res\n}\n\n// We don't need all the data on every emoji, and there are specific things we need\n// for the UI, so build a \"view model\" from the emoji object we got from the database\n\nfunction summarizeEmojisForUI (emojis, emojiSupportLevel) {\n  const toSimpleSkinsMap = skins => {\n    const res = {};\n    for (const skin of skins) {\n      // ignore arrays like [1, 2] with multiple skin tones\n      // also ignore variants that are in an unsupported emoji version\n      // (these do exist - variants from a different version than their base emoji)\n      if (typeof skin.tone === 'number' && skin.version <= emojiSupportLevel) {\n        res[skin.tone] = skin.unicode;\n      }\n    }\n    return res\n  };\n\n  return emojis.map(({ unicode, skins, shortcodes, url, name, category, annotation }) => ({\n    unicode,\n    name,\n    shortcodes,\n    url,\n    category,\n    annotation,\n    id: unicode || name,\n    skins: skins && toSimpleSkinsMap(skins)\n  }))\n}\n\n// import rAF from one place so that the bundle size is a bit smaller\nconst rAF = requestAnimationFrame;\n\n// Svelte action to calculate the width of an element and auto-update\n// using ResizeObserver. If ResizeObserver is unsupported, we just use rAF once\n// and don't bother to update.\n\n\nlet resizeObserverSupported = typeof ResizeObserver === 'function';\n\nfunction calculateWidth (node, onUpdate) {\n  let resizeObserver;\n  if (resizeObserverSupported) {\n    resizeObserver = new ResizeObserver(entries => (\n      onUpdate(entries[0].contentRect.width)\n    ));\n    resizeObserver.observe(node);\n  } else { // just set the width once, don't bother trying to track it\n    rAF(() => (\n      onUpdate(node.getBoundingClientRect().width)\n    ));\n  }\n\n  // cleanup function (called on destroy)\n  return {\n    destroy () {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    }\n  }\n}\n\n// get the width of the text inside of a DOM node, via https://stackoverflow.com/a/59525891/680742\nfunction calculateTextWidth (node) {\n  /* istanbul ignore else */\n  {\n    const range = document.createRange();\n    range.selectNode(node.firstChild);\n    return range.getBoundingClientRect().width\n  }\n}\n\nlet baselineEmojiWidth;\n\nfunction checkZwjSupport (zwjEmojisToCheck, baselineEmoji, emojiToDomNode) {\n  for (const emoji of zwjEmojisToCheck) {\n    const domNode = emojiToDomNode(emoji);\n    const emojiWidth = calculateTextWidth(domNode);\n    if (typeof baselineEmojiWidth === 'undefined') { // calculate the baseline emoji width only once\n      baselineEmojiWidth = calculateTextWidth(baselineEmoji);\n    }\n    // On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n    // against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n    // floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n    // So here we set the threshold at 1.8 times the size of the baseline emoji.\n    const supported = emojiWidth / 1.8 < baselineEmojiWidth;\n    supportedZwjEmojis.set(emoji.unicode, supported);\n  }\n}\n\n// Measure after style/layout are complete\n// See https://github.com/andrewiggins/afterframe\n\n\nconst requestPostAnimationFrame = callback => {\n  rAF(() => {\n    setTimeout(callback);\n  });\n};\n\n// like lodash's uniq\n\nfunction uniq (arr) {\n  return uniqBy(arr, _ => _)\n}\n\n// Note we put this in its own function outside Picker.js to avoid Svelte doing an invalidation on the \"setter\" here.\n// At best the invalidation is useless, at worst it can cause infinite loops:\n// https://github.com/nolanlawson/emoji-picker-element/pull/180\n// https://github.com/sveltejs/svelte/issues/6521\n// Also note tabpanelElement can be null if the element is disconnected immediately after connected\nfunction resetScrollTopIfPossible (element) {\n  if (element) {\n    element.scrollTop = 0;\n  }\n}\n\n/* src/picker/components/Picker/Picker.svelte generated by Svelte v4.2.3 */\n\nconst { Map: Map_1 } = globals;\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[66] = list[i];\n\tchild_ctx[68] = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[69] = list[i];\n\tchild_ctx[68] = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_2(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[66] = list[i];\n\tchild_ctx[68] = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_3(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[72] = list[i];\n\treturn child_ctx;\n}\n\nfunction get_each_context_4(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[75] = list[i];\n\tchild_ctx[68] = i;\n\treturn child_ctx;\n}\n\n// (50:38) {#each skinTones as skinTone, i (skinTone)}\nfunction create_each_block_4(key_1, ctx) {\n\tlet div;\n\tlet t_value = /*skinTone*/ ctx[75] + \"\";\n\tlet t;\n\tlet div_id_value;\n\tlet div_class_value;\n\tlet div_aria_selected_value;\n\tlet div_title_value;\n\tlet div_aria_label_value;\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tt = text(t_value);\n\t\t\tattr(div, \"id\", div_id_value = \"skintone-\" + /*i*/ ctx[68]);\n\n\t\t\tattr(div, \"class\", div_class_value = \"emoji \" + (/*i*/ ctx[68] === /*activeSkinTone*/ ctx[20]\n\t\t\t? 'active'\n\t\t\t: ''));\n\n\t\t\tattr(div, \"aria-selected\", div_aria_selected_value = /*i*/ ctx[68] === /*activeSkinTone*/ ctx[20]);\n\t\t\tattr(div, \"role\", \"option\");\n\t\t\tattr(div, \"title\", div_title_value = /*i18n*/ ctx[0].skinTones[/*i*/ ctx[68]]);\n\t\t\tattr(div, \"aria-label\", div_aria_label_value = /*i18n*/ ctx[0].skinTones[/*i*/ ctx[68]]);\n\t\t\tthis.first = div;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, t);\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty[0] & /*skinTones*/ 512 && t_value !== (t_value = /*skinTone*/ ctx[75] + \"\")) set_data(t, t_value);\n\n\t\t\tif (dirty[0] & /*skinTones*/ 512 && div_id_value !== (div_id_value = \"skintone-\" + /*i*/ ctx[68])) {\n\t\t\t\tattr(div, \"id\", div_id_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTones, activeSkinTone*/ 1049088 && div_class_value !== (div_class_value = \"emoji \" + (/*i*/ ctx[68] === /*activeSkinTone*/ ctx[20]\n\t\t\t? 'active'\n\t\t\t: ''))) {\n\t\t\t\tattr(div, \"class\", div_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTones, activeSkinTone*/ 1049088 && div_aria_selected_value !== (div_aria_selected_value = /*i*/ ctx[68] === /*activeSkinTone*/ ctx[20])) {\n\t\t\t\tattr(div, \"aria-selected\", div_aria_selected_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n, skinTones*/ 513 && div_title_value !== (div_title_value = /*i18n*/ ctx[0].skinTones[/*i*/ ctx[68]])) {\n\t\t\t\tattr(div, \"title\", div_title_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n, skinTones*/ 513 && div_aria_label_value !== (div_aria_label_value = /*i18n*/ ctx[0].skinTones[/*i*/ ctx[68]])) {\n\t\t\t\tattr(div, \"aria-label\", div_aria_label_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (59:33) {#each groups as group (group.id)}\nfunction create_each_block_3(key_1, ctx) {\n\tlet button;\n\tlet div;\n\tlet t_value = /*group*/ ctx[72].emoji + \"\";\n\tlet t;\n\tlet button_aria_controls_value;\n\tlet button_aria_label_value;\n\tlet button_aria_selected_value;\n\tlet button_title_value;\n\tlet mounted;\n\tlet dispose;\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[51](/*group*/ ctx[72]);\n\t}\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tdiv = element(\"div\");\n\t\t\tt = text(t_value);\n\t\t\tattr(div, \"class\", \"nav-emoji emoji\");\n\t\t\tattr(button, \"role\", \"tab\");\n\t\t\tattr(button, \"class\", \"nav-button\");\n\t\t\tattr(button, \"aria-controls\", button_aria_controls_value = \"tab-\" + /*group*/ ctx[72].id);\n\t\t\tattr(button, \"aria-label\", button_aria_label_value = /*i18n*/ ctx[0].categories[/*group*/ ctx[72].name]);\n\t\t\tattr(button, \"aria-selected\", button_aria_selected_value = !/*searchMode*/ ctx[4] && /*currentGroup*/ ctx[13].id === /*group*/ ctx[72].id);\n\t\t\tattr(button, \"title\", button_title_value = /*i18n*/ ctx[0].categories[/*group*/ ctx[72].name]);\n\t\t\tthis.first = button;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, div);\n\t\t\tappend(div, t);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", click_handler);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty[0] & /*groups*/ 4096 && t_value !== (t_value = /*group*/ ctx[72].emoji + \"\")) set_data(t, t_value);\n\n\t\t\tif (dirty[0] & /*groups*/ 4096 && button_aria_controls_value !== (button_aria_controls_value = \"tab-\" + /*group*/ ctx[72].id)) {\n\t\t\t\tattr(button, \"aria-controls\", button_aria_controls_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n, groups*/ 4097 && button_aria_label_value !== (button_aria_label_value = /*i18n*/ ctx[0].categories[/*group*/ ctx[72].name])) {\n\t\t\t\tattr(button, \"aria-label\", button_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentGroup, groups*/ 12304 && button_aria_selected_value !== (button_aria_selected_value = !/*searchMode*/ ctx[4] && /*currentGroup*/ ctx[13].id === /*group*/ ctx[72].id)) {\n\t\t\t\tattr(button, \"aria-selected\", button_aria_selected_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n, groups*/ 4097 && button_title_value !== (button_title_value = /*i18n*/ ctx[0].categories[/*group*/ ctx[72].name])) {\n\t\t\t\tattr(button, \"title\", button_title_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(button);\n\t\t\t}\n\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (100:100) {:else}\nfunction create_else_block_1(ctx) {\n\tlet img;\n\tlet img_src_value;\n\n\treturn {\n\t\tc() {\n\t\t\timg = element(\"img\");\n\t\t\tattr(img, \"class\", \"custom-emoji\");\n\t\t\tif (!src_url_equal(img.src, img_src_value = /*emoji*/ ctx[66].url)) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", \"\");\n\t\t\tattr(img, \"loading\", \"lazy\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, img, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && !src_url_equal(img.src, img_src_value = /*emoji*/ ctx[66].url)) {\n\t\t\t\tattr(img, \"src\", img_src_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(img);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (100:40) {#if emoji.unicode}\nfunction create_if_block_1(ctx) {\n\tlet t_value = /*unicodeWithSkin*/ ctx[27](/*emoji*/ ctx[66], /*currentSkinTone*/ ctx[8]) + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(t_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories, currentSkinTone*/ 33024 && t_value !== (t_value = /*unicodeWithSkin*/ ctx[27](/*emoji*/ ctx[66], /*currentSkinTone*/ ctx[8]) + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (95:53) {#each emojiWithCategory.emojis as emoji, i (emoji.id)}\nfunction create_each_block_2(key_1, ctx) {\n\tlet button;\n\tlet button_role_value;\n\tlet button_aria_selected_value;\n\tlet button_aria_label_value;\n\tlet button_title_value;\n\tlet button_class_value;\n\tlet button_id_value;\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*emoji*/ ctx[66].unicode) return create_if_block_1;\n\t\treturn create_else_block_1;\n\t}\n\n\tlet current_block_type = select_block_type(ctx);\n\tlet if_block = current_block_type(ctx);\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tif_block.c();\n\t\t\tattr(button, \"role\", button_role_value = /*searchMode*/ ctx[4] ? 'option' : 'menuitem');\n\n\t\t\tattr(button, \"aria-selected\", button_aria_selected_value = /*searchMode*/ ctx[4]\n\t\t\t? /*i*/ ctx[68] == /*activeSearchItem*/ ctx[5]\n\t\t\t: '');\n\n\t\t\tattr(button, \"aria-label\", button_aria_label_value = /*labelWithSkin*/ ctx[28](/*emoji*/ ctx[66], /*currentSkinTone*/ ctx[8]));\n\t\t\tattr(button, \"title\", button_title_value = /*titleForEmoji*/ ctx[29](/*emoji*/ ctx[66]));\n\n\t\t\tattr(button, \"class\", button_class_value = \"emoji \" + (/*searchMode*/ ctx[4] && /*i*/ ctx[68] === /*activeSearchItem*/ ctx[5]\n\t\t\t? 'active'\n\t\t\t: ''));\n\n\t\t\tattr(button, \"id\", button_id_value = \"emo-\" + /*emoji*/ ctx[66].id);\n\t\t\tthis.first = button;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tif_block.m(button, null);\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {\n\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = current_block_type(ctx);\n\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(button, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode*/ 16 && button_role_value !== (button_role_value = /*searchMode*/ ctx[4] ? 'option' : 'menuitem')) {\n\t\t\t\tattr(button, \"role\", button_role_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojisWithCategories, activeSearchItem*/ 32816 && button_aria_selected_value !== (button_aria_selected_value = /*searchMode*/ ctx[4]\n\t\t\t? /*i*/ ctx[68] == /*activeSearchItem*/ ctx[5]\n\t\t\t: '')) {\n\t\t\t\tattr(button, \"aria-selected\", button_aria_selected_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories, currentSkinTone*/ 33024 && button_aria_label_value !== (button_aria_label_value = /*labelWithSkin*/ ctx[28](/*emoji*/ ctx[66], /*currentSkinTone*/ ctx[8]))) {\n\t\t\t\tattr(button, \"aria-label\", button_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && button_title_value !== (button_title_value = /*titleForEmoji*/ ctx[29](/*emoji*/ ctx[66]))) {\n\t\t\t\tattr(button, \"title\", button_title_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojisWithCategories, activeSearchItem*/ 32816 && button_class_value !== (button_class_value = \"emoji \" + (/*searchMode*/ ctx[4] && /*i*/ ctx[68] === /*activeSearchItem*/ ctx[5]\n\t\t\t? 'active'\n\t\t\t: ''))) {\n\t\t\t\tattr(button, \"class\", button_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && button_id_value !== (button_id_value = \"emo-\" + /*emoji*/ ctx[66].id)) {\n\t\t\t\tattr(button, \"id\", button_id_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(button);\n\t\t\t}\n\n\t\t\tif_block.d();\n\t\t}\n\t};\n}\n\n// (76:36) {#each currentEmojisWithCategories as emojiWithCategory, i (emojiWithCategory.category)}\nfunction create_each_block_1(key_1, ctx) {\n\tlet div0;\n\n\tlet t_value = (/*searchMode*/ ctx[4]\n\t? /*i18n*/ ctx[0].searchResultsLabel\n\t: /*emojiWithCategory*/ ctx[69].category\n\t\t? /*emojiWithCategory*/ ctx[69].category\n\t\t: /*currentEmojisWithCategories*/ ctx[15].length > 1\n\t\t\t? /*i18n*/ ctx[0].categories.custom\n\t\t\t: /*i18n*/ ctx[0].categories[/*currentGroup*/ ctx[13].name]) + \"\";\n\n\tlet t;\n\tlet div0_id_value;\n\tlet div0_class_value;\n\tlet div1;\n\tlet each_blocks = [];\n\tlet each_1_lookup = new Map_1();\n\tlet div1_role_value;\n\tlet div1_aria_labelledby_value;\n\tlet div1_id_value;\n\tlet each_value_2 = ensure_array_like(/*emojiWithCategory*/ ctx[69].emojis);\n\tconst get_key = ctx => /*emoji*/ ctx[66].id;\n\n\tfor (let i = 0; i < each_value_2.length; i += 1) {\n\t\tlet child_ctx = get_each_context_2(ctx, each_value_2, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach_1_lookup.set(key, each_blocks[i] = create_each_block_2(key, child_ctx));\n\t}\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt = text(t_value);\n\t\t\tdiv1 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(div0, \"id\", div0_id_value = \"menu-label-\" + /*i*/ ctx[68]);\n\n\t\t\tattr(div0, \"class\", div0_class_value = \"category \" + (/*currentEmojisWithCategories*/ ctx[15].length === 1 && /*currentEmojisWithCategories*/ ctx[15][0].category === ''\n\t\t\t? 'gone'\n\t\t\t: ''));\n\n\t\t\tattr(div0, \"aria-hidden\", \"true\");\n\t\t\tattr(div1, \"class\", \"emoji-menu\");\n\t\t\tattr(div1, \"role\", div1_role_value = /*searchMode*/ ctx[4] ? 'listbox' : 'menu');\n\t\t\tattr(div1, \"aria-labelledby\", div1_aria_labelledby_value = \"menu-label-\" + /*i*/ ctx[68]);\n\t\t\tattr(div1, \"id\", div1_id_value = /*searchMode*/ ctx[4] ? 'search-results' : '');\n\t\t\tthis.first = div0;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div0, anchor);\n\t\t\tappend(div0, t);\n\t\t\tinsert(target, div1, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(div1, null);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (dirty[0] & /*searchMode, i18n, currentEmojisWithCategories, currentGroup*/ 40977 && t_value !== (t_value = (/*searchMode*/ ctx[4]\n\t\t\t? /*i18n*/ ctx[0].searchResultsLabel\n\t\t\t: /*emojiWithCategory*/ ctx[69].category\n\t\t\t\t? /*emojiWithCategory*/ ctx[69].category\n\t\t\t\t: /*currentEmojisWithCategories*/ ctx[15].length > 1\n\t\t\t\t\t? /*i18n*/ ctx[0].categories.custom\n\t\t\t\t\t: /*i18n*/ ctx[0].categories[/*currentGroup*/ ctx[13].name]) + \"\")) set_data(t, t_value);\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && div0_id_value !== (div0_id_value = \"menu-label-\" + /*i*/ ctx[68])) {\n\t\t\t\tattr(div0, \"id\", div0_id_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && div0_class_value !== (div0_class_value = \"category \" + (/*currentEmojisWithCategories*/ ctx[15].length === 1 && /*currentEmojisWithCategories*/ ctx[15][0].category === ''\n\t\t\t? 'gone'\n\t\t\t: ''))) {\n\t\t\t\tattr(div0, \"class\", div0_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojisWithCategories, activeSearchItem, labelWithSkin, currentSkinTone, titleForEmoji, unicodeWithSkin*/ 939557168) {\n\t\t\t\teach_value_2 = ensure_array_like(/*emojiWithCategory*/ ctx[69].emojis);\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value_2, each_1_lookup, div1, destroy_block, create_each_block_2, null, get_each_context_2);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode*/ 16 && div1_role_value !== (div1_role_value = /*searchMode*/ ctx[4] ? 'listbox' : 'menu')) {\n\t\t\t\tattr(div1, \"role\", div1_role_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && div1_aria_labelledby_value !== (div1_aria_labelledby_value = \"menu-label-\" + /*i*/ ctx[68])) {\n\t\t\t\tattr(div1, \"aria-labelledby\", div1_aria_labelledby_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode*/ 16 && div1_id_value !== (div1_id_value = /*searchMode*/ ctx[4] ? 'search-results' : '')) {\n\t\t\t\tattr(div1, \"id\", div1_id_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(div0);\n\t\t\t\tdetach(div1);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d();\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (109:94) {:else}\nfunction create_else_block(ctx) {\n\tlet img;\n\tlet img_src_value;\n\n\treturn {\n\t\tc() {\n\t\t\timg = element(\"img\");\n\t\t\tattr(img, \"class\", \"custom-emoji\");\n\t\t\tif (!src_url_equal(img.src, img_src_value = /*emoji*/ ctx[66].url)) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", \"\");\n\t\t\tattr(img, \"loading\", \"lazy\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, img, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*currentFavorites*/ 1024 && !src_url_equal(img.src, img_src_value = /*emoji*/ ctx[66].url)) {\n\t\t\t\tattr(img, \"src\", img_src_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(img);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (109:34) {#if emoji.unicode}\nfunction create_if_block(ctx) {\n\tlet t_value = /*unicodeWithSkin*/ ctx[27](/*emoji*/ ctx[66], /*currentSkinTone*/ ctx[8]) + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(t_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*currentFavorites, currentSkinTone*/ 1280 && t_value !== (t_value = /*unicodeWithSkin*/ ctx[27](/*emoji*/ ctx[66], /*currentSkinTone*/ ctx[8]) + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(t);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (105:102) {#each currentFavorites as emoji, i (emoji.id)}\nfunction create_each_block(key_1, ctx) {\n\tlet button;\n\tlet button_aria_label_value;\n\tlet button_title_value;\n\tlet button_id_value;\n\n\tfunction select_block_type_1(ctx, dirty) {\n\t\tif (/*emoji*/ ctx[66].unicode) return create_if_block;\n\t\treturn create_else_block;\n\t}\n\n\tlet current_block_type = select_block_type_1(ctx);\n\tlet if_block = current_block_type(ctx);\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tif_block.c();\n\t\t\tattr(button, \"role\", \"menuitem\");\n\t\t\tattr(button, \"aria-label\", button_aria_label_value = /*labelWithSkin*/ ctx[28](/*emoji*/ ctx[66], /*currentSkinTone*/ ctx[8]));\n\t\t\tattr(button, \"title\", button_title_value = /*titleForEmoji*/ ctx[29](/*emoji*/ ctx[66]));\n\t\t\tattr(button, \"class\", \"emoji\");\n\t\t\tattr(button, \"id\", button_id_value = \"fav-\" + /*emoji*/ ctx[66].id);\n\t\t\tthis.first = button;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tif_block.m(button, null);\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block) {\n\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = current_block_type(ctx);\n\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(button, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentFavorites, currentSkinTone*/ 1280 && button_aria_label_value !== (button_aria_label_value = /*labelWithSkin*/ ctx[28](/*emoji*/ ctx[66], /*currentSkinTone*/ ctx[8]))) {\n\t\t\t\tattr(button, \"aria-label\", button_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentFavorites*/ 1024 && button_title_value !== (button_title_value = /*titleForEmoji*/ ctx[29](/*emoji*/ ctx[66]))) {\n\t\t\t\tattr(button, \"title\", button_title_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentFavorites*/ 1024 && button_id_value !== (button_id_value = \"fav-\" + /*emoji*/ ctx[66].id)) {\n\t\t\t\tattr(button, \"id\", button_id_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(button);\n\t\t\t}\n\n\t\t\tif_block.d();\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet section;\n\tlet div0;\n\tlet div4;\n\tlet div1;\n\tlet input;\n\tlet input_placeholder_value;\n\tlet input_aria_expanded_value;\n\tlet input_aria_activedescendant_value;\n\tlet label;\n\tlet t0_value = /*i18n*/ ctx[0].searchLabel + \"\";\n\tlet t0;\n\tlet span0;\n\tlet t1_value = /*i18n*/ ctx[0].searchDescription + \"\";\n\tlet t1;\n\tlet div2;\n\tlet button0;\n\tlet t2;\n\tlet button0_class_value;\n\tlet div2_class_value;\n\tlet span1;\n\tlet t3_value = /*i18n*/ ctx[0].skinToneDescription + \"\";\n\tlet t3;\n\tlet div3;\n\tlet each_blocks_3 = [];\n\tlet each0_lookup = new Map_1();\n\tlet div3_class_value;\n\tlet div3_aria_label_value;\n\tlet div3_aria_activedescendant_value;\n\tlet div3_aria_hidden_value;\n\tlet div5;\n\tlet each_blocks_2 = [];\n\tlet each1_lookup = new Map_1();\n\tlet div5_aria_label_value;\n\tlet div7;\n\tlet div6;\n\tlet div8;\n\tlet t4;\n\tlet div8_class_value;\n\tlet div10;\n\tlet div9;\n\tlet each_blocks_1 = [];\n\tlet each2_lookup = new Map_1();\n\tlet div10_class_value;\n\tlet div10_role_value;\n\tlet div10_aria_label_value;\n\tlet div10_id_value;\n\tlet div11;\n\tlet each_blocks = [];\n\tlet each3_lookup = new Map_1();\n\tlet div11_class_value;\n\tlet div11_aria_label_value;\n\tlet button1;\n\tlet section_aria_label_value;\n\tlet mounted;\n\tlet dispose;\n\tlet each_value_4 = ensure_array_like(/*skinTones*/ ctx[9]);\n\tconst get_key = ctx => /*skinTone*/ ctx[75];\n\n\tfor (let i = 0; i < each_value_4.length; i += 1) {\n\t\tlet child_ctx = get_each_context_4(ctx, each_value_4, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach0_lookup.set(key, each_blocks_3[i] = create_each_block_4(key, child_ctx));\n\t}\n\n\tlet each_value_3 = ensure_array_like(/*groups*/ ctx[12]);\n\tconst get_key_1 = ctx => /*group*/ ctx[72].id;\n\n\tfor (let i = 0; i < each_value_3.length; i += 1) {\n\t\tlet child_ctx = get_each_context_3(ctx, each_value_3, i);\n\t\tlet key = get_key_1(child_ctx);\n\t\teach1_lookup.set(key, each_blocks_2[i] = create_each_block_3(key, child_ctx));\n\t}\n\n\tlet each_value_1 = ensure_array_like(/*currentEmojisWithCategories*/ ctx[15]);\n\tconst get_key_2 = ctx => /*emojiWithCategory*/ ctx[69].category;\n\n\tfor (let i = 0; i < each_value_1.length; i += 1) {\n\t\tlet child_ctx = get_each_context_1(ctx, each_value_1, i);\n\t\tlet key = get_key_2(child_ctx);\n\t\teach2_lookup.set(key, each_blocks_1[i] = create_each_block_1(key, child_ctx));\n\t}\n\n\tlet each_value = ensure_array_like(/*currentFavorites*/ ctx[10]);\n\tconst get_key_3 = ctx => /*emoji*/ ctx[66].id;\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\tlet child_ctx = get_each_context(ctx, each_value, i);\n\t\tlet key = get_key_3(child_ctx);\n\t\teach3_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tdiv4 = element(\"div\");\n\t\t\tdiv1 = element(\"div\");\n\t\t\tinput = element(\"input\");\n\t\t\tlabel = element(\"label\");\n\t\t\tt0 = text(t0_value);\n\t\t\tspan0 = element(\"span\");\n\t\t\tt1 = text(t1_value);\n\t\t\tdiv2 = element(\"div\");\n\t\t\tbutton0 = element(\"button\");\n\t\t\tt2 = text(/*skinToneButtonText*/ ctx[21]);\n\t\t\tspan1 = element(\"span\");\n\t\t\tt3 = text(t3_value);\n\t\t\tdiv3 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks_3.length; i += 1) {\n\t\t\t\teach_blocks_3[i].c();\n\t\t\t}\n\n\t\t\tdiv5 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].c();\n\t\t\t}\n\n\t\t\tdiv7 = element(\"div\");\n\t\t\tdiv6 = element(\"div\");\n\t\t\tdiv8 = element(\"div\");\n\t\t\tt4 = text(/*message*/ ctx[18]);\n\t\t\tdiv10 = element(\"div\");\n\t\t\tdiv9 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].c();\n\t\t\t}\n\n\t\t\tdiv11 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tbutton1 = element(\"button\");\n\t\t\tbutton1.textContent = \"😀\";\n\t\t\tattr(div0, \"class\", \"pad-top\");\n\t\t\tattr(input, \"id\", \"search\");\n\t\t\tattr(input, \"class\", \"search\");\n\t\t\tattr(input, \"type\", \"search\");\n\t\t\tattr(input, \"role\", \"combobox\");\n\t\t\tattr(input, \"enterkeyhint\", \"search\");\n\t\t\tattr(input, \"placeholder\", input_placeholder_value = /*i18n*/ ctx[0].searchLabel);\n\t\t\tattr(input, \"autocapitalize\", \"none\");\n\t\t\tattr(input, \"autocomplete\", \"off\");\n\t\t\tattr(input, \"spellcheck\", \"true\");\n\t\t\tattr(input, \"aria-expanded\", input_aria_expanded_value = !!(/*searchMode*/ ctx[4] && /*currentEmojis*/ ctx[1].length));\n\t\t\tattr(input, \"aria-controls\", \"search-results\");\n\t\t\tattr(input, \"aria-describedby\", \"search-description\");\n\t\t\tattr(input, \"aria-autocomplete\", \"list\");\n\n\t\t\tattr(input, \"aria-activedescendant\", input_aria_activedescendant_value = /*activeSearchItemId*/ ctx[26]\n\t\t\t? `emo-${/*activeSearchItemId*/ ctx[26]}`\n\t\t\t: '');\n\n\t\t\tattr(label, \"class\", \"sr-only\");\n\t\t\tattr(label, \"for\", \"search\");\n\t\t\tattr(span0, \"id\", \"search-description\");\n\t\t\tattr(span0, \"class\", \"sr-only\");\n\t\t\tattr(div1, \"class\", \"search-wrapper\");\n\t\t\tattr(button0, \"id\", \"skintone-button\");\n\t\t\tattr(button0, \"class\", button0_class_value = \"emoji \" + (/*skinTonePickerExpanded*/ ctx[6] ? 'hide-focus' : ''));\n\t\t\tattr(button0, \"aria-label\", /*skinToneButtonLabel*/ ctx[23]);\n\t\t\tattr(button0, \"title\", /*skinToneButtonLabel*/ ctx[23]);\n\t\t\tattr(button0, \"aria-describedby\", \"skintone-description\");\n\t\t\tattr(button0, \"aria-haspopup\", \"listbox\");\n\t\t\tattr(button0, \"aria-expanded\", /*skinTonePickerExpanded*/ ctx[6]);\n\t\t\tattr(button0, \"aria-controls\", \"skintone-list\");\n\n\t\t\tattr(div2, \"class\", div2_class_value = \"skintone-button-wrapper \" + (/*skinTonePickerExpandedAfterAnimation*/ ctx[19]\n\t\t\t? 'expanded'\n\t\t\t: ''));\n\n\t\t\tattr(span1, \"id\", \"skintone-description\");\n\t\t\tattr(span1, \"class\", \"sr-only\");\n\t\t\tattr(div3, \"id\", \"skintone-list\");\n\n\t\t\tattr(div3, \"class\", div3_class_value = \"skintone-list hide-focus \" + (/*skinTonePickerExpanded*/ ctx[6]\n\t\t\t? ''\n\t\t\t: 'hidden no-animate'));\n\n\t\t\tset_style(div3, \"transform\", \"translateY(\" + (/*skinTonePickerExpanded*/ ctx[6]\n\t\t\t? 0\n\t\t\t: 'calc(-1 * var(--num-skintones) * var(--total-emoji-size))') + \")\");\n\n\t\t\tattr(div3, \"role\", \"listbox\");\n\t\t\tattr(div3, \"aria-label\", div3_aria_label_value = /*i18n*/ ctx[0].skinTonesLabel);\n\t\t\tattr(div3, \"aria-activedescendant\", div3_aria_activedescendant_value = \"skintone-\" + /*activeSkinTone*/ ctx[20]);\n\t\t\tattr(div3, \"aria-hidden\", div3_aria_hidden_value = !/*skinTonePickerExpanded*/ ctx[6]);\n\t\t\tattr(div3, \"tabindex\", \"-1\");\n\t\t\tattr(div4, \"class\", \"search-row\");\n\t\t\tattr(div5, \"class\", \"nav\");\n\t\t\tattr(div5, \"role\", \"tablist\");\n\t\t\tset_style(div5, \"grid-template-columns\", \"repeat(\" + /*groups*/ ctx[12].length + \", 1fr)\");\n\t\t\tattr(div5, \"aria-label\", div5_aria_label_value = /*i18n*/ ctx[0].categoriesLabel);\n\t\t\tattr(div6, \"class\", \"indicator\");\n\t\t\tset_style(div6, \"transform\", \"translateX(\" + (/*isRtl*/ ctx[24] ? -1 : 1) * /*currentGroupIndex*/ ctx[11] * 100 + \"%)\");\n\t\t\tattr(div7, \"class\", \"indicator-wrapper\");\n\t\t\tattr(div8, \"class\", div8_class_value = \"message \" + (/*message*/ ctx[18] ? '' : 'gone'));\n\t\t\tattr(div8, \"role\", \"alert\");\n\t\t\tattr(div8, \"aria-live\", \"polite\");\n\n\t\t\tattr(div10, \"class\", div10_class_value = \"tabpanel \" + (!/*databaseLoaded*/ ctx[14] || /*message*/ ctx[18]\n\t\t\t? 'gone'\n\t\t\t: ''));\n\n\t\t\tattr(div10, \"role\", div10_role_value = /*searchMode*/ ctx[4] ? 'region' : 'tabpanel');\n\n\t\t\tattr(div10, \"aria-label\", div10_aria_label_value = /*searchMode*/ ctx[4]\n\t\t\t? /*i18n*/ ctx[0].searchResultsLabel\n\t\t\t: /*i18n*/ ctx[0].categories[/*currentGroup*/ ctx[13].name]);\n\n\t\t\tattr(div10, \"id\", div10_id_value = /*searchMode*/ ctx[4]\n\t\t\t? ''\n\t\t\t: `tab-${/*currentGroup*/ ctx[13].id}`);\n\n\t\t\tattr(div10, \"tabindex\", \"0\");\n\t\t\tattr(div11, \"class\", div11_class_value = \"favorites emoji-menu \" + (/*message*/ ctx[18] ? 'gone' : ''));\n\t\t\tattr(div11, \"role\", \"menu\");\n\t\t\tattr(div11, \"aria-label\", div11_aria_label_value = /*i18n*/ ctx[0].favoritesLabel);\n\t\t\tset_style(div11, \"padding-inline-end\", /*scrollbarWidth*/ ctx[25] + \"px\");\n\t\t\tattr(button1, \"aria-hidden\", \"true\");\n\t\t\tattr(button1, \"tabindex\", \"-1\");\n\t\t\tattr(button1, \"class\", \"abs-pos hidden emoji\");\n\t\t\tattr(section, \"class\", \"picker\");\n\t\t\tattr(section, \"aria-label\", section_aria_label_value = /*i18n*/ ctx[0].regionLabel);\n\t\t\tattr(section, \"style\", /*pickerStyle*/ ctx[22]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tappend(section, div0);\n\t\t\tappend(section, div4);\n\t\t\tappend(div4, div1);\n\t\t\tappend(div1, input);\n\t\t\tset_input_value(input, /*rawSearchText*/ ctx[2]);\n\t\t\tappend(div1, label);\n\t\t\tappend(label, t0);\n\t\t\tappend(div1, span0);\n\t\t\tappend(span0, t1);\n\t\t\tappend(div4, div2);\n\t\t\tappend(div2, button0);\n\t\t\tappend(button0, t2);\n\t\t\tappend(div4, span1);\n\t\t\tappend(span1, t3);\n\t\t\tappend(div4, div3);\n\n\t\t\tfor (let i = 0; i < each_blocks_3.length; i += 1) {\n\t\t\t\tif (each_blocks_3[i]) {\n\t\t\t\t\teach_blocks_3[i].m(div3, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*div3_binding*/ ctx[50](div3);\n\t\t\tappend(section, div5);\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\tif (each_blocks_2[i]) {\n\t\t\t\t\teach_blocks_2[i].m(div5, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tappend(section, div7);\n\t\t\tappend(div7, div6);\n\t\t\tappend(section, div8);\n\t\t\tappend(div8, t4);\n\t\t\tappend(section, div10);\n\t\t\tappend(div10, div9);\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\tif (each_blocks_1[i]) {\n\t\t\t\t\teach_blocks_1[i].m(div9, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*div10_binding*/ ctx[52](div10);\n\t\t\tappend(section, div11);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(div11, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tappend(section, button1);\n\t\t\t/*button1_binding*/ ctx[53](button1);\n\t\t\t/*section_binding*/ ctx[54](section);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"input\", /*input_input_handler*/ ctx[49]),\n\t\t\t\t\tlisten(input, \"keydown\", /*onSearchKeydown*/ ctx[31]),\n\t\t\t\t\tlisten(button0, \"click\", /*onClickSkinToneButton*/ ctx[36]),\n\t\t\t\t\tlisten(div3, \"focusout\", /*onSkinToneOptionsFocusOut*/ ctx[39]),\n\t\t\t\t\tlisten(div3, \"click\", /*onSkinToneOptionsClick*/ ctx[35]),\n\t\t\t\t\tlisten(div3, \"keydown\", /*onSkinToneOptionsKeydown*/ ctx[37]),\n\t\t\t\t\tlisten(div3, \"keyup\", /*onSkinToneOptionsKeyup*/ ctx[38]),\n\t\t\t\t\tlisten(div5, \"keydown\", /*onNavKeydown*/ ctx[33]),\n\t\t\t\t\taction_destroyer(/*calculateEmojiGridStyle*/ ctx[30].call(null, div9)),\n\t\t\t\t\tlisten(div10, \"click\", /*onEmojiClick*/ ctx[34]),\n\t\t\t\t\tlisten(div11, \"click\", /*onEmojiClick*/ ctx[34])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*i18n*/ 1 && input_placeholder_value !== (input_placeholder_value = /*i18n*/ ctx[0].searchLabel)) {\n\t\t\t\tattr(input, \"placeholder\", input_placeholder_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojis*/ 18 && input_aria_expanded_value !== (input_aria_expanded_value = !!(/*searchMode*/ ctx[4] && /*currentEmojis*/ ctx[1].length))) {\n\t\t\t\tattr(input, \"aria-expanded\", input_aria_expanded_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*activeSearchItemId*/ 67108864 && input_aria_activedescendant_value !== (input_aria_activedescendant_value = /*activeSearchItemId*/ ctx[26]\n\t\t\t? `emo-${/*activeSearchItemId*/ ctx[26]}`\n\t\t\t: '')) {\n\t\t\t\tattr(input, \"aria-activedescendant\", input_aria_activedescendant_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*rawSearchText*/ 4 && input.value !== /*rawSearchText*/ ctx[2]) {\n\t\t\t\tset_input_value(input, /*rawSearchText*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && t0_value !== (t0_value = /*i18n*/ ctx[0].searchLabel + \"\")) set_data(t0, t0_value);\n\t\t\tif (dirty[0] & /*i18n*/ 1 && t1_value !== (t1_value = /*i18n*/ ctx[0].searchDescription + \"\")) set_data(t1, t1_value);\n\t\t\tif (dirty[0] & /*skinToneButtonText*/ 2097152) set_data(t2, /*skinToneButtonText*/ ctx[21]);\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64 && button0_class_value !== (button0_class_value = \"emoji \" + (/*skinTonePickerExpanded*/ ctx[6] ? 'hide-focus' : ''))) {\n\t\t\t\tattr(button0, \"class\", button0_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinToneButtonLabel*/ 8388608) {\n\t\t\t\tattr(button0, \"aria-label\", /*skinToneButtonLabel*/ ctx[23]);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinToneButtonLabel*/ 8388608) {\n\t\t\t\tattr(button0, \"title\", /*skinToneButtonLabel*/ ctx[23]);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64) {\n\t\t\t\tattr(button0, \"aria-expanded\", /*skinTonePickerExpanded*/ ctx[6]);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpandedAfterAnimation*/ 524288 && div2_class_value !== (div2_class_value = \"skintone-button-wrapper \" + (/*skinTonePickerExpandedAfterAnimation*/ ctx[19]\n\t\t\t? 'expanded'\n\t\t\t: ''))) {\n\t\t\t\tattr(div2, \"class\", div2_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && t3_value !== (t3_value = /*i18n*/ ctx[0].skinToneDescription + \"\")) set_data(t3, t3_value);\n\n\t\t\tif (dirty[0] & /*skinTones, activeSkinTone, i18n*/ 1049089) {\n\t\t\t\teach_value_4 = ensure_array_like(/*skinTones*/ ctx[9]);\n\t\t\t\teach_blocks_3 = update_keyed_each(each_blocks_3, dirty, get_key, 1, ctx, each_value_4, each0_lookup, div3, destroy_block, create_each_block_4, null, get_each_context_4);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64 && div3_class_value !== (div3_class_value = \"skintone-list hide-focus \" + (/*skinTonePickerExpanded*/ ctx[6]\n\t\t\t? ''\n\t\t\t: 'hidden no-animate'))) {\n\t\t\t\tattr(div3, \"class\", div3_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64) {\n\t\t\t\tset_style(div3, \"transform\", \"translateY(\" + (/*skinTonePickerExpanded*/ ctx[6]\n\t\t\t\t? 0\n\t\t\t\t: 'calc(-1 * var(--num-skintones) * var(--total-emoji-size))') + \")\");\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && div3_aria_label_value !== (div3_aria_label_value = /*i18n*/ ctx[0].skinTonesLabel)) {\n\t\t\t\tattr(div3, \"aria-label\", div3_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*activeSkinTone*/ 1048576 && div3_aria_activedescendant_value !== (div3_aria_activedescendant_value = \"skintone-\" + /*activeSkinTone*/ ctx[20])) {\n\t\t\t\tattr(div3, \"aria-activedescendant\", div3_aria_activedescendant_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64 && div3_aria_hidden_value !== (div3_aria_hidden_value = !/*skinTonePickerExpanded*/ ctx[6])) {\n\t\t\t\tattr(div3, \"aria-hidden\", div3_aria_hidden_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*groups, i18n, searchMode, currentGroup*/ 12305 | dirty[1] & /*onNavClick*/ 2) {\n\t\t\t\teach_value_3 = ensure_array_like(/*groups*/ ctx[12]);\n\t\t\t\teach_blocks_2 = update_keyed_each(each_blocks_2, dirty, get_key_1, 1, ctx, each_value_3, each1_lookup, div5, destroy_block, create_each_block_3, null, get_each_context_3);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*groups*/ 4096) {\n\t\t\t\tset_style(div5, \"grid-template-columns\", \"repeat(\" + /*groups*/ ctx[12].length + \", 1fr)\");\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && div5_aria_label_value !== (div5_aria_label_value = /*i18n*/ ctx[0].categoriesLabel)) {\n\t\t\t\tattr(div5, \"aria-label\", div5_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*isRtl, currentGroupIndex*/ 16779264) {\n\t\t\t\tset_style(div6, \"transform\", \"translateX(\" + (/*isRtl*/ ctx[24] ? -1 : 1) * /*currentGroupIndex*/ ctx[11] * 100 + \"%)\");\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*message*/ 262144) set_data(t4, /*message*/ ctx[18]);\n\n\t\t\tif (dirty[0] & /*message*/ 262144 && div8_class_value !== (div8_class_value = \"message \" + (/*message*/ ctx[18] ? '' : 'gone'))) {\n\t\t\t\tattr(div8, \"class\", div8_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojisWithCategories, activeSearchItem, labelWithSkin, currentSkinTone, titleForEmoji, unicodeWithSkin, i18n, currentGroup*/ 939565361) {\n\t\t\t\teach_value_1 = ensure_array_like(/*currentEmojisWithCategories*/ ctx[15]);\n\t\t\t\teach_blocks_1 = update_keyed_each(each_blocks_1, dirty, get_key_2, 1, ctx, each_value_1, each2_lookup, div9, destroy_block, create_each_block_1, null, get_each_context_1);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*databaseLoaded, message*/ 278528 && div10_class_value !== (div10_class_value = \"tabpanel \" + (!/*databaseLoaded*/ ctx[14] || /*message*/ ctx[18]\n\t\t\t? 'gone'\n\t\t\t: ''))) {\n\t\t\t\tattr(div10, \"class\", div10_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode*/ 16 && div10_role_value !== (div10_role_value = /*searchMode*/ ctx[4] ? 'region' : 'tabpanel')) {\n\t\t\t\tattr(div10, \"role\", div10_role_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, i18n, currentGroup*/ 8209 && div10_aria_label_value !== (div10_aria_label_value = /*searchMode*/ ctx[4]\n\t\t\t? /*i18n*/ ctx[0].searchResultsLabel\n\t\t\t: /*i18n*/ ctx[0].categories[/*currentGroup*/ ctx[13].name])) {\n\t\t\t\tattr(div10, \"aria-label\", div10_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentGroup*/ 8208 && div10_id_value !== (div10_id_value = /*searchMode*/ ctx[4]\n\t\t\t? ''\n\t\t\t: `tab-${/*currentGroup*/ ctx[13].id}`)) {\n\t\t\t\tattr(div10, \"id\", div10_id_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*labelWithSkin, currentFavorites, currentSkinTone, titleForEmoji, unicodeWithSkin*/ 939525376) {\n\t\t\t\teach_value = ensure_array_like(/*currentFavorites*/ ctx[10]);\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key_3, 1, ctx, each_value, each3_lookup, div11, destroy_block, create_each_block, null, get_each_context);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*message*/ 262144 && div11_class_value !== (div11_class_value = \"favorites emoji-menu \" + (/*message*/ ctx[18] ? 'gone' : ''))) {\n\t\t\t\tattr(div11, \"class\", div11_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && div11_aria_label_value !== (div11_aria_label_value = /*i18n*/ ctx[0].favoritesLabel)) {\n\t\t\t\tattr(div11, \"aria-label\", div11_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*scrollbarWidth*/ 33554432) {\n\t\t\t\tset_style(div11, \"padding-inline-end\", /*scrollbarWidth*/ ctx[25] + \"px\");\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && section_aria_label_value !== (section_aria_label_value = /*i18n*/ ctx[0].regionLabel)) {\n\t\t\t\tattr(section, \"aria-label\", section_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*pickerStyle*/ 4194304) {\n\t\t\t\tattr(section, \"style\", /*pickerStyle*/ ctx[22]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(section);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < each_blocks_3.length; i += 1) {\n\t\t\t\teach_blocks_3[i].d();\n\t\t\t}\n\n\t\t\t/*div3_binding*/ ctx[50](null);\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].d();\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].d();\n\t\t\t}\n\n\t\t\t/*div10_binding*/ ctx[52](null);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d();\n\t\t\t}\n\n\t\t\t/*button1_binding*/ ctx[53](null);\n\t\t\t/*section_binding*/ ctx[54](null);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { skinToneEmoji } = $$props;\n\tlet { i18n } = $$props;\n\tlet { database } = $$props;\n\tlet { customEmoji } = $$props;\n\tlet { customCategorySorting } = $$props;\n\tlet { emojiVersion } = $$props;\n\n\t// private\n\tlet initialLoad = true;\n\n\tlet currentEmojis = [];\n\tlet currentEmojisWithCategories = []; // eslint-disable-line no-unused-vars\n\tlet rawSearchText = '';\n\tlet searchText = '';\n\tlet rootElement;\n\tlet baselineEmoji;\n\tlet tabpanelElement;\n\tlet searchMode = false; // eslint-disable-line no-unused-vars\n\tlet activeSearchItem = -1;\n\tlet message; // eslint-disable-line no-unused-vars\n\tlet skinTonePickerExpanded = false;\n\tlet skinTonePickerExpandedAfterAnimation = false; // eslint-disable-line no-unused-vars\n\tlet skinToneDropdown;\n\tlet currentSkinTone = 0;\n\tlet activeSkinTone = 0;\n\tlet skinToneButtonText; // eslint-disable-line no-unused-vars\n\tlet pickerStyle; // eslint-disable-line no-unused-vars\n\tlet skinToneButtonLabel = ''; // eslint-disable-line no-unused-vars\n\tlet skinTones = [];\n\tlet currentFavorites = []; // eslint-disable-line no-unused-vars\n\tlet defaultFavoriteEmojis;\n\tlet numColumns = DEFAULT_NUM_COLUMNS;\n\tlet isRtl = false; // eslint-disable-line no-unused-vars\n\tlet scrollbarWidth = 0; // eslint-disable-line no-unused-vars\n\tlet currentGroupIndex = 0;\n\tlet groups$1 = groups;\n\tlet currentGroup;\n\tlet databaseLoaded = false; // eslint-disable-line no-unused-vars\n\tlet activeSearchItemId; // eslint-disable-line no-unused-vars\n\n\t// constants\n\tconst EMPTY_ARRAY = [];\n\n\t//\n\t// Utils/helpers\n\t//\n\tconst focus = id => {\n\t\trootElement.getRootNode().getElementById(id).focus();\n\t};\n\n\t// fire a custom event that crosses the shadow boundary\n\tconst fireEvent = (name, detail) => {\n\t\trootElement.dispatchEvent(new CustomEvent(name, { detail, bubbles: true, composed: true }));\n\t};\n\n\t// eslint-disable-next-line no-unused-vars\n\tconst unicodeWithSkin = (emoji, currentSkinTone) => currentSkinTone && emoji.skins && emoji.skins[currentSkinTone] || emoji.unicode;\n\n\t// eslint-disable-next-line no-unused-vars\n\tconst labelWithSkin = (emoji, currentSkinTone) => uniq([\n\t\temoji.name || unicodeWithSkin(emoji, currentSkinTone),\n\t\temoji.annotation,\n\t\t...emoji.shortcodes || EMPTY_ARRAY\n\t].filter(Boolean)).join(', ');\n\n\t// eslint-disable-next-line no-unused-vars\n\tconst titleForEmoji = emoji => emoji.annotation || (emoji.shortcodes || EMPTY_ARRAY).join(', ');\n\n\t//\n\t// Calculate the width of the emoji grid. This serves two purposes:\n\t// 1) Re-calculate the --num-columns var because it may have changed\n\t// 2) Re-calculate the scrollbar width because it may have changed\n\t//   (i.e. because the number of items changed)\n\t// 3) Re-calculate whether we're in RTL mode or not.\n\t//\n\t// The benefit of doing this in one place is to align with rAF/ResizeObserver\n\t// and do all the calculations in one go. RTL vs LTR is not strictly width-related,\n\t// but since we're already reading the style here, and since it's already aligned with\n\t// the rAF loop, this is the most appropriate place to do it perf-wise.\n\t//\n\t// eslint-disable-next-line no-unused-vars\n\tfunction calculateEmojiGridStyle(node) {\n\t\treturn calculateWidth(node, width => {\n\t\t\t/* istanbul ignore next */\n\t\t\tif (\"production\" !== 'test') {\n\t\t\t\t// jsdom throws errors for this kind of fancy stuff\n\t\t\t\t// read all the style/layout calculations we need to make\n\t\t\t\tconst style = getComputedStyle(rootElement);\n\n\t\t\t\tconst newNumColumns = parseInt(style.getPropertyValue('--num-columns'), 10);\n\t\t\t\tconst newIsRtl = style.getPropertyValue('direction') === 'rtl';\n\t\t\t\tconst parentWidth = node.parentElement.getBoundingClientRect().width;\n\t\t\t\tconst newScrollbarWidth = parentWidth - width;\n\n\t\t\t\t// write to Svelte variables\n\t\t\t\t$$invalidate(48, numColumns = newNumColumns);\n\n\t\t\t\t$$invalidate(25, scrollbarWidth = newScrollbarWidth); // eslint-disable-line no-unused-vars\n\t\t\t\t$$invalidate(24, isRtl = newIsRtl); // eslint-disable-line no-unused-vars\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction checkZwjSupportAndUpdate(zwjEmojisToCheck) {\n\t\tconst rootNode = rootElement.getRootNode();\n\t\tconst emojiToDomNode = emoji => rootNode.getElementById(`emo-${emoji.id}`);\n\t\tcheckZwjSupport(zwjEmojisToCheck, baselineEmoji, emojiToDomNode);\n\n\t\t// force update\n\t\t((((((((((($$invalidate(1, currentEmojis), $$invalidate(14, databaseLoaded)), $$invalidate(46, searchText)), $$invalidate(13, currentGroup)), $$invalidate(44, emojiVersion)), $$invalidate(3, tabpanelElement)), $$invalidate(0, i18n)), $$invalidate(40, database)), $$invalidate(2, rawSearchText)), $$invalidate(12, groups$1)), $$invalidate(11, currentGroupIndex)), $$invalidate(42, customEmoji));\n\t}\n\n\tfunction isZwjSupported(emoji) {\n\t\treturn !emoji.unicode || !hasZwj(emoji) || supportedZwjEmojis.get(emoji.unicode);\n\t}\n\n\tasync function filterEmojisByVersion(emojis) {\n\t\tconst emojiSupportLevel = emojiVersion || await detectEmojiSupportLevel();\n\n\t\t// !version corresponds to custom emoji\n\t\treturn emojis.filter(({ version }) => !version || version <= emojiSupportLevel);\n\t}\n\n\tasync function summarizeEmojis(emojis) {\n\t\treturn summarizeEmojisForUI(emojis, emojiVersion || await detectEmojiSupportLevel());\n\t}\n\n\tasync function getEmojisByGroup(group) {\n\n\t\t// -1 is custom emoji\n\t\tconst emoji = group === -1\n\t\t? customEmoji\n\t\t: await database.getEmojiByGroup(group);\n\n\t\treturn summarizeEmojis(await filterEmojisByVersion(emoji));\n\t}\n\n\tasync function getEmojisBySearchQuery(query) {\n\t\treturn summarizeEmojis(await filterEmojisByVersion(await database.getEmojiBySearchQuery(query)));\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onSearchKeydown(event) {\n\t\tif (!searchMode || !currentEmojis.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst goToNextOrPrevious = previous => {\n\t\t\thalt(event);\n\t\t\t$$invalidate(5, activeSearchItem = incrementOrDecrement(previous, activeSearchItem, currentEmojis));\n\t\t};\n\n\t\tswitch (event.key) {\n\t\t\tcase 'ArrowDown':\n\t\t\t\treturn goToNextOrPrevious(false);\n\t\t\tcase 'ArrowUp':\n\t\t\t\treturn goToNextOrPrevious(true);\n\t\t\tcase 'Enter':\n\t\t\t\tif (activeSearchItem !== -1) {\n\t\t\t\t\thalt(event);\n\t\t\t\t\treturn clickEmoji(currentEmojis[activeSearchItem].id);\n\t\t\t\t} else if (currentEmojis.length) {\n\t\t\t\t\t$$invalidate(5, activeSearchItem = 0);\n\t\t\t\t}\n\t\t}\n\t}\n\n\t//\n\t// Handle user input on nav\n\t//\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onNavClick(group) {\n\t\t$$invalidate(2, rawSearchText = '');\n\t\t$$invalidate(46, searchText = '');\n\t\t$$invalidate(5, activeSearchItem = -1);\n\t\t$$invalidate(11, currentGroupIndex = groups$1.findIndex(_ => _.id === group.id));\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onNavKeydown(event) {\n\t\tconst { target, key } = event;\n\n\t\tconst doFocus = el => {\n\t\t\tif (el) {\n\t\t\t\thalt(event);\n\t\t\t\tel.focus();\n\t\t\t}\n\t\t};\n\n\t\tswitch (key) {\n\t\t\tcase 'ArrowLeft':\n\t\t\t\treturn doFocus(target.previousSibling);\n\t\t\tcase 'ArrowRight':\n\t\t\t\treturn doFocus(target.nextSibling);\n\t\t\tcase 'Home':\n\t\t\t\treturn doFocus(target.parentElement.firstChild);\n\t\t\tcase 'End':\n\t\t\t\treturn doFocus(target.parentElement.lastChild);\n\t\t}\n\t}\n\n\t//\n\t// Handle user input on an emoji\n\t//\n\tasync function clickEmoji(unicodeOrName) {\n\t\tconst emoji = await database.getEmojiByUnicodeOrName(unicodeOrName);\n\t\tconst emojiSummary = [...currentEmojis, ...currentFavorites].find(_ => _.id === unicodeOrName);\n\t\tconst skinTonedUnicode = emojiSummary.unicode && unicodeWithSkin(emojiSummary, currentSkinTone);\n\t\tawait database.incrementFavoriteEmojiCount(unicodeOrName);\n\n\t\tfireEvent('emoji-click', {\n\t\t\temoji,\n\t\t\tskinTone: currentSkinTone,\n\t\t\t...skinTonedUnicode && { unicode: skinTonedUnicode },\n\t\t\t...emojiSummary.name && { name: emojiSummary.name }\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tasync function onEmojiClick(event) {\n\t\tconst { target } = event;\n\n\t\tif (!target.classList.contains('emoji')) {\n\t\t\treturn;\n\t\t}\n\n\t\thalt(event);\n\t\tconst id = target.id.substring(4); // replace 'emo-' or 'fav-' prefix\n\n\t\t/* no await */\n\t\tclickEmoji(id);\n\t}\n\n\t//\n\t// Handle user input on the skintone picker\n\t//\n\t// eslint-disable-next-line no-unused-vars\n\tfunction changeSkinTone(skinTone) {\n\t\t$$invalidate(8, currentSkinTone = skinTone);\n\t\t$$invalidate(6, skinTonePickerExpanded = false);\n\t\tfocus('skintone-button');\n\t\tfireEvent('skin-tone-change', { skinTone });\n\n\t\t/* no await */\n\t\tdatabase.setPreferredSkinTone(skinTone);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onSkinToneOptionsClick(event) {\n\t\tconst { target: { id } } = event;\n\t\tconst match = id && id.match(/^skintone-(\\d)/); // skintone option format\n\n\t\tif (!match) {\n\t\t\t// not a skintone option\n\t\t\treturn;\n\t\t}\n\n\t\thalt(event);\n\t\tconst skinTone = parseInt(match[1], 10); // remove 'skintone-' prefix\n\t\tchangeSkinTone(skinTone);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onClickSkinToneButton(event) {\n\t\t$$invalidate(6, skinTonePickerExpanded = !skinTonePickerExpanded);\n\t\t$$invalidate(20, activeSkinTone = currentSkinTone);\n\n\t\tif (skinTonePickerExpanded) {\n\t\t\thalt(event);\n\t\t\trAF(() => focus('skintone-list'));\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onSkinToneOptionsKeydown(event) {\n\t\tif (!skinTonePickerExpanded) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst changeActiveSkinTone = async nextSkinTone => {\n\t\t\thalt(event);\n\t\t\t$$invalidate(20, activeSkinTone = nextSkinTone);\n\t\t};\n\n\t\tswitch (event.key) {\n\t\t\tcase 'ArrowUp':\n\t\t\t\treturn changeActiveSkinTone(incrementOrDecrement(true, activeSkinTone, skinTones));\n\t\t\tcase 'ArrowDown':\n\t\t\t\treturn changeActiveSkinTone(incrementOrDecrement(false, activeSkinTone, skinTones));\n\t\t\tcase 'Home':\n\t\t\t\treturn changeActiveSkinTone(0);\n\t\t\tcase 'End':\n\t\t\t\treturn changeActiveSkinTone(skinTones.length - 1);\n\t\t\tcase 'Enter':\n\t\t\t\t// enter on keydown, space on keyup. this is just how browsers work for buttons\n\t\t\t\t// https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n\t\t\t\thalt(event);\n\t\t\t\treturn changeSkinTone(activeSkinTone);\n\t\t\tcase 'Escape':\n\t\t\t\thalt(event);\n\t\t\t\t$$invalidate(6, skinTonePickerExpanded = false);\n\t\t\t\treturn focus('skintone-button');\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onSkinToneOptionsKeyup(event) {\n\t\tif (!skinTonePickerExpanded) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event.key) {\n\t\t\tcase ' ':\n\t\t\t\t// enter on keydown, space on keyup. this is just how browsers work for buttons\n\t\t\t\t// https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n\t\t\t\thalt(event);\n\t\t\t\treturn changeSkinTone(activeSkinTone);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tasync function onSkinToneOptionsFocusOut(event) {\n\t\t// On blur outside of the skintone listbox, collapse the skintone picker.\n\t\tconst { relatedTarget } = event;\n\n\t\tif (!relatedTarget || relatedTarget.id !== 'skintone-list') {\n\t\t\t$$invalidate(6, skinTonePickerExpanded = false);\n\t\t}\n\t}\n\n\tfunction input_input_handler() {\n\t\trawSearchText = this.value;\n\t\t$$invalidate(2, rawSearchText);\n\t}\n\n\tfunction div3_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tskinToneDropdown = $$value;\n\t\t\t$$invalidate(7, skinToneDropdown);\n\t\t});\n\t}\n\n\tconst click_handler = group => onNavClick(group);\n\n\tfunction div10_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\ttabpanelElement = $$value;\n\t\t\t$$invalidate(3, tabpanelElement);\n\t\t});\n\t}\n\n\tfunction button1_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tbaselineEmoji = $$value;\n\t\t\t$$invalidate(17, baselineEmoji);\n\t\t});\n\t}\n\n\tfunction section_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\trootElement = $$value;\n\t\t\t$$invalidate(16, rootElement);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('skinToneEmoji' in $$props) $$invalidate(41, skinToneEmoji = $$props.skinToneEmoji);\n\t\tif ('i18n' in $$props) $$invalidate(0, i18n = $$props.i18n);\n\t\tif ('database' in $$props) $$invalidate(40, database = $$props.database);\n\t\tif ('customEmoji' in $$props) $$invalidate(42, customEmoji = $$props.customEmoji);\n\t\tif ('customCategorySorting' in $$props) $$invalidate(43, customCategorySorting = $$props.customCategorySorting);\n\t\tif ('emojiVersion' in $$props) $$invalidate(44, emojiVersion = $$props.emojiVersion);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty[1] & /*customEmoji, database*/ 2560) {\n\t\t\t/* eslint-enable no-unused-vars */\n\t\t\t//\n\t\t\t// Set or update the customEmoji\n\t\t\t//\n\t\t\t{\n\t\t\t\tif (customEmoji && database) {\n\t\t\t\t\t$$invalidate(40, database.customEmoji = customEmoji, database);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*i18n*/ 1 | $$self.$$.dirty[1] & /*database*/ 512) {\n\t\t\t//\n\t\t\t// Set or update the database object\n\t\t\t//\n\t\t\t{\n\t\t\t\t// show a Loading message if it takes a long time, or show an error if there's a network/IDB error\n\t\t\t\tasync function handleDatabaseLoading() {\n\t\t\t\t\tlet showingLoadingMessage = false;\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tshowingLoadingMessage = true;\n\t\t\t\t\t\t\t$$invalidate(18, message = i18n.loadingMessage);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTIMEOUT_BEFORE_LOADING_MESSAGE\n\t\t\t\t\t);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait database.ready();\n\t\t\t\t\t\t$$invalidate(14, databaseLoaded = true); // eslint-disable-line no-unused-vars\n\t\t\t\t\t} catch(err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t$$invalidate(18, message = i18n.networkErrorMessage);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tclearTimeout(timeoutHandle);\n\n\t\t\t\t\t\tif (showingLoadingMessage) {\n\t\t\t\t\t\t\t// Seems safer than checking the i18n string, which may change\n\t\t\t\t\t\t\tshowingLoadingMessage = false;\n\n\t\t\t\t\t\t\t$$invalidate(18, message = ''); // eslint-disable-line no-unused-vars\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (database) {\n\t\t\t\t\t/* no await */\n\t\t\t\t\thandleDatabaseLoading();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*groups, currentGroupIndex*/ 6144 | $$self.$$.dirty[1] & /*customEmoji*/ 2048) {\n\t\t\t{\n\t\t\t\tif (customEmoji && customEmoji.length) {\n\t\t\t\t\t$$invalidate(12, groups$1 = [customGroup, ...groups]);\n\t\t\t\t} else if (groups$1 !== groups) {\n\t\t\t\t\tif (currentGroupIndex) {\n\t\t\t\t\t\t// If the current group is anything other than \"custom\" (which is first), decrement.\n\t\t\t\t\t\t// This fixes the odd case where you set customEmoji, then pick a category, then unset customEmoji\n\t\t\t\t\t\t$$invalidate(11, currentGroupIndex--, currentGroupIndex);\n\t\t\t\t\t}\n\n\t\t\t\t\t$$invalidate(12, groups$1 = groups);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*rawSearchText*/ 4) {\n\t\t\t/* eslint-enable no-unused-vars */\n\t\t\t//\n\t\t\t// Handle user input on the search input\n\t\t\t//\n\t\t\t{\n\t\t\t\trIC(() => {\n\t\t\t\t\t$$invalidate(46, searchText = (rawSearchText || '').trim()); // defer to avoid input delays, plus we can trim here\n\t\t\t\t\t$$invalidate(5, activeSearchItem = -1);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*groups, currentGroupIndex*/ 6144) {\n\t\t\t//\n\t\t\t// Update the current group based on the currentGroupIndex\n\t\t\t//\n\t\t\t$$invalidate(13, currentGroup = groups$1[currentGroupIndex]);\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*databaseLoaded, currentGroup*/ 24576 | $$self.$$.dirty[1] & /*searchText*/ 32768) {\n\t\t\t//\n\t\t\t// Set or update the currentEmojis. Check for invalid ZWJ renderings\n\t\t\t// (i.e. double emoji).\n\t\t\t//\n\t\t\t{\n\t\t\t\tasync function updateEmojis() {\n\n\t\t\t\t\tif (!databaseLoaded) {\n\t\t\t\t\t\t$$invalidate(1, currentEmojis = []);\n\t\t\t\t\t\t$$invalidate(4, searchMode = false);\n\t\t\t\t\t} else if (searchText.length >= MIN_SEARCH_TEXT_LENGTH) {\n\t\t\t\t\t\tconst currentSearchText = searchText;\n\t\t\t\t\t\tconst newEmojis = await getEmojisBySearchQuery(currentSearchText);\n\n\t\t\t\t\t\tif (currentSearchText === searchText) {\n\t\t\t\t\t\t\t// if the situation changes asynchronously, do not update\n\t\t\t\t\t\t\t$$invalidate(1, currentEmojis = newEmojis);\n\n\t\t\t\t\t\t\t$$invalidate(4, searchMode = true);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (currentGroup) {\n\t\t\t\t\t\tconst currentGroupId = currentGroup.id;\n\t\t\t\t\t\tconst newEmojis = await getEmojisByGroup(currentGroupId);\n\n\t\t\t\t\t\tif (currentGroupId === currentGroup.id) {\n\t\t\t\t\t\t\t// if the situation changes asynchronously, do not update\n\t\t\t\t\t\t\t$$invalidate(1, currentEmojis = newEmojis);\n\n\t\t\t\t\t\t\t$$invalidate(4, searchMode = false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* no await */\n\t\t\t\tupdateEmojis();\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*groups, searchMode*/ 4112) {\n\t\t\t//\n\t\t\t// Global styles for the entire picker\n\t\t\t//\n\t\t\t/* eslint-disable no-unused-vars */\n\t\t\t$$invalidate(22, pickerStyle = `\n  --num-groups: ${groups$1.length}; \n  --indicator-opacity: ${searchMode ? 0 : 1}; \n  --num-skintones: ${NUM_SKIN_TONES};`);\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*databaseLoaded*/ 16384 | $$self.$$.dirty[1] & /*database*/ 512) {\n\t\t\t//\n\t\t\t// Set or update the preferred skin tone\n\t\t\t//\n\t\t\t{\n\t\t\t\tasync function updatePreferredSkinTone() {\n\t\t\t\t\tif (databaseLoaded) {\n\t\t\t\t\t\t$$invalidate(8, currentSkinTone = await database.getPreferredSkinTone());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* no await */\n\t\t\t\tupdatePreferredSkinTone();\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[1] & /*skinToneEmoji*/ 1024) {\n\t\t\t$$invalidate(9, skinTones = Array(NUM_SKIN_TONES).fill().map((_, i) => applySkinTone(skinToneEmoji, i)));\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*skinTones, currentSkinTone*/ 768) {\n\t\t\t/* eslint-disable no-unused-vars */\n\t\t\t$$invalidate(21, skinToneButtonText = skinTones[currentSkinTone]);\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*i18n, currentSkinTone*/ 257) {\n\t\t\t$$invalidate(23, skinToneButtonLabel = i18n.skinToneLabel.replace('{skinTone}', i18n.skinTones[currentSkinTone]));\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*databaseLoaded*/ 16384 | $$self.$$.dirty[1] & /*database*/ 512) {\n\t\t\t/* eslint-enable no-unused-vars */\n\t\t\t//\n\t\t\t// Set or update the favorites emojis\n\t\t\t//\n\t\t\t{\n\t\t\t\tasync function updateDefaultFavoriteEmojis() {\n\t\t\t\t\t$$invalidate(47, defaultFavoriteEmojis = (await Promise.all(MOST_COMMONLY_USED_EMOJI.map(unicode => database.getEmojiByUnicodeOrName(unicode)))).filter(Boolean)); // filter because in Jest tests we don't have all the emoji in the DB\n\t\t\t\t}\n\n\t\t\t\tif (databaseLoaded) {\n\t\t\t\t\t/* no await */\n\t\t\t\t\tupdateDefaultFavoriteEmojis();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*databaseLoaded*/ 16384 | $$self.$$.dirty[1] & /*database, numColumns, defaultFavoriteEmojis*/ 197120) {\n\t\t\t{\n\t\t\t\tasync function updateFavorites() {\n\t\t\t\t\tconst dbFavorites = await database.getTopFavoriteEmoji(numColumns);\n\t\t\t\t\tconst favorites = await summarizeEmojis(uniqBy([...dbFavorites, ...defaultFavoriteEmojis], _ => _.unicode || _.name).slice(0, numColumns));\n\t\t\t\t\t$$invalidate(10, currentFavorites = favorites);\n\t\t\t\t}\n\n\t\t\t\tif (databaseLoaded && defaultFavoriteEmojis) {\n\t\t\t\t\t/* no await */\n\t\t\t\t\tupdateFavorites();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*currentEmojis, tabpanelElement*/ 10 | $$self.$$.dirty[1] & /*emojiVersion*/ 8192) {\n\t\t\t// Some emojis have their ligatures rendered as two or more consecutive emojis\n\t\t\t// We want to treat these the same as unsupported emojis, so we compare their\n\t\t\t// widths against the baseline widths and remove them as necessary\n\t\t\t{\n\t\t\t\tconst zwjEmojisToCheck = currentEmojis.filter(emoji => emoji.unicode).filter(\n\t\t\t\t\temoji => hasZwj(emoji) && !supportedZwjEmojis.has(emoji.unicode)\n\t\t\t\t);\n\n\t\t\t\tif (!emojiVersion && zwjEmojisToCheck.length) {\n\t\t\t\t\t// render now, check their length later\n\t\t\t\t\trAF(() => checkZwjSupportAndUpdate(zwjEmojisToCheck));\n\t\t\t\t} else {\n\t\t\t\t\t$$invalidate(1, currentEmojis = emojiVersion\n\t\t\t\t\t? currentEmojis\n\t\t\t\t\t: currentEmojis.filter(isZwjSupported));\n\n\t\t\t\t\t// Reset scroll top to 0 when emojis change\n\t\t\t\t\trAF(() => resetScrollTopIfPossible(tabpanelElement));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*currentEmojis, currentFavorites*/ 1026 | $$self.$$.dirty[1] & /*initialLoad*/ 16384) {\n\t\t\t{\n\t\t\t\t// consider initialLoad to be complete when the first tabpanel and favorites are rendered\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (\"production\" !== 'production' || false) {\n\t\t\t\t\tif (currentEmojis.length && currentFavorites.length && initialLoad) {\n\t\t\t\t\t\t$$invalidate(45, initialLoad = false);\n\t\t\t\t\t\trequestPostAnimationFrame(() => (void 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*searchMode, currentEmojis*/ 18 | $$self.$$.dirty[1] & /*customCategorySorting*/ 4096) {\n\t\t\t//\n\t\t\t// Derive currentEmojisWithCategories from currentEmojis. This is always done even if there\n\t\t\t// are no categories, because it's just easier to code the HTML this way.\n\t\t\t//\n\t\t\t{\n\t\t\t\tfunction calculateCurrentEmojisWithCategories() {\n\t\t\t\t\tif (searchMode) {\n\t\t\t\t\t\treturn [{ category: '', emojis: currentEmojis }];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst categoriesToEmoji = new Map();\n\n\t\t\t\t\tfor (const emoji of currentEmojis) {\n\t\t\t\t\t\tconst category = emoji.category || '';\n\t\t\t\t\t\tlet emojis = categoriesToEmoji.get(category);\n\n\t\t\t\t\t\tif (!emojis) {\n\t\t\t\t\t\t\temojis = [];\n\t\t\t\t\t\t\tcategoriesToEmoji.set(category, emojis);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\temojis.push(emoji);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...categoriesToEmoji.entries()].map(([category, emojis]) => ({ category, emojis })).sort((a, b) => customCategorySorting(a.category, b.category));\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\t$$invalidate(15, currentEmojisWithCategories = calculateCurrentEmojisWithCategories());\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*activeSearchItem, currentEmojis*/ 34) {\n\t\t\t//\n\t\t\t// Handle active search item (i.e. pressing up or down while searching)\n\t\t\t//\n\t\t\t/* eslint-disable no-unused-vars */\n\t\t\t$$invalidate(26, activeSearchItemId = activeSearchItem !== -1 && currentEmojis[activeSearchItem].id);\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*skinTonePickerExpanded, skinToneDropdown*/ 192) {\n\t\t\t// To make the animation nicer, change the z-index of the skintone picker button\n\t\t\t// *after* the animation has played. This makes it appear that the picker box\n\t\t\t// is expanding \"below\" the button\n\t\t\t{\n\t\t\t\tif (skinTonePickerExpanded) {\n\t\t\t\t\tskinToneDropdown.addEventListener(\n\t\t\t\t\t\t'transitionend',\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t$$invalidate(19, skinTonePickerExpandedAfterAnimation = true); // eslint-disable-line no-unused-vars\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ once: true }\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t$$invalidate(19, skinTonePickerExpandedAfterAnimation = false); // eslint-disable-line no-unused-vars\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\ti18n,\n\t\tcurrentEmojis,\n\t\trawSearchText,\n\t\ttabpanelElement,\n\t\tsearchMode,\n\t\tactiveSearchItem,\n\t\tskinTonePickerExpanded,\n\t\tskinToneDropdown,\n\t\tcurrentSkinTone,\n\t\tskinTones,\n\t\tcurrentFavorites,\n\t\tcurrentGroupIndex,\n\t\tgroups$1,\n\t\tcurrentGroup,\n\t\tdatabaseLoaded,\n\t\tcurrentEmojisWithCategories,\n\t\trootElement,\n\t\tbaselineEmoji,\n\t\tmessage,\n\t\tskinTonePickerExpandedAfterAnimation,\n\t\tactiveSkinTone,\n\t\tskinToneButtonText,\n\t\tpickerStyle,\n\t\tskinToneButtonLabel,\n\t\tisRtl,\n\t\tscrollbarWidth,\n\t\tactiveSearchItemId,\n\t\tunicodeWithSkin,\n\t\tlabelWithSkin,\n\t\ttitleForEmoji,\n\t\tcalculateEmojiGridStyle,\n\t\tonSearchKeydown,\n\t\tonNavClick,\n\t\tonNavKeydown,\n\t\tonEmojiClick,\n\t\tonSkinToneOptionsClick,\n\t\tonClickSkinToneButton,\n\t\tonSkinToneOptionsKeydown,\n\t\tonSkinToneOptionsKeyup,\n\t\tonSkinToneOptionsFocusOut,\n\t\tdatabase,\n\t\tskinToneEmoji,\n\t\tcustomEmoji,\n\t\tcustomCategorySorting,\n\t\temojiVersion,\n\t\tinitialLoad,\n\t\tsearchText,\n\t\tdefaultFavoriteEmojis,\n\t\tnumColumns,\n\t\tinput_input_handler,\n\t\tdiv3_binding,\n\t\tclick_handler,\n\t\tdiv10_binding,\n\t\tbutton1_binding,\n\t\tsection_binding\n\t];\n}\n\nclass Picker extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance,\n\t\t\tcreate_fragment,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tskinToneEmoji: 41,\n\t\t\t\ti18n: 0,\n\t\t\t\tdatabase: 40,\n\t\t\t\tcustomEmoji: 42,\n\t\t\t\tcustomCategorySorting: 43,\n\t\t\t\temojiVersion: 44\n\t\t\t},\n\t\t\tnull,\n\t\t\t[-1, -1, -1]\n\t\t);\n\t}\n}\n\nconst DEFAULT_DATA_SOURCE = 'https://cdn.jsdelivr.net/npm/emoji-picker-element-data@^1/en/emojibase/data.json';\nconst DEFAULT_LOCALE = 'en';\n\nvar enI18n = {\n  categoriesLabel: 'Categories',\n  emojiUnsupportedMessage: 'Your browser does not support color emoji.',\n  favoritesLabel: 'Favorites',\n  loadingMessage: 'Loading…',\n  networkErrorMessage: 'Could not load emoji.',\n  regionLabel: 'Emoji picker',\n  searchDescription: 'When search results are available, press up or down to select and enter to choose.',\n  searchLabel: 'Search',\n  searchResultsLabel: 'Search results',\n  skinToneDescription: 'When expanded, press up or down to select and enter to choose.',\n  skinToneLabel: 'Choose a skin tone (currently {skinTone})',\n  skinTonesLabel: 'Skin tones',\n  skinTones: [\n    'Default',\n    'Light',\n    'Medium-Light',\n    'Medium',\n    'Medium-Dark',\n    'Dark'\n  ],\n  categories: {\n    custom: 'Custom',\n    'smileys-emotion': 'Smileys and emoticons',\n    'people-body': 'People and body',\n    'animals-nature': 'Animals and nature',\n    'food-drink': 'Food and drink',\n    'travel-places': 'Travel and places',\n    activities: 'Activities',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags'\n  }\n};\n\nconst PROPS = [\n  'customEmoji',\n  'customCategorySorting',\n  'database',\n  'dataSource',\n  'i18n',\n  'locale',\n  'skinToneEmoji',\n  'emojiVersion'\n];\n\n// Styles injected ourselves, so we can declare the FONT_FAMILY variable in one place\nconst EXTRA_STYLES = `:host{--emoji-font-family:${FONT_FAMILY}}`;\n\nclass PickerElement extends HTMLElement {\n  constructor (props) {\n    super();\n    this.attachShadow({ mode: 'open' });\n    const style = document.createElement('style');\n    style.textContent = \":host{--emoji-size:1.375rem;--emoji-padding:0.5rem;--category-emoji-size:var(--emoji-size);--category-emoji-padding:var(--emoji-padding);--indicator-height:3px;--input-border-radius:0.5rem;--input-border-size:1px;--input-font-size:1rem;--input-line-height:1.5;--input-padding:0.25rem;--num-columns:8;--outline-size:2px;--border-size:1px;--skintone-border-radius:1rem;--category-font-size:1rem;display:flex;width:min-content;height:400px}:host,:host(.light){color-scheme:light;--background:#fff;--border-color:#e0e0e0;--indicator-color:#385ac1;--input-border-color:#999;--input-font-color:#111;--input-placeholder-color:#999;--outline-color:#999;--category-font-color:#111;--button-active-background:#e6e6e6;--button-hover-background:#d9d9d9}:host(.dark){color-scheme:dark;--background:#222;--border-color:#444;--indicator-color:#5373ec;--input-border-color:#ccc;--input-font-color:#efefef;--input-placeholder-color:#ccc;--outline-color:#fff;--category-font-color:#efefef;--button-active-background:#555555;--button-hover-background:#484848}@media (prefers-color-scheme:dark){:host{color-scheme:dark;--background:#222;--border-color:#444;--indicator-color:#5373ec;--input-border-color:#ccc;--input-font-color:#efefef;--input-placeholder-color:#ccc;--outline-color:#fff;--category-font-color:#efefef;--button-active-background:#555555;--button-hover-background:#484848}}:host([hidden]){display:none}button{margin:0;padding:0;border:0;background:0 0;box-shadow:none;-webkit-tap-highlight-color:transparent}button::-moz-focus-inner{border:0}input{padding:0;margin:0;line-height:1.15;font-family:inherit}input[type=search]{-webkit-appearance:none}:focus{outline:var(--outline-color) solid var(--outline-size);outline-offset:calc(-1*var(--outline-size))}:host([data-js-focus-visible]) :focus:not([data-focus-visible-added]){outline:0}:focus:not(:focus-visible){outline:0}.hide-focus{outline:0}*{box-sizing:border-box}.picker{contain:content;display:flex;flex-direction:column;background:var(--background);border:var(--border-size) solid var(--border-color);width:100%;height:100%;overflow:hidden;--total-emoji-size:calc(var(--emoji-size) + (2 * var(--emoji-padding)));--total-category-emoji-size:calc(var(--category-emoji-size) + (2 * var(--category-emoji-padding)))}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.hidden{opacity:0;pointer-events:none}.abs-pos{position:absolute;left:0;top:0}.gone{display:none!important}.skintone-button-wrapper,.skintone-list{background:var(--background);z-index:3}.skintone-button-wrapper.expanded{z-index:1}.skintone-list{position:absolute;inset-inline-end:0;top:0;z-index:2;overflow:visible;border-bottom:var(--border-size) solid var(--border-color);border-radius:0 0 var(--skintone-border-radius) var(--skintone-border-radius);will-change:transform;transition:transform .2s ease-in-out;transform-origin:center 0}@media (prefers-reduced-motion:reduce){.skintone-list{transition-duration:.001s}}@supports not (inset-inline-end:0){.skintone-list{right:0}}.skintone-list.no-animate{transition:none}.tabpanel{overflow-y:auto;-webkit-overflow-scrolling:touch;will-change:transform;min-height:0;flex:1;contain:content}.emoji-menu{display:grid;grid-template-columns:repeat(var(--num-columns),var(--total-emoji-size));justify-content:space-around;align-items:flex-start;width:100%}.category{padding:var(--emoji-padding);font-size:var(--category-font-size);color:var(--category-font-color)}.custom-emoji,.emoji,button.emoji{height:var(--total-emoji-size);width:var(--total-emoji-size)}.emoji,button.emoji{font-size:var(--emoji-size);display:flex;align-items:center;justify-content:center;border-radius:100%;line-height:1;overflow:hidden;font-family:var(--emoji-font-family);cursor:pointer}@media (hover:hover) and (pointer:fine){.emoji:hover,button.emoji:hover{background:var(--button-hover-background)}}.emoji.active,.emoji:active,button.emoji.active,button.emoji:active{background:var(--button-active-background)}.custom-emoji{padding:var(--emoji-padding);object-fit:contain;pointer-events:none;background-repeat:no-repeat;background-position:center center;background-size:var(--emoji-size) var(--emoji-size)}.nav,.nav-button{align-items:center}.nav{display:grid;justify-content:space-between;contain:content}.nav-button{display:flex;justify-content:center}.nav-emoji{font-size:var(--category-emoji-size);width:var(--total-category-emoji-size);height:var(--total-category-emoji-size)}.indicator-wrapper{display:flex;border-bottom:1px solid var(--border-color)}.indicator{width:calc(100%/var(--num-groups));height:var(--indicator-height);opacity:var(--indicator-opacity);background-color:var(--indicator-color);will-change:transform,opacity;transition:opacity .1s linear,transform .25s ease-in-out}@media (prefers-reduced-motion:reduce){.indicator{will-change:opacity;transition:opacity .1s linear}}.pad-top,input.search{background:var(--background);width:100%}.pad-top{height:var(--emoji-padding);z-index:3}.search-row{display:flex;align-items:center;position:relative;padding-inline-start:var(--emoji-padding);padding-bottom:var(--emoji-padding)}.search-wrapper{flex:1;min-width:0}input.search{padding:var(--input-padding);border-radius:var(--input-border-radius);border:var(--input-border-size) solid var(--input-border-color);color:var(--input-font-color);font-size:var(--input-font-size);line-height:var(--input-line-height)}input.search::placeholder{color:var(--input-placeholder-color)}.favorites{display:flex;flex-direction:row;border-top:var(--border-size) solid var(--border-color);contain:content}.message{padding:var(--emoji-padding)}\" + EXTRA_STYLES;\n    this.shadowRoot.appendChild(style);\n    this._ctx = {\n      // Set defaults\n      locale: DEFAULT_LOCALE,\n      dataSource: DEFAULT_DATA_SOURCE,\n      skinToneEmoji: DEFAULT_SKIN_TONE_EMOJI,\n      customCategorySorting: DEFAULT_CATEGORY_SORTING,\n      customEmoji: null,\n      i18n: enI18n,\n      emojiVersion: null,\n      ...props\n    };\n    // Handle properties set before the element was upgraded\n    for (const prop of PROPS) {\n      if (prop !== 'database' && Object.prototype.hasOwnProperty.call(this, prop)) {\n        this._ctx[prop] = this[prop];\n        delete this[prop];\n      }\n    }\n    this._dbFlush(); // wait for a flush before creating the db, in case the user calls e.g. a setter or setAttribute\n  }\n\n  connectedCallback () {\n    // The _cmp may be defined if the component was immediately disconnected and then reconnected. In that case,\n    // do nothing (preserve the state)\n    if (!this._cmp) {\n      this._cmp = new Picker({\n        target: this.shadowRoot,\n        props: this._ctx\n      });\n    }\n  }\n\n  disconnectedCallback () {\n    // Check in a microtask if the element is still connected. If so, treat this as a \"move\" rather than a disconnect\n    // Inspired by Vue: https://vuejs.org/guide/extras/web-components.html#building-custom-elements-with-vue\n    Promise.resolve().then(() => {\n      // this._cmp may be defined if connect-disconnect-connect-disconnect occurs synchronously\n      if (!this.isConnected && this._cmp) {\n        this._cmp.$destroy();\n        this._cmp = undefined;\n\n        const { database } = this._ctx;\n        database.close()\n          // only happens if the database failed to load in the first place, so we don't care\n          .catch(err => console.error(err));\n      }\n    });\n  }\n\n  static get observedAttributes () {\n    return ['locale', 'data-source', 'skin-tone-emoji', 'emoji-version'] // complex objects aren't supported, also use kebab-case\n  }\n\n  attributeChangedCallback (attrName, oldValue, newValue) {\n    this._set(\n      // convert from kebab-case to camelcase\n      // see https://github.com/sveltejs/svelte/issues/3852#issuecomment-665037015\n      attrName.replace(/-([a-z])/g, (_, up) => up.toUpperCase()),\n      // convert string attribute to float if necessary\n      attrName === 'emoji-version' ? parseFloat(newValue) : newValue\n    );\n  }\n\n  _set (prop, newValue) {\n    this._ctx[prop] = newValue;\n    if (this._cmp) {\n      this._cmp.$set({ [prop]: newValue });\n    }\n    if (['locale', 'dataSource'].includes(prop)) {\n      this._dbFlush();\n    }\n  }\n\n  _dbCreate () {\n    const { locale, dataSource, database } = this._ctx;\n    // only create a new database if we really need to\n    if (!database || database.locale !== locale || database.dataSource !== dataSource) {\n      this._set('database', new Database({ locale, dataSource }));\n    }\n  }\n\n  // Update the Database in one microtask if the locale/dataSource change. We do one microtask\n  // so we don't create two Databases if e.g. both the locale and the dataSource change\n  _dbFlush () {\n    Promise.resolve().then(() => (\n      this._dbCreate()\n    ));\n  }\n}\n\nconst definitions = {};\n\nfor (const prop of PROPS) {\n  definitions[prop] = {\n    get () {\n      if (prop === 'database') {\n        // in rare cases, the microtask may not be flushed yet, so we need to instantiate the DB\n        // now if the user is asking for it\n        this._dbCreate();\n      }\n      return this._ctx[prop]\n    },\n    set (val) {\n      if (prop === 'database') {\n        throw new Error('database is read-only')\n      }\n      this._set(prop, val);\n    }\n  };\n}\n\nObject.defineProperties(PickerElement.prototype, definitions);\n\n/* istanbul ignore else */\nif (!customElements.get('emoji-picker')) { // if already defined, do nothing (e.g. same script imported twice)\n  customElements.define('emoji-picker', PickerElement);\n}\n\nexport { PickerElement as default };\n"],
  "mappings": "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",
  "names": ["set", "keyPath", "res", "emoji", "version", "_", "result", "customEmojiIndex", "results", "currentMap", "text", "create_each_block", "insert", "instance", "create_fragment", "MIN_SEARCH_TEXT_LENGTH", "uniqBy", "set", "uniqBy", "element", "ctx", "currentSkinTone", "$$props", "MIN_SEARCH_TEXT_LENGTH", "DEFAULT_DATA_SOURCE", "DEFAULT_LOCALE"]
}
