import { type CountryCode, type Examples } from 'libphonenumber-js';
import type { Country, Result } from './types';
declare function loadPhoneNumberExamplesFile(): Promise<Examples>;
declare function isSameCountryCallingCode(countryCode: CountryCode, countryCode2: CountryCode): boolean;
declare function getPhoneNumberExample(countryCode?: CountryCode): string | undefined;
declare function sanitizePhoneNumber(input?: string): string;
declare function getCountriesList(locale?: string, customCountriesNameListByIsoCode?: Record<CountryCode, string>): Country[] | undefined;
declare function browserLocale(): {
    locale?: undefined;
    browserLocale?: undefined;
} | {
    locale: string;
    browserLocale: string;
};
export declare function isCountryAvailable(locale: string): boolean;
declare function getAsYouTypeFormat(countryCode?: CountryCode, phoneNumber?: string): string | undefined;
declare function fetchCountryCode(): Promise<string | undefined>;
export declare function useLibphonenumber(): {
    fetchCountryCode: typeof fetchCountryCode;
    getAsYouTypeFormat: typeof getAsYouTypeFormat;
    getResultsFromPhoneNumber: ({ phoneNumber, countryCode, }: {
        phoneNumber?: string | undefined;
        countryCode?: CountryCode | undefined;
    }) => Result;
    loadPhoneNumberExamplesFile: typeof loadPhoneNumberExamplesFile;
    getPhoneNumberExample: typeof getPhoneNumberExample;
    sanitizePhoneNumber: typeof sanitizePhoneNumber;
    getCountriesList: typeof getCountriesList;
    browserLocale: typeof browserLocale;
    isSameCountryCallingCode: typeof isSameCountryCallingCode;
};
export {};
