import type { PropType } from 'vue';
import type { Color } from './types';
export type BadgeColor = Color | 'gray';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    color: {
        type: PropType<BadgeColor>;
        default: string;
        validator: (value: string) => boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    nowrap: {
        type: BooleanConstructor;
        default: boolean;
    };
    outline: {
        type: BooleanConstructor;
        default: boolean;
    };
    pastel: {
        type: BooleanConstructor;
        default: boolean;
    };
    roundedSize: {
        type: PropType<"sm" | "md" | "lg" | "xl" | "none" | "full">;
        default: string;
        validator: (value: string) => boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: PropType<BadgeColor>;
        default: string;
        validator: (value: string) => boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    nowrap: {
        type: BooleanConstructor;
        default: boolean;
    };
    outline: {
        type: BooleanConstructor;
        default: boolean;
    };
    pastel: {
        type: BooleanConstructor;
        default: boolean;
    };
    roundedSize: {
        type: PropType<"sm" | "md" | "lg" | "xl" | "none" | "full">;
        default: string;
        validator: (value: string) => boolean;
    };
}>>, {
    size: string;
    color: BadgeColor;
    outline: boolean;
    pastel: boolean;
    roundedSize: "sm" | "md" | "lg" | "xl" | "none" | "full";
    nowrap: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
