import "./assets/MazRadioButtons.css";
import { defineComponent as y, openBlock as u, createElementBlock as c, normalizeClass as m, Fragment as g, renderList as z, normalizeStyle as S, createElementVNode as b, renderSlot as h, createTextVNode as k, toDisplayString as p } from "vue";
const x = ["for", "aria-checked", "onKeydown"], B = ["id", "name", "value", "onChange"], w = /* @__PURE__ */ y({
  __name: "MazRadioButtons",
  props: {
    modelValue: { type: [String, Number], default: void 0 },
    options: { type: Array, required: !0 },
    name: {
      type: String,
      default: "MazButtonsRadio"
    },
    color: {
      type: String,
      default: "primary"
    },
    noElevation: { type: Boolean, default: !1 },
    orientation: { type: String, default: "row" }
  },
  emits: ["update:model-value", "change"],
  setup(t, { emit: r }) {
    const o = t, d = r;
    function l(a) {
      d("update:model-value", a.value);
    }
    function n(a) {
      return o.modelValue === a;
    }
    function v(a, i) {
      ["Space"].includes(a.code) && (a.preventDefault(), l(i));
    }
    return (a, i) => (u(), c(
      "div",
      {
        class: m(["m-radio-buttons", [t.orientation === "row" ? "maz-flex-row" : "maz-flex-col"]])
      },
      [
        (u(!0), c(
          g,
          null,
          z(t.options, (e, f) => (u(), c("label", {
            key: f,
            for: e.value.toString(),
            class: m(["m-radio-buttons__items", {
              "--is-selected": n(e.value),
              "maz-elevation": !t.noElevation
            }]),
            tabindex: "0",
            style: S(
              n(e.value) ? {
                color: `var(--maz-color-${t.color}-contrast)`,
                backgroundColor: `var(--maz-color-${t.color})`
              } : void 0
            ),
            role: "radio",
            "aria-checked": n(e.value),
            onKeydown: (s) => v(s, e)
          }, [
            b("input", {
              id: e.value.toString(),
              type: "radio",
              name: t.name,
              value: e.value,
              class: "maz-hidden",
              onChange: (s) => l(e)
            }, null, 40, B),
            h(a.$slots, "default", {
              option: e,
              selected: n(e.value)
            }, () => [
              k(
                p(e.label),
                1
                /* TEXT */
              )
            ], !0)
          ], 46, x))),
          128
          /* KEYED_FRAGMENT */
        ))
      ],
      2
      /* CLASS */
    ));
  }
}), C = (t, r) => {
  const o = t.__vccOpts || t;
  for (const [d, l] of r)
    o[d] = l;
  return o;
}, V = /* @__PURE__ */ C(w, [["__scopeId", "data-v-feb27873"]]);
export {
  V as default
};
