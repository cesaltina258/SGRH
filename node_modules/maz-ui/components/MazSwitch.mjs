import "./assets/MazSwitch.css";
import { computed as s, defineComponent as y, useCssVars as b, getCurrentInstance as v, openBlock as n, createElementBlock as r, unref as i, normalizeClass as g, normalizeStyle as k, createElementVNode as m, mergeProps as C, renderSlot as S, createCommentVNode as V } from "vue";
const w = ({
  componentName: e,
  instance: o,
  providedId: t
}) => s(() => t ?? `${e}-${o == null ? void 0 : o.uid}`), z = ["for", "aria-checked"], $ = ["id", "name", "checked", "disabled"], _ = /* @__PURE__ */ m(
  "span",
  { class: "m-switch__toggle" },
  null,
  -1
  /* HOISTED */
), I = {
  key: 0,
  class: "m-switch__label"
}, A = /* @__PURE__ */ y({
  inheritAttrs: !1,
  __name: "MazSwitch",
  props: {
    style: {
      type: [String, Array, Object],
      default: void 0
    },
    class: {
      type: [String, Array, Object],
      default: void 0
    },
    modelValue: { type: Boolean, required: !0 },
    id: { type: String, default: void 0 },
    disabled: { type: Boolean, default: !1 },
    name: { type: String, default: void 0 },
    color: { type: String, default: "primary" }
  },
  emits: [
    /* emitted on value change */
    "update:model-value",
    /* emitted on value change */
    "change"
  ],
  setup(e, { emit: o }) {
    b((l) => ({
      "78de3f94": h.value,
      "6c2fed2c": f.value
    }));
    const t = e, c = o, u = v(), d = w({
      componentName: "MazCheckbox",
      instance: u,
      providedId: t.id
    }), h = s(() => `var(--maz-color-${t.color}-alpha)`), f = s(
      () => t.modelValue ? `var(--maz-color-${t.color})` : "var(--maz-color-white)"
    ), p = (l) => {
      const a = l.target;
      c("update:model-value", (a == null ? void 0 : a.checked) ?? !1), c("change", (a == null ? void 0 : a.checked) ?? !1);
    };
    return (l, a) => (n(), r("label", {
      for: i(d),
      class: g(["m-switch", [{ "--is-disabled": e.disabled }, t.class]]),
      role: "switch",
      style: k(e.style),
      "aria-checked": e.modelValue,
      tabindex: "0"
    }, [
      m("input", C({ id: i(d) }, l.$attrs, {
        type: "checkbox",
        name: e.name,
        checked: e.modelValue,
        disabled: e.disabled,
        class: "m-switch__input",
        onChange: p
      }), null, 16, $),
      _,
      l.$slots.default ? (n(), r("span", I, [
        S(l.$slots, "default")
      ])) : V("v-if", !0)
    ], 14, z));
  }
});
export {
  A as default
};
