import "../assets/MazCard.css";
import { defineComponent as A, defineAsyncComponent as c, useSlots as N, ref as H, watch as j, computed as m, openBlock as a, createElementBlock as n, normalizeClass as d, createBlock as f, resolveDynamicComponent as p, withModifiers as C, withCtx as v, createCommentVNode as l, renderSlot as s, unref as h, createVNode as $, createElementVNode as k, withDirectives as V, vShow as D } from "vue";
const E = {
  key: 0,
  class: "m-card__gallery__wrapper"
}, T = { class: "maz-min-w-0 maz-flex-1" }, W = {
  key: 0,
  class: "m-card__title"
}, I = {
  key: 1,
  class: "m-card__subtitle"
}, P = {
  key: 2,
  class: "m-card__content"
}, R = {
  key: 2,
  class: "m-card__actions maz-flex maz-p-2"
}, x = /* @__PURE__ */ A({
  __name: "MazCard",
  props: {
    /** Images displayed */
    images: {
      type: Array,
      default: void 0
    },
    /** Card variant: Must be `column | row | row-reverse | column-reverse` */
    orientation: {
      type: String,
      default: "column",
      validator: (e) => ["column", "row", "row-reverse", "column-reverse"].includes(e)
    },
    /** Make card a link (footer area excluded) */
    href: { type: String, default: void 0 },
    /** Target option of link: Muse be one of `_blank | _self | _parent | _top | framename` */
    hrefTarget: { type: String, default: "_self" },
    /** Footer text alignment: `right | left` */
    footerAlign: { type: String, default: "right" },
    /** Gallery image width */
    galleryWidth: { type: [String, Number], default: 200 },
    /** Gallery image height */
    galleryHeight: { type: [String, Number], default: 150 },
    /** Enable "zoom" image on click (can't be used when the card has a link) */
    zoom: { type: Boolean, default: !1 },
    /** Set elevation to card (box-shadow) */
    elevation: { type: Boolean, default: !0 },
    /** Set radius to card (box-shadow) */
    radius: { type: Boolean, default: !0 },
    /** Set border to card */
    bordered: { type: Boolean, default: !1 },
    /** Number of images shown in the gallery */
    imagesShowCount: { type: Number, default: 3 },
    /** Remove transparent layer with the remain count (ex: +2) */
    noRemaining: { type: Boolean, default: !0 },
    /** scale animation on hover (only linked cards) */
    scale: { type: Boolean, default: !0 },
    /** add classes to wrapper */
    wrapperClass: {
      type: [String, Array, Object],
      default: void 0
    },
    /** Remove padding from content wrapper */
    noPadding: { type: Boolean, default: !1 },
    /** Hide overflow */
    overflowHidden: { type: Boolean, default: !1 },
    /** Card can be open and close */
    collapsable: { type: Boolean, default: !1 },
    /** Card is open by default if `true` */
    collapseOpen: { type: Boolean, default: !1 }
  },
  setup(e) {
    const g = c(() => import("./MazBtn-1HG8e-TR.mjs")), u = c(() => import("./MazGallery-Y-ol1_h4.mjs")), y = c(() => import("./MazTransitionExpand-wUHMfp4T.mjs")), z = c(() => import("./chevron-down-bC0s_0yH.mjs")), r = e, S = N(), o = H(r.collapsable ? r.collapseOpen : !0);
    j(
      () => r.collapseOpen,
      (t) => {
        r.collapsable && (o.value = t);
      }
    );
    const b = m(() => ["column", "column-reverse"].includes(r.orientation)), w = m(() => {
      const t = /* @__PURE__ */ new Set(["default", "title", "subtitle", "content"]);
      return Object.keys(S).some((i) => t.has(i));
    }), B = m(() => w.value ? r.galleryWidth : "100%"), M = m(
      () => r.footerAlign === "right" ? "maz-text-right" : "maz-text-left"
    );
    return (t, i) => (a(), n(
      "div",
      {
        class: d(["m-card", [
          {
            "m-card--linked": e.href,
            "m-card--no-scale": !e.scale,
            "maz-elevation": e.elevation,
            "maz-overflow-hidden": e.overflowHidden || !o.value,
            "maz-rounded": e.radius,
            "maz-border maz-border-solid maz-border-color-lighter": e.bordered
          }
        ]])
      },
      [
        t.$slots.header || e.collapsable ? (a(), f(p(e.collapsable ? "button" : "div"), {
          key: 0,
          class: d(["m-card__header maz-border-b maz-border-solid", [
            o.value ? "maz-rounded-t maz-border-color-lighter" : "maz-border-transparent",
            { "--is-collapsable": e.collapsable },
            { "maz-justify-end": !t.$slots.header && e.collapsable },
            { "maz-justify-between": t.$slots.header }
          ]]),
          tabindex: "-1",
          onClick: i[1] || (i[1] = C((O) => e.collapsable ? o.value = !o.value : void 0, ["stop"]))
        }, {
          default: v(() => [
            l(" @slot Header title "),
            s(t.$slots, "header", {}, void 0, !0),
            e.collapsable ? (a(), f(h(g), {
              key: 0,
              color: "transparent",
              class: "maz-ml-2 maz-text-sm",
              size: "xs",
              onClick: i[0] || (i[0] = C((O) => o.value = !o.value, ["stop"]))
            }, {
              default: v(() => [
                $(h(z), {
                  class: d([{ "--is-open": o.value }, "m-card__collapse-icon maz-text-xl"])
                }, null, 8, ["class"])
              ]),
              _: 1
              /* STABLE */
            })) : l("v-if", !0)
          ]),
          _: 3
          /* FORWARDED */
        }, 8, ["class"])) : l("v-if", !0),
        (a(), f(p(e.href ? "a" : "div"), {
          class: d(["m-card__wrapper", [`m-card__wrapper--${e.orientation}`, { "m-card__link": e.href }]]),
          href: e.href,
          target: e.href ? e.hrefTarget : null
        }, {
          default: v(() => [
            e.images ? (a(), n("div", E, [
              $(h(u), {
                "no-radius": !e.radius,
                width: B.value,
                height: e.galleryHeight,
                "images-shown-count": e.imagesShowCount,
                images: e.images,
                "no-zoom": !e.zoom,
                "no-width": b.value,
                "no-height": !b.value && w.value,
                "no-remaining": e.noRemaining,
                class: "m-card__gallery maz-flex-1"
              }, null, 8, ["no-radius", "width", "height", "images-shown-count", "images", "no-zoom", "no-width", "no-height", "no-remaining"])
            ])) : l("v-if", !0),
            k("div", T, [
              (a(), f(p(e.collapsable ? h(y) : "div"), null, {
                default: v(() => [
                  V(k(
                    "div",
                    {
                      class: d([[e.wrapperClass, { "maz-p-4": !e.noPadding && !e.collapsable }], "m-card__content__wrapper"])
                    },
                    [
                      s(t.$slots, "default", {}, () => [
                        t.$slots.title ? (a(), n("div", W, [
                          s(t.$slots, "title", {}, void 0, !0)
                        ])) : l("v-if", !0),
                        t.$slots.subtitle ? (a(), n("div", I, [
                          s(t.$slots, "subtitle", {}, void 0, !0)
                        ])) : l("v-if", !0),
                        t.$slots.content ? (a(), n("div", P, [
                          s(t.$slots, "content", {}, void 0, !0)
                        ])) : l("v-if", !0)
                      ], !0)
                    ],
                    2
                    /* CLASS */
                  ), [
                    [D, o.value]
                  ])
                ]),
                _: 3
                /* FORWARDED */
              }))
            ])
          ]),
          _: 3
          /* FORWARDED */
        }, 8, ["class", "href", "target"])),
        t.$slots.footer ? (a(), n(
          "div",
          {
            key: 1,
            class: d(["m-card__footer maz-overflow-x-auto maz-p-3", [
              {
                "maz-border-t-2 maz-border-color-lighter": b.value && w.value
              },
              M.value
            ]])
          },
          [
            s(t.$slots, "footer", {}, void 0, !0)
          ],
          2
          /* CLASS */
        )) : l("v-if", !0),
        t.$slots.actions ? (a(), n("div", R, [
          l(" @slot action of gallery "),
          s(t.$slots, "actions", {}, void 0, !0)
        ])) : l("v-if", !0)
      ],
      2
      /* CLASS */
    ));
  }
}), G = (e, g) => {
  const u = e.__vccOpts || e;
  for (const [y, z] of g)
    u[y] = z;
  return u;
}, J = /* @__PURE__ */ G(x, [["__scopeId", "data-v-f731d27c"]]);
export {
  J as M,
  G as _
};
