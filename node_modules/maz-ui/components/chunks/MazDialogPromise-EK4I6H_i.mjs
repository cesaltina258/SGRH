import "../assets/MazDialogPromise.css";
import { ref as F, defineComponent as j, onMounted as O, watch as P, openBlock as m, createBlock as $, Teleport as N, createVNode as B, Transition as H, withCtx as p, createElementBlock as A, normalizeClass as D, createElementVNode as k, withModifiers as W, mergeProps as E, renderSlot as u, createCommentVNode as c, defineAsyncComponent as h, useAttrs as K, computed as z, createTextVNode as y, toDisplayString as g, unref as d, Fragment as w, renderList as q } from "vue";
const I = F(), b = F([]), U = (e, o) => new Promise((i, a) => {
  b.value = [
    ...b.value,
    {
      id: e,
      isActive: !0,
      resolve: async () => {
        await (o == null ? void 0 : o()), i(!0);
      },
      reject: a
    }
  ];
}), T = (e) => (b.value = b.value.filter(({ id: o }) => o !== e), b.value), M = (e, o, i = !1) => {
  var a;
  o && ((a = o[e]) == null || a.call(o, i), o.isActive = !1, setTimeout(() => {
    T(o.id);
  }, 500));
}, X = () => ({
  confirmDialogData: I,
  dialogState: b,
  showDialogAndWaitChoice: U,
  removeDialogFromState: T,
  rejectDialog: (e, o = !1) => M("reject", e, o),
  resolveDialog: (e, o = !1) => M("resolve", e, o)
}), L = "--backdrop-present", G = () => {
  document.documentElement.classList.add(L);
}, J = async () => {
  document.querySelector(".m-backdrop.--present") || document.documentElement.classList.remove(L);
}, Q = j({
  inheritAttrs: !1,
  props: {
    modelValue: { type: Boolean, default: !1 },
    teleportSelector: { type: String, default: "body" },
    beforeClose: {
      // eslint-disable-next-line @typescript-eslint/ban-types
      type: Function,
      default: void 0
    },
    persistent: { type: Boolean, default: !1 },
    noCloseOnEscKey: { type: Boolean, default: !1 },
    transitionName: { type: String, default: "backdrop-anim" },
    backdropClass: { type: [Array, String, Object], default: void 0 },
    backdropContentClass: {
      type: [Array, String, Object],
      default: void 0
    }
  },
  emits: ["open", "before-close", "close", "update:model-value"],
  setup(e, { emit: o }) {
    const i = F(e.modelValue), a = () => {
      r(!1);
    }, r = async (v) => {
      var S;
      v || (o("before-close"), await ((S = e.beforeClose) == null ? void 0 : S.call(e))), i.value = v;
    }, f = () => {
      o("open");
    }, n = () => {
      o("update:model-value", !1), o("close"), t();
    }, s = () => {
      e.persistent || a();
    }, l = (v) => {
      !e.noCloseOnEscKey && v.key === "Escape" && !e.persistent && a();
    }, C = () => {
      G(), document.addEventListener("keyup", l, !1);
    }, t = () => {
      document.removeEventListener("keyup", l), J();
    };
    return O(() => {
      e.modelValue ? C() : t();
    }), P(
      () => e.modelValue,
      (v) => {
        i.value = v, v ? C() : t();
      }
    ), {
      onBackdropAnimationEnter: f,
      onBackdropAnimationLeave: n,
      onBackdropClicked: s,
      close: a,
      present: i,
      toggleModal: r,
      onKeyPress: l
    };
  }
}), V = (e, o) => {
  const i = e.__vccOpts || e;
  for (const [a, r] of o)
    i[a] = r;
  return i;
};
function R(e, o, i, a, r, f) {
  return m(), $(N, { to: e.teleportSelector }, [
    B(H, {
      appear: "",
      name: e.transitionName,
      onAfterEnter: e.onBackdropAnimationEnter,
      onAfterLeave: e.onBackdropAnimationLeave
    }, {
      default: p(() => [
        e.present ? (m(), A(
          "div",
          {
            key: 0,
            class: D(["m-backdrop --present", [e.backdropClass]]),
            tabindex: "-1",
            role: "dialog"
          },
          [
            k(
              "button",
              {
                class: D(["m-backdrop-overlay", { "--disabled": e.persistent }]),
                tabindex: "-1",
                onClick: o[0] || (o[0] = W((...n) => e.onBackdropClicked && e.onBackdropClicked(...n), ["self"]))
              },
              null,
              2
              /* CLASS */
            ),
            k(
              "div",
              E({
                class: ["m-backdrop-content", e.backdropContentClass]
              }, e.$attrs, {
                role: "document",
                tabindex: "0"
              }),
              [
                u(e.$slots, "default", { close: e.close })
              ],
              16
              /* FULL_PROPS */
            )
          ],
          2
          /* CLASS */
        )) : c("v-if", !0)
      ]),
      _: 3
      /* FORWARDED */
    }, 8, ["name", "onAfterEnter", "onAfterLeave"])
  ], 8, ["to"]);
}
const Y = /* @__PURE__ */ V(Q, [["render", R]]), Z = {
  key: 0,
  id: "dialogTitle",
  class: "maz-my-0 maz-text-xl maz-font-semibold"
}, x = {
  id: "dialogDesc",
  class: "m-dialog-content"
}, _ = {
  key: 0,
  class: "m-dialog-footer"
}, ee = /* @__PURE__ */ j({
  __name: "MazDialog",
  props: {
    /** Modal's title in  header */
    title: { type: String, default: void 0 },
    /** Remove the close button in header */
    noClose: { type: Boolean, default: !1 },
    /** Modal's width */
    width: { type: String, default: "500px" },
    /** Modal's max-width */
    maxWidth: { type: String, default: "95vw" },
    /** Modal's max-height */
    maxHeight: { type: String, default: "95vh" },
    /**  Modal's content becomes scrollable - warning: a overflow is applied */
    scrollable: { type: Boolean, default: !1 }
  },
  emits: [
    /** Model binding */
    "update:model-value",
    /** Emitted when dialog is closed (after animation) */
    "close",
    /** Emitted when dialog is opened (after animation) */
    "open"
  ],
  setup(e) {
    const o = h(() => import("./MazBtn-N8P-Q8VF.mjs")), i = h(() => import("./x-mark-pPwcH6Hz.mjs")), a = K(), r = z(() => ({
      ...a,
      class: void 0,
      style: void 0
    })), f = z(() => ({
      class: a.class,
      style: a.style
    }));
    return (n, s) => (m(), $(
      Y,
      E(r.value, {
        "transition-name": "modal-anim",
        "aria-labelledby": "dialogTitle",
        "aria-describedby": "dialogDesc",
        onClose: s[0] || (s[0] = (l) => n.$emit("close", l)),
        onOpen: s[1] || (s[1] = (l) => n.$emit("open", l)),
        "onUpdate:modelValue": s[2] || (s[2] = (l) => n.$emit("update:model-value", l))
      }),
      {
        default: p(({ close: l }) => [
          k(
            "div",
            E({
              class: ["m-dialog", { "--scrollable": e.scrollable }],
              role: "dialog",
              "aria-modal": "true",
              style: [{ width: e.width, maxWidth: e.maxWidth, maxHeight: e.maxHeight }]
            }, f.value),
            [
              c(`
          @slot Header slot
            @binding {Function} close close function
        `),
              u(n.$slots, "header", { close: l }, () => [
                k(
                  "div",
                  {
                    class: D(["m-dialog-header", { "--has-title": n.$slots.title || e.title }])
                  },
                  [
                    n.$slots.title || e.title ? (m(), A("h2", Z, [
                      c(`
                @slot Title slot in the header
              `),
                      u(n.$slots, "title", {}, () => [
                        y(
                          g(e.title),
                          1
                          /* TEXT */
                        )
                      ], !0)
                    ])) : c("v-if", !0),
                    e.noClose ? c("v-if", !0) : (m(), $(d(o), {
                      key: 1,
                      class: "m-dialog-closebtn",
                      color: "transparent",
                      onClick: l
                    }, {
                      default: p(() => [
                        B(d(i), { class: "maz-text-lg" })
                      ]),
                      _: 2
                      /* DYNAMIC */
                    }, 1032, ["onClick"]))
                  ],
                  2
                  /* CLASS */
                )
              ], !0),
              k("div", x, [
                c(`
            @slot Default content
              @binding {Function} close close function
          `),
                u(n.$slots, "default", { close: l }, void 0, !0)
              ]),
              n.$slots.footer ? (m(), A("div", _, [
                c(`
            @slot Footer slot
              @binding {Function} close close function
          `),
                u(n.$slots, "footer", { close: l }, void 0, !0)
              ])) : c("v-if", !0)
            ],
            16
            /* FULL_PROPS */
          )
        ]),
        _: 3
        /* FORWARDED */
      },
      16
      /* FULL_PROPS */
    ));
  }
}), te = /* @__PURE__ */ V(ee, [["__scopeId", "data-v-a9f3580e"]]), oe = { class: "maz-space-x-2" }, ae = /* @__PURE__ */ j({
  __name: "MazDialogPromise",
  props: {
    /** Dialog Data - type DialogData */
    data: { type: Object, default: void 0 },
    /** Uniq identifier */
    identifier: { type: String, required: !0 },
    /** Custom buttons - type DialogButton[] */
    buttons: { type: Array, default: () => [] }
  },
  setup(e) {
    const o = h(() => import("./MazBtn-N8P-Q8VF.mjs")), i = e, { dialogState: a, rejectDialog: r, resolveDialog: f } = X(), n = z(
      () => a.value.find(({ id: s }) => s === i.identifier)
    );
    return (s, l) => {
      var C;
      return m(), $(te, {
        "model-value": ((C = n.value) == null ? void 0 : C.isActive) ?? !1,
        "onUpdate:modelValue": l[2] || (l[2] = (t) => d(r)(n.value))
      }, {
        title: p(() => [
          u(s.$slots, "title", {}, () => {
            var t;
            return [
              y(
                g((t = e.data) == null ? void 0 : t.title),
                1
                /* TEXT */
              )
            ];
          })
        ]),
        default: p(() => [
          c(`
        @slot Default slot - Place your content
          @binding {Function} resolve resolve function
          @binding {Function} reject reject function
      `),
          u(s.$slots, "default", {
            resolve: (t) => d(f)(n.value, t),
            reject: (t) => d(r)(n.value, t)
          }, () => {
            var t;
            return [
              y(
                g((t = e.data) == null ? void 0 : t.message),
                1
                /* TEXT */
              )
            ];
          })
        ]),
        footer: p(() => [
          c(`
        @slot Footer Buttons slot
          @binding {Function} resolve resolve function
          @binding {Function} reject reject function
      `),
          u(s.$slots, "footer-button", {
            resolve: (t) => d(f)(n.value, t),
            reject: (t) => d(r)(n.value, t)
          }, () => [
            k("div", oe, [
              e.buttons.length > 0 ? (m(!0), A(
                w,
                { key: 0 },
                q(e.buttons, (t, v) => (m(), $(d(o), {
                  key: v,
                  color: t.color,
                  size: t.size,
                  outline: t.outline,
                  rounded: t.rounded,
                  disabled: t.disabled,
                  block: t.block,
                  loading: t.loading,
                  onClick: (S) => t.type === "resolve" ? d(f)(n.value, t.response) : d(r)(n.value, t.response)
                }, {
                  default: p(() => [
                    y(
                      g(t.text),
                      1
                      /* TEXT */
                    )
                  ]),
                  _: 2
                  /* DYNAMIC */
                }, 1032, ["color", "size", "outline", "rounded", "disabled", "block", "loading", "onClick"]))),
                128
                /* KEYED_FRAGMENT */
              )) : (m(), A(
                w,
                { key: 1 },
                [
                  B(d(o), {
                    color: "danger",
                    outline: "",
                    onClick: l[0] || (l[0] = (t) => d(r)(n.value))
                  }, {
                    default: p(() => [
                      u(s.$slots, "cancel-text", {}, () => {
                        var t;
                        return [
                          y(
                            g(((t = e.data) == null ? void 0 : t.cancelText) || "Cancel"),
                            1
                            /* TEXT */
                          )
                        ];
                      })
                    ]),
                    _: 3
                    /* FORWARDED */
                  }),
                  B(d(o), {
                    color: "success",
                    onClick: l[1] || (l[1] = (t) => d(f)(n.value))
                  }, {
                    default: p(() => [
                      u(s.$slots, "confirm-text", {}, () => {
                        var t;
                        return [
                          y(
                            g(((t = e.data) == null ? void 0 : t.confirmText) || "Confirm"),
                            1
                            /* TEXT */
                          )
                        ];
                      })
                    ]),
                    _: 3
                    /* FORWARDED */
                  })
                ],
                64
                /* STABLE_FRAGMENT */
              ))
            ])
          ])
        ]),
        _: 3
        /* FORWARDED */
      }, 8, ["model-value"]);
    };
  }
});
export {
  V as _,
  ae as a,
  X as u
};
