import "../assets/MazInput.css";
import { computed as n, defineComponent as J, defineAsyncComponent as c, ref as p, getCurrentInstance as K, onMounted as Q, useSlots as W, openBlock as o, createElementBlock as m, normalizeClass as h, normalizeStyle as X, createElementVNode as z, renderSlot as B, createVNode as b, unref as r, createCommentVNode as i, withDirectives as Y, mergeProps as Z, toHandlers as _, vModelDynamic as ee, createTextVNode as te, toDisplayString as ae, createBlock as w, withModifiers as le, withCtx as V } from "vue";
import { d as ne } from "./debounce-fEgGlH7P.mjs";
import { _ as oe } from "./MazPicker-DBOTnZbk.mjs";
const re = ({
  componentName: e,
  instance: d,
  providedId: f
}) => n(() => f ?? `${e}-${d == null ? void 0 : d.uid}`), ie = {
  key: 0,
  class: "m-input-wrapper-left"
}, de = { class: "m-input-wrapper-input" }, ue = ["id", "type", "name", "placeholder", "aria-label", "disabled", "readonly", "required"], se = { key: 0 }, ce = {
  key: 1,
  class: "m-input-wrapper-right"
}, me = /* @__PURE__ */ J({
  inheritAttrs: !1,
  __name: "MazInput",
  props: {
    style: {
      type: [String, Array, Object],
      default: void 0
    },
    class: {
      type: [String, Array, Object],
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean],
      default: void 0
    },
    placeholder: { type: String, default: void 0 },
    color: {
      type: String,
      default: "primary"
    },
    label: { type: String, default: void 0 },
    name: { type: String, default: "input" },
    type: {
      type: String,
      default: "text",
      validator: (e) => [
        "text",
        "date",
        "number",
        "tel",
        "search",
        "url",
        "password",
        "month",
        "time",
        "week",
        "email"
      ].includes(e)
    },
    required: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    id: { type: String, default: void 0 },
    error: { type: Boolean, default: !1 },
    success: { type: Boolean, default: !1 },
    warning: { type: Boolean, default: !1 },
    hint: { type: String, default: void 0 },
    inputClasses: { type: String, default: void 0 },
    noBorder: { type: Boolean, default: !1 },
    noRadius: { type: Boolean, default: !1 },
    size: {
      type: String,
      default: "md",
      validator: (e) => ["mini", "xs", "sm", "md", "lg", "xl"].includes(e)
    },
    debounce: { type: Boolean, default: !1 },
    debounceDelay: { type: Number, default: 500 },
    validButton: { type: Boolean, default: !1 },
    validButtonLoading: { type: Boolean, default: !1 },
    autoFocus: { type: Boolean, default: !1 },
    borderActive: { type: Boolean, default: !1 },
    leftIcon: { type: String, default: void 0 },
    rightIcon: { type: String, default: void 0 }
  },
  emits: ["focus", "blur", "update:model-value", "click", "change", "update"],
  setup(e, { emit: d }) {
    const f = c(() => import("./MazBtn-v6ANLVfx.mjs")), k = c(() => import("./MazIcon-RrJDzX3V.mjs")), $ = c(() => import("./eye-slash-UoWe3WK1.mjs")), C = c(() => import("./eye-3jm1b22X.mjs")), M = c(() => import("./check-JxWJRZYz.mjs")), t = e, u = d, y = p(!1), s = p(!1), x = p(), q = K(), A = re({
      componentName: "MazInput",
      instance: q,
      providedId: t.id
    });
    Q(() => {
      var a;
      t.autoFocus && ((a = x.value) == null || a.focus());
    });
    const I = n(() => t.type === "password"), N = n(() => y.value ? "text" : t.type), P = n(() => {
      if (!t.noBorder) {
        if (t.error)
          return "maz-border-danger";
        if (t.success)
          return "maz-border-success";
        if (t.warning)
          return "maz-border-warning";
        if (s.value || t.borderActive) {
          if (t.color === "black")
            return "maz-border-black";
          if (t.color === "danger")
            return "maz-border-danger";
          if (t.color === "info")
            return "maz-border-info";
          if (t.color === "primary")
            return "maz-border-primary";
          if (t.color === "secondary")
            return "maz-border-secondary";
          if (t.color === "success")
            return "maz-border-success";
          if (t.color === "warning")
            return "maz-border-warning";
          if (t.color === "white")
            return "maz-border-white";
        }
        return "--default-border";
      }
    }), g = W(), D = n(() => {
      const { required: a, placeholder: l } = t;
      if (l)
        return a ? `${l} *` : l;
    }), E = n(() => t.modelValue !== void 0 && t.modelValue !== ""), S = n({
      get: () => t.modelValue,
      set: (a) => G(a)
    }), L = n(() => (!!t.label || !!t.hint) && (s.value || !!E.value || !!t.placeholder || ["date", "month", "week"].includes(t.type))), F = n(() => !!t.label || !!t.hint), O = () => !!g["right-icon"] || I.value || !!g["valid-button"] || t.validButton || !!t.rightIcon, R = () => !!g["left-icon"] || !!t.leftIcon, T = (a) => {
      u("focus", a), s.value = !0;
    }, U = (a) => {
      u("blur", a), s.value = !1;
    }, j = (a) => u("change", a), H = ne((a) => {
      u("update:model-value", a);
    }, t.debounceDelay), G = (a) => {
      if (t.debounce)
        return H(a);
      u("update:model-value", a);
    };
    return (a, l) => (o(), m(
      "div",
      {
        class: h(["m-input", [
          {
            "--is-focused": s.value || e.borderActive,
            "--should-up": L.value,
            "--has-label": F.value,
            "--is-disabled": e.disabled,
            "--is-readonly": e.readonly,
            "--has-z-2": e.error || e.warning || e.success,
            "--has-state": e.error || e.warning || e.success
          },
          t.class,
          `--${e.color}`,
          `--${e.size}`
        ]]),
        style: X(e.style)
      },
      [
        z(
          "div",
          {
            class: h(["m-input-wrapper", [e.inputClasses, P.value, { "maz-rounded": !e.noRadius }]])
          },
          [
            R() ? (o(), m("div", ie, [
              a.$slots["left-icon"] || e.leftIcon ? B(a.$slots, "left-icon", { key: 0 }, () => [
                b(r(k), {
                  name: e.leftIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])
              ], !0) : i("v-if", !0)
            ])) : i("v-if", !0),
            z("div", de, [
              Y(z("input", Z({
                id: r(A),
                ref_key: "input",
                ref: x,
                "onUpdate:modelValue": l[0] || (l[0] = (v) => S.value = v),
                type: N.value,
                name: e.name
              }, a.$attrs, {
                placeholder: D.value,
                "aria-label": e.label || e.placeholder,
                disabled: e.disabled,
                readonly: e.readonly,
                required: e.required,
                class: "m-input-input"
              }, _({
                blur: U,
                focus: T,
                change: j
              }, !0), {
                onClick: l[1] || (l[1] = (v) => a.$emit("click", v))
              }), null, 16, ue), [
                [ee, S.value]
              ]),
              e.label || e.hint ? (o(), m(
                "span",
                {
                  key: 0,
                  ref: "label",
                  class: h(["m-input-label", [
                    {
                      "maz-text-danger-600": e.error,
                      "maz-text-success-600": e.success,
                      "maz-text-warning-600": e.warning
                    }
                  ]])
                },
                [
                  te(
                    ae(e.hint || e.label) + " ",
                    1
                    /* TEXT */
                  ),
                  e.required ? (o(), m("sup", se, "*")) : i("v-if", !0)
                ],
                2
                /* CLASS */
              )) : i("v-if", !0)
            ]),
            O() ? (o(), m("div", ce, [
              a.$slots["right-icon"] || e.rightIcon ? B(a.$slots, "right-icon", { key: 0 }, () => [
                b(r(k), {
                  name: e.rightIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])
              ], !0) : i("v-if", !0),
              I.value ? (o(), w(r(f), {
                key: 1,
                color: "transparent",
                tabindex: "-1",
                size: "mini",
                onClick: l[2] || (l[2] = le((v) => y.value = !y.value, ["stop"]))
              }, {
                default: V(() => [
                  y.value ? (o(), w(r($), {
                    key: 0,
                    class: "maz-text-xl maz-text-muted"
                  })) : (o(), w(r(C), {
                    key: 1,
                    class: "maz-text-xl maz-text-muted"
                  }))
                ]),
                _: 1
                /* STABLE */
              })) : i("v-if", !0),
              a.$slots["valid-button"] || e.validButton ? B(a.$slots, "valid-button", { key: 2 }, () => [
                b(r(f), {
                  color: "transparent",
                  disabled: e.disabled,
                  tabindex: "-1",
                  loading: e.validButtonLoading,
                  class: "m-input-valid-button",
                  size: "mini",
                  type: "submit"
                }, {
                  default: V(() => [
                    b(r(M), { class: "maz-text-2xl maz-text-normal" })
                  ]),
                  _: 1
                  /* STABLE */
                }, 8, ["disabled", "loading"])
              ], !0) : i("v-if", !0)
            ])) : i("v-if", !0)
          ],
          2
          /* CLASS */
        )
      ],
      6
      /* CLASS, STYLE */
    ));
  }
}), ge = /* @__PURE__ */ oe(me, [["__scopeId", "data-v-acaa27d2"]]);
export {
  ge as default
};
