import "../assets/MazDrawer.css";
import { defineComponent as E, ref as w, onMounted as z, watch as L, openBlock as d, createBlock as g, Teleport as V, createVNode as f, Transition as h, withCtx as p, createElementBlock as A, normalizeClass as i, createElementVNode as l, withModifiers as D, mergeProps as O, renderSlot as k, createCommentVNode as B, defineAsyncComponent as b, normalizeStyle as M, createTextVNode as N, toDisplayString as T, unref as C } from "vue";
const S = "--backdrop-present", P = () => {
  document.documentElement.classList.add(S);
}, K = async () => {
  document.querySelector(".m-backdrop.--present") || document.documentElement.classList.remove(S);
}, j = E({
  inheritAttrs: !1,
  props: {
    modelValue: { type: Boolean, default: !1 },
    teleportSelector: { type: String, default: "body" },
    beforeClose: {
      // eslint-disable-next-line @typescript-eslint/ban-types
      type: Function,
      default: void 0
    },
    persistent: { type: Boolean, default: !1 },
    noCloseOnEscKey: { type: Boolean, default: !1 },
    transitionName: { type: String, default: "backdrop-anim" },
    backdropClass: { type: [Array, String, Object], default: void 0 },
    backdropContentClass: {
      type: [Array, String, Object],
      default: void 0
    }
  },
  emits: ["open", "before-close", "close", "update:model-value"],
  setup(e, { emit: a }) {
    const s = w(e.modelValue), t = () => {
      o(!1);
    }, o = async (r) => {
      var y;
      r || (a("before-close"), await ((y = e.beforeClose) == null ? void 0 : y.call(e))), s.value = r;
    }, n = () => {
      a("open");
    }, c = () => {
      a("update:model-value", !1), a("close"), u();
    }, $ = () => {
      e.persistent || t();
    }, m = (r) => {
      !e.noCloseOnEscKey && r.key === "Escape" && !e.persistent && t();
    }, v = () => {
      P(), document.addEventListener("keyup", m, !1);
    }, u = () => {
      document.removeEventListener("keyup", m), K();
    };
    return z(() => {
      e.modelValue ? v() : u();
    }), L(
      () => e.modelValue,
      (r) => {
        s.value = r, r ? v() : u();
      }
    ), {
      onBackdropAnimationEnter: n,
      onBackdropAnimationLeave: c,
      onBackdropClicked: $,
      close: t,
      present: s,
      toggleModal: o,
      onKeyPress: m
    };
  }
}), F = (e, a) => {
  const s = e.__vccOpts || e;
  for (const [t, o] of a)
    s[t] = o;
  return s;
};
function q(e, a, s, t, o, n) {
  return d(), g(V, { to: e.teleportSelector }, [
    f(h, {
      appear: "",
      name: e.transitionName,
      onAfterEnter: e.onBackdropAnimationEnter,
      onAfterLeave: e.onBackdropAnimationLeave
    }, {
      default: p(() => [
        e.present ? (d(), A(
          "div",
          {
            key: 0,
            class: i(["m-backdrop --present", [e.backdropClass]]),
            tabindex: "-1",
            role: "dialog"
          },
          [
            l(
              "button",
              {
                class: i(["m-backdrop-overlay", { "--disabled": e.persistent }]),
                tabindex: "-1",
                onClick: a[0] || (a[0] = D((...c) => e.onBackdropClicked && e.onBackdropClicked(...c), ["self"]))
              },
              null,
              2
              /* CLASS */
            ),
            l(
              "div",
              O({
                class: ["m-backdrop-content", e.backdropContentClass]
              }, e.$attrs, {
                role: "document",
                tabindex: "0"
              }),
              [
                k(e.$slots, "default", { close: e.close })
              ],
              16
              /* FULL_PROPS */
            )
          ],
          2
          /* CLASS */
        )) : B("v-if", !0)
      ]),
      _: 3
      /* FORWARDED */
    }, 8, ["name", "onAfterEnter", "onAfterLeave"])
  ], 8, ["to"]);
}
const I = /* @__PURE__ */ F(j, [["render", q]]), U = { class: "m-drawer-header__title" }, X = {
  key: 0,
  class: "m-drawer-header__close"
}, G = { class: "m-drawer-body" }, Q = /* @__PURE__ */ E({
  __name: "MazDrawer",
  props: {
    noClose: { type: Boolean, default: !1 },
    title: { type: String, default: void 0 },
    variant: {
      type: String,
      default: "right",
      validator: (e) => ["right", "top", "left", "bottom"].includes(e)
    },
    // eslint-disable-next-line vue/require-prop-types
    backdropClass: { default: void 0 },
    size: { type: String, default: "30rem" }
  },
  emits: ["open", "close", "update:model-value"],
  setup(e) {
    const a = b(() => import("./MazBtn-q_j1isrL.mjs")), s = b(() => import("./x-mark-pPwcH6Hz.mjs"));
    return (t, o) => (d(), g(I, {
      "backdrop-class": ["m-drawer", `--${e.variant}`, e.backdropClass],
      style: M({
        "--maz-drawer-size": e.size
      }),
      onClose: o[0] || (o[0] = (n) => t.$emit("close", n)),
      onOpen: o[1] || (o[1] = (n) => t.$emit("open", n)),
      "onUpdate:modelValue": o[2] || (o[2] = (n) => t.$emit("update:model-value", n))
    }, {
      default: p(({ close: n }) => [
        l(
          "div",
          {
            class: i(["m-drawer-content-wrap", [`--${e.variant}`]])
          },
          [
            l(
              "header",
              {
                class: i(["m-drawer-header", [t.$slots.title || e.title ? "--between" : "--end"]])
              },
              [
                l("h4", U, [
                  k(t.$slots, "title", { close: n }, () => [
                    N(
                      T(e.title),
                      1
                      /* TEXT */
                    )
                  ])
                ]),
                e.noClose ? B("v-if", !0) : (d(), A("div", X, [
                  f(C(a), {
                    size: "sm",
                    color: "transparent",
                    onClick: n
                  }, {
                    default: p(() => [
                      f(C(s), { class: "icon maz-text-lg" })
                    ]),
                    _: 2
                    /* DYNAMIC */
                  }, 1032, ["onClick"])
                ]))
              ],
              2
              /* CLASS */
            ),
            l("div", G, [
              k(t.$slots, "default", { close: n })
            ])
          ],
          2
          /* CLASS */
        )
      ]),
      _: 3
      /* FORWARDED */
    }, 8, ["backdrop-class", "style"]));
  }
});
export {
  F as _,
  Q as a
};
