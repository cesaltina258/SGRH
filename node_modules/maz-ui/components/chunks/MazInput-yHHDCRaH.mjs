import "../assets/MazInput.css";
import { computed as r, defineComponent as J, defineAsyncComponent as m, ref as z, getCurrentInstance as K, onMounted as Q, useSlots as W, openBlock as i, createElementBlock as y, normalizeClass as B, normalizeStyle as X, createElementVNode as k, renderSlot as w, createVNode as g, unref as u, createCommentVNode as d, withDirectives as Y, mergeProps as Z, toHandlers as _, vModelDynamic as ee, createTextVNode as te, toDisplayString as ae, createBlock as x, withModifiers as le, withCtx as $ } from "vue";
function ne(e, o) {
  let l;
  return function(...s) {
    clearTimeout(l), l = setTimeout(() => {
      e.apply(this, s);
    }, o);
  };
}
const oe = ({
  componentName: e,
  instance: o,
  providedId: l
}) => r(() => l ?? `${e}-${o == null ? void 0 : o.uid}`), re = {
  key: 0,
  class: "m-input-wrapper-left"
}, ie = { class: "m-input-wrapper-input" }, ue = ["id", "type", "name", "placeholder", "aria-label", "disabled", "readonly", "required"], de = { key: 0 }, se = {
  key: 1,
  class: "m-input-wrapper-right"
}, ce = /* @__PURE__ */ J({
  inheritAttrs: !1,
  __name: "MazInput",
  props: {
    style: {
      type: [String, Array, Object],
      default: void 0
    },
    class: {
      type: [String, Array, Object],
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean],
      default: void 0
    },
    placeholder: { type: String, default: void 0 },
    color: {
      type: String,
      default: "primary"
    },
    label: { type: String, default: void 0 },
    name: { type: String, default: "input" },
    type: {
      type: String,
      default: "text",
      validator: (e) => [
        "text",
        "date",
        "number",
        "tel",
        "search",
        "url",
        "password",
        "month",
        "time",
        "week",
        "email"
      ].includes(e)
    },
    required: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    id: { type: String, default: void 0 },
    error: { type: Boolean, default: !1 },
    success: { type: Boolean, default: !1 },
    warning: { type: Boolean, default: !1 },
    hint: { type: String, default: void 0 },
    inputClasses: { type: String, default: void 0 },
    noBorder: { type: Boolean, default: !1 },
    noRadius: { type: Boolean, default: !1 },
    size: {
      type: String,
      default: "md",
      validator: (e) => ["mini", "xs", "sm", "md", "lg", "xl"].includes(e)
    },
    debounce: { type: Boolean, default: !1 },
    debounceDelay: { type: Number, default: 500 },
    validButton: { type: Boolean, default: !1 },
    validButtonLoading: { type: Boolean, default: !1 },
    autoFocus: { type: Boolean, default: !1 },
    borderActive: { type: Boolean, default: !1 },
    leftIcon: { type: String, default: void 0 },
    rightIcon: { type: String, default: void 0 }
  },
  emits: ["focus", "blur", "update:model-value", "click", "change", "update"],
  setup(e, { emit: o }) {
    const l = m(() => import("./MazBtn-l5heH9BB.mjs")), s = m(() => import("./MazIcon-RrJDzX3V.mjs")), p = m(() => import("./eye-slash-UoWe3WK1.mjs")), C = m(() => import("./eye-3jm1b22X.mjs")), M = m(() => import("./check-JxWJRZYz.mjs")), t = e, c = o, v = z(!1), f = z(!1), I = z(), q = K(), A = oe({
      componentName: "MazInput",
      instance: q,
      providedId: t.id
    });
    Q(() => {
      var a;
      t.autoFocus && ((a = I.value) == null || a.focus());
    });
    const S = r(() => t.type === "password"), N = r(() => v.value ? "text" : t.type), P = r(() => {
      if (!t.noBorder) {
        if (t.error)
          return "maz-border-danger";
        if (t.success)
          return "maz-border-success";
        if (t.warning)
          return "maz-border-warning";
        if (f.value || t.borderActive) {
          if (t.color === "black")
            return "maz-border-black";
          if (t.color === "danger")
            return "maz-border-danger";
          if (t.color === "info")
            return "maz-border-info";
          if (t.color === "primary")
            return "maz-border-primary";
          if (t.color === "secondary")
            return "maz-border-secondary";
          if (t.color === "success")
            return "maz-border-success";
          if (t.color === "warning")
            return "maz-border-warning";
          if (t.color === "white")
            return "maz-border-white";
        }
        return "--default-border";
      }
    }), h = W(), D = r(() => {
      const { required: a, placeholder: n } = t;
      if (n)
        return a ? `${n} *` : n;
    }), E = r(() => t.modelValue !== void 0 && t.modelValue !== ""), V = r({
      get: () => t.modelValue,
      set: (a) => G(a)
    }), T = r(() => (!!t.label || !!t.hint) && (f.value || !!E.value || !!t.placeholder || ["date", "month", "week"].includes(t.type))), L = r(() => !!t.label || !!t.hint), O = () => !!h["right-icon"] || S.value || !!h["valid-button"] || t.validButton || !!t.rightIcon, F = () => !!h["left-icon"] || !!t.leftIcon, R = (a) => {
      c("focus", a), f.value = !0;
    }, U = (a) => {
      c("blur", a), f.value = !1;
    }, j = (a) => c("change", a), H = ne((a) => {
      c("update:model-value", a);
    }, t.debounceDelay), G = (a) => {
      if (t.debounce)
        return H(a);
      c("update:model-value", a);
    };
    return (a, n) => (i(), y(
      "div",
      {
        class: B(["m-input", [
          {
            "--is-focused": f.value || e.borderActive,
            "--should-up": T.value,
            "--has-label": L.value,
            "--is-disabled": e.disabled,
            "--is-readonly": e.readonly,
            "--has-z-2": e.error || e.warning || e.success,
            "--has-state": e.error || e.warning || e.success
          },
          t.class,
          `--${e.color}`,
          `--${e.size}`
        ]]),
        style: X(e.style)
      },
      [
        k(
          "div",
          {
            class: B(["m-input-wrapper", [e.inputClasses, P.value, { "maz-rounded": !e.noRadius }]])
          },
          [
            F() ? (i(), y("div", re, [
              a.$slots["left-icon"] || e.leftIcon ? w(a.$slots, "left-icon", { key: 0 }, () => [
                g(u(s), {
                  name: e.leftIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])
              ], !0) : d("v-if", !0)
            ])) : d("v-if", !0),
            k("div", ie, [
              Y(k("input", Z({
                id: u(A),
                ref_key: "input",
                ref: I,
                "onUpdate:modelValue": n[0] || (n[0] = (b) => V.value = b),
                type: N.value,
                name: e.name
              }, a.$attrs, {
                placeholder: D.value,
                "aria-label": e.label || e.placeholder,
                disabled: e.disabled,
                readonly: e.readonly,
                required: e.required,
                class: "m-input-input"
              }, _({
                blur: U,
                focus: R,
                change: j
              }, !0), {
                onClick: n[1] || (n[1] = (b) => a.$emit("click", b))
              }), null, 16, ue), [
                [ee, V.value]
              ]),
              e.label || e.hint ? (i(), y(
                "span",
                {
                  key: 0,
                  ref: "label",
                  class: B(["m-input-label", [
                    {
                      "maz-text-danger-600": e.error,
                      "maz-text-success-600": e.success,
                      "maz-text-warning-600": e.warning
                    }
                  ]])
                },
                [
                  te(
                    ae(e.hint || e.label) + " ",
                    1
                    /* TEXT */
                  ),
                  e.required ? (i(), y("sup", de, "*")) : d("v-if", !0)
                ],
                2
                /* CLASS */
              )) : d("v-if", !0)
            ]),
            O() ? (i(), y("div", se, [
              a.$slots["right-icon"] || e.rightIcon ? w(a.$slots, "right-icon", { key: 0 }, () => [
                g(u(s), {
                  name: e.rightIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])
              ], !0) : d("v-if", !0),
              S.value ? (i(), x(u(l), {
                key: 1,
                color: "transparent",
                tabindex: "-1",
                size: "mini",
                onClick: n[2] || (n[2] = le((b) => v.value = !v.value, ["stop"]))
              }, {
                default: $(() => [
                  v.value ? (i(), x(u(p), {
                    key: 0,
                    class: "maz-text-xl maz-text-muted"
                  })) : (i(), x(u(C), {
                    key: 1,
                    class: "maz-text-xl maz-text-muted"
                  }))
                ]),
                _: 1
                /* STABLE */
              })) : d("v-if", !0),
              a.$slots["valid-button"] || e.validButton ? w(a.$slots, "valid-button", { key: 2 }, () => [
                g(u(l), {
                  color: "transparent",
                  disabled: e.disabled,
                  tabindex: "-1",
                  loading: e.validButtonLoading,
                  class: "m-input-valid-button",
                  size: "mini",
                  type: "submit"
                }, {
                  default: $(() => [
                    g(u(M), { class: "maz-text-2xl maz-text-normal" })
                  ]),
                  _: 1
                  /* STABLE */
                }, 8, ["disabled", "loading"])
              ], !0) : d("v-if", !0)
            ])) : d("v-if", !0)
          ],
          2
          /* CLASS */
        )
      ],
      6
      /* CLASS, STYLE */
    ));
  }
}), fe = (e, o) => {
  const l = e.__vccOpts || e;
  for (const [s, p] of o)
    l[s] = p;
  return l;
}, ve = /* @__PURE__ */ fe(ce, [["__scopeId", "data-v-acaa27d2"]]);
export {
  ve as M,
  fe as _
};
