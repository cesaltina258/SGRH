import "../assets/MazPickerCalendar.css";
import { openBlock as d, createElementBlock as y, createElementVNode as N, defineComponent as P, computed as o, createVNode as k, withCtx as z, unref as $, createTextVNode as X, toDisplayString as H, useCssVars as ue, ref as O, watch as ce, TransitionGroup as me, Fragment as W, renderList as j, normalizeClass as U, createBlock as q, defineAsyncComponent as R, createCommentVNode as E, Transition as Z } from "vue";
import { d as D, c as Y, a as I, _ as A, g as ve, b as fe, i as w, e as ye, h as pe, j as he } from "./MazPicker-DBOTnZbk.mjs";
import B from "./MazBtn-v6ANLVfx.mjs";
import { d as be } from "./debounce-fEgGlH7P.mjs";
const De = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "none",
  viewBox: "0 0 24 24"
}, ke = /* @__PURE__ */ N(
  "path",
  {
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "1.5",
    d: "M15.75 19.5 8.25 12l7.5-7.5"
  },
  null,
  -1
  /* HOISTED */
), ge = [
  ke
];
function Ve(r, g) {
  return d(), y("svg", De, [...ge]);
}
const _ = { render: Ve }, we = { class: "m-picker-calendar-switcher" }, ze = /* @__PURE__ */ P({
  __name: "MazPickerCalendarSwitcher",
  props: {
    calendarDate: { type: String, default: void 0 },
    locale: { type: String, required: !0 },
    double: { type: Boolean, required: !0 }
  },
  emits: [
    "previous",
    "next",
    "open-month-switcher",
    "open-year-switcher",
    "update:calendar-date"
  ],
  setup(r, { emit: g }) {
    const e = r, p = g, n = o(() => D(e.calendarDate)), s = o(() => e.double ? `${Y(
      I(n.value.format(), e.locale, { month: "long" })
    )} - ${Y(
      I(n.value.add(1, "month").format(), e.locale, {
        month: "long"
      })
    )}` : Y(I(n.value.format(), e.locale, { month: "long" }))), V = o(
      () => I(n.value.format(), e.locale, { year: "numeric" })
    ), c = () => {
      p("update:calendar-date", D(e.calendarDate).subtract(1, "month").format());
    }, S = () => {
      p("update:calendar-date", D(e.calendarDate).add(1, "month").format());
    };
    return (m, v) => (d(), y("div", we, [
      k(B, {
        size: "xs",
        color: "transparent",
        type: "button",
        onClick: c
      }, {
        default: z(() => [
          k($(_), { class: "maz-text-lg" })
        ]),
        _: 1
        /* STABLE */
      }),
      k(B, {
        size: "sm",
        color: "transparent",
        type: "button",
        class: "m-picker-calendar-switcher__date",
        onClick: v[0] || (v[0] = (i) => m.$emit("open-month-switcher", i))
      }, {
        default: z(() => [
          X(
            H(s.value),
            1
            /* TEXT */
          )
        ]),
        _: 1
        /* STABLE */
      }),
      k(B, {
        size: "sm",
        color: "transparent",
        type: "button",
        class: "m-picker-calendar-switcher__date",
        onClick: v[1] || (v[1] = (i) => m.$emit("open-year-switcher", i))
      }, {
        default: z(() => [
          X(
            H(V.value),
            1
            /* TEXT */
          )
        ]),
        _: 1
        /* STABLE */
      }),
      k(B, {
        size: "xs",
        color: "transparent",
        type: "button",
        onClick: S
      }, {
        default: z(() => [
          k($(_), { class: "maz-rotate-180 maz-text-lg" })
        ]),
        _: 1
        /* STABLE */
      })
    ]));
  }
}), Se = /* @__PURE__ */ A(ze, [["__scopeId", "data-v-d8857bed"]]), Me = /* @__PURE__ */ P({
  __name: "MazPickerCalendarGrid",
  props: {
    modelValue: {
      type: [String, Object],
      default: void 0
    },
    calendarDate: { type: String, required: !0 },
    hasTime: { type: Boolean, required: !0 },
    locale: { type: String, required: !0 },
    firstDayOfWeek: { type: Number, required: !0 },
    color: { type: String, required: !0 },
    minDate: { type: String, default: void 0 },
    maxDate: { type: String, default: void 0 },
    disabledWeekly: { type: Array, required: !0 },
    disabledDates: { type: Array, required: !0 },
    hoverredDay: { type: Object, default: void 0 },
    disabled: { type: Boolean, required: !0 }
  },
  emits: ["update:model-value", "update:hoverred-day"],
  setup(r, { emit: g }) {
    ue((t) => ({
      "493a9bd2": S.value,
      "63b7855a": v.value,
      "625eea6a": m.value
    }));
    const e = r, p = g, n = O(), s = O("maz-slidenext"), V = o(() => [e.calendarDate]), c = o(() => e.modelValue && typeof e.modelValue == "object"), S = o(() => `var(--maz-color-${e.color}-alpha-20)`), m = o(() => `var(--maz-color-${e.color}-alpha)`), v = o(() => `var(--maz-color-${e.color}-alpha-20)`), i = o({
      get: () => e.modelValue,
      set: (t) => p("update:model-value", t)
    }), C = o(
      () => Array.from({ length: ve(e.calendarDate) }, (t, a) => a + 1).map((t) => ({
        label: t,
        date: D(e.calendarDate).set("date", t)
      }))
    ), F = o(() => (fe(e.calendarDate) - e.firstDayOfWeek + 7) % 7), h = (t) => {
      const a = e.modelValue;
      a.start && !a.end && t && t.isAfter(a.start) ? p("update:hoverred-day", t) : p("update:hoverred-day");
    }, M = (t) => {
      const a = e.modelValue;
      return !a.start || !e.hoverredDay ? void 0 : D(t).isBetween(a.start, e.hoverredDay, "date", "(]") ? 3 : void 0;
    }, l = (t) => {
      if (e.hoverredDay)
        return D(t).isSame(e.hoverredDay);
    }, u = (t) => {
      var a;
      return e.modelValue && e.modelValue && typeof e.modelValue == "object" && (a = e.modelValue) != null && a.start ? w(t, e.modelValue.start, "date") : !1;
    }, x = (t) => {
      var a;
      return e.modelValue && e.modelValue && typeof e.modelValue == "object" && (a = e.modelValue) != null && a.end ? w(t, e.modelValue.end, "date") : !1;
    }, ee = (t) => {
      const a = e.modelValue;
      return typeof a == "object" ? a.start && w(t, a.start, "date") || a.end && w(t, a.end, "date") || Q(t) ? e.color : "transparent" : K(t) ? e.color : "transparent";
    }, J = (t) => {
      if (e.modelValue && typeof e.modelValue == "object") {
        if (e.modelValue.start && w(t, e.modelValue.start, "date"))
          return 1;
        if (e.modelValue.end) {
          if (w(t, e.modelValue.end, "date"))
            return 1;
          if (Q(t))
            return 2;
        }
      } else if (K(t))
        return 1;
      return 0;
    }, te = (t) => {
      c.value && h();
      const a = t.format();
      if (typeof i.value == "object") {
        let b = i.value;
        b.start && b.end && (b = {
          start: void 0,
          end: void 0
        });
        const L = D(a).isBefore(b.start, "date");
        i.value = !b.start || L ? {
          start: a,
          end: void 0
        } : {
          start: b.start,
          end: a
        };
      } else
        i.value = a;
    }, ae = (t) => ye(t), K = (t) => {
      if (!e.modelValue)
        return !1;
      const a = e.modelValue;
      return w(t, a, "date");
    }, Q = (t) => {
      const a = e.modelValue;
      return !a.start || !a.end ? !1 : D(t).isBetween(a.start, a.end, "date", "()");
    }, re = (t) => e.minDate ? D(t).isBefore(e.minDate, "date") : !1, le = (t) => {
      var a;
      return (a = e.disabledWeekly) != null && a.length ? e.disabledWeekly.some((b) => pe(t, b)) : !1;
    }, oe = (t) => {
      var a;
      return (a = e.disabledDates) != null && a.length ? e.disabledDates.some((b) => w(t, b, "date")) : !1;
    }, de = (t) => e.maxDate ? D(t).isAfter(e.maxDate, "date") : !1, ne = be(() => {
      n.value && (n.value.style.minHeight = "");
    }, 400), se = () => {
      var t;
      n.value && (n.value.style.minHeight = `${((t = n.value) == null ? void 0 : t.clientHeight) || 176}px`, ne());
    };
    return ce(
      () => e.calendarDate,
      (t, a) => {
        s.value = D(t).isAfter(a, "date") ? "maz-slidenext" : "maz-slideprev", se();
      }
    ), (t, a) => (d(), y(
      "div",
      {
        ref_key: "MazPickerGrid",
        ref: n,
        class: "maz-picker-calendar-grid"
      },
      [
        k(me, { name: s.value }, {
          default: z(() => [
            (d(!0), y(
              W,
              null,
              j([V.value], (b, L) => (d(), y(
                "div",
                {
                  key: `${b[L]}`,
                  class: U(["maz-picker-calendar-grid__container", { "--is-range": c.value }])
                },
                [
                  (d(!0), y(
                    W,
                    null,
                    j(F.value, (G) => (d(), y("div", { key: G }))),
                    128
                    /* KEYED_FRAGMENT */
                  )),
                  (d(!0), y(
                    W,
                    null,
                    j(C.value, ({ label: G, date: f }, ie) => (d(), q(B, {
                      key: ie,
                      size: "mini",
                      color: ee(f),
                      type: "button",
                      disabled: r.disabled || re(f) || de(f) || le(f) || oe(f),
                      class: U({
                        "--is-today": ae(f),
                        "--is-first": u(f),
                        "--is-last": x(f) || c.value && l(f),
                        "--is-selected": J(f) === 1,
                        "--is-between": J(f) === 2,
                        "--is-between-hoverred": c.value ? M(f) === 3 : void 0
                      }),
                      onClick: (T) => te(f),
                      onMouseover: (T) => c.value ? h(f) : void 0,
                      onMouseleave: a[0] || (a[0] = (T) => c.value ? h() : void 0),
                      onFocus: (T) => c.value ? h(f) : void 0,
                      onBlur: a[1] || (a[1] = (T) => c.value ? h() : void 0)
                    }, {
                      default: z(() => [
                        N(
                          "span",
                          null,
                          H(G),
                          1
                          /* TEXT */
                        )
                      ]),
                      _: 2
                      /* DYNAMIC */
                    }, 1032, ["color", "disabled", "class", "onClick", "onMouseover", "onFocus"]))),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ],
                2
                /* CLASS */
              ))),
              128
              /* KEYED_FRAGMENT */
            ))
          ]),
          _: 1
          /* STABLE */
        }, 8, ["name"])
      ],
      512
      /* NEED_PATCH */
    ));
  }
}), Ce = /* @__PURE__ */ A(Me, [["__scopeId", "data-v-4cdfac07"]]), xe = { class: "maz-picker-calendar-days" }, qe = /* @__PURE__ */ P({
  __name: "MazPickerCalendarDays",
  props: {
    locale: { type: String, required: !0 },
    firstDayOfWeek: { type: Number, required: !0 }
  },
  setup(r) {
    const g = r, e = o(() => he(g.locale, g.firstDayOfWeek));
    return (p, n) => (d(), y("div", xe, [
      (d(!0), y(
        W,
        null,
        j(e.value, (s) => (d(), y(
          "span",
          { key: s },
          H(s),
          1
          /* TEXT */
        ))),
        128
        /* KEYED_FRAGMENT */
      ))
    ]));
  }
}), Be = /* @__PURE__ */ A(qe, [["__scopeId", "data-v-a7b7f610"]]), $e = /* @__PURE__ */ P({
  __name: "MazPickerCalendarMonth",
  props: {
    modelValue: {
      type: [String, Object],
      default: void 0
    },
    color: { type: String, required: !0 },
    locale: { type: String, required: !0 },
    hasTime: { type: Boolean, required: !0 },
    firstDayOfWeek: { type: Number, required: !0 },
    calendarDate: { type: String, required: !0 },
    offsetMonth: { type: Number, default: 0 },
    minDate: { type: String, default: void 0 },
    maxDate: { type: String, default: void 0 },
    disabledWeekly: { type: Array, required: !0 },
    disabledDates: { type: Array, required: !0 },
    hoverredDay: { type: Object, default: void 0 },
    disabled: { type: Boolean, required: !0 }
  },
  emits: ["update:model-value", "update:calendar-date", "update:hoverred-day"],
  setup(r, { emit: g }) {
    const e = r, p = g, n = o({
      get: () => e.modelValue,
      set: (m) => p("update:model-value", m)
    }), s = o(() => typeof n.value == "object"), V = o({
      get: () => e.hoverredDay,
      set: (m) => p("update:hoverred-day", m)
    });
    function c(m) {
      return D(e.calendarDate).add(m, "month").format();
    }
    const S = o({
      get: () => c(e.offsetMonth),
      set: (m) => p("update:calendar-date", m)
    });
    return (m, v) => (d(), y(
      "div",
      {
        class: U(["maz-picker-calendar-month", { "--has-padding": !s.value }])
      },
      [
        k(Be, {
          locale: r.locale,
          "first-day-of-week": r.firstDayOfWeek,
          class: "maz-picker-calendar-month__days"
        }, null, 8, ["locale", "first-day-of-week"]),
        k(Ce, {
          modelValue: n.value,
          "onUpdate:modelValue": v[0] || (v[0] = (i) => n.value = i),
          "hoverred-day": V.value,
          "onUpdate:hoverredDay": v[1] || (v[1] = (i) => V.value = i),
          locale: r.locale,
          color: r.color,
          "has-time": r.hasTime,
          "calendar-date": S.value,
          "first-day-of-week": r.firstDayOfWeek,
          "min-date": r.minDate,
          "max-date": r.maxDate,
          "disabled-weekly": r.disabledWeekly,
          "disabled-dates": r.disabledDates,
          disabled: r.disabled
        }, null, 8, ["modelValue", "hoverred-day", "locale", "color", "has-time", "calendar-date", "first-day-of-week", "min-date", "max-date", "disabled-weekly", "disabled-dates", "disabled"])
      ],
      2
      /* CLASS */
    ));
  }
}), Oe = /* @__PURE__ */ A($e, [["__scopeId", "data-v-19c30331"]]), We = { class: "maz-picker-calendar flex" }, je = { class: "maz-picker-calendar__months" }, Pe = /* @__PURE__ */ P({
  __name: "MazPickerCalendar",
  props: {
    modelValue: {
      type: [String, Object],
      default: void 0
    },
    calendarDate: { type: String, required: !0 },
    color: { type: String, required: !0 },
    locale: { type: String, required: !0 },
    firstDayOfWeek: { type: Number, required: !0 },
    double: { type: Boolean, required: !0 },
    minDate: { type: String, default: void 0 },
    maxDate: { type: String, default: void 0 },
    disabledWeekly: { type: Array, required: !0 },
    disabledDates: { type: Array, required: !0 },
    shortcuts: {
      type: Array,
      required: !0
    },
    noShortcuts: { type: Boolean, required: !0 },
    hasTime: { type: Boolean, required: !0 },
    shortcut: { type: String, default: void 0 },
    disabled: { type: Boolean, required: !0 }
  },
  emits: ["update:model-value", "update:calendar-date"],
  setup(r, { emit: g }) {
    const e = R(() => import("./MazPickerMonthSwitcher-3XcYjNB4.mjs")), p = R(() => import("./MazPickerYearSwitcher-QcFW_c-2.mjs")), n = R(() => import("./MazPickerShortcuts-7wPe2QOq.mjs")), s = r, V = g, c = O(), S = o(() => s.modelValue && typeof s.modelValue == "object"), m = o(
      () => !s.noShortcuts && s.shortcuts.length > 0 && S.value
    ), v = O(!1), i = O(!1), C = o({
      get: () => s.modelValue,
      set: (M) => V("update:model-value", M)
    }), F = o(() => Array.from({ length: s.double ? 2 : 1 }, (M, l) => l)), h = o({
      get: () => s.calendarDate,
      set: (M) => V("update:calendar-date", M)
    });
    return (M, l) => (d(), y("div", We, [
      m.value ? (d(), q($(n), {
        key: 0,
        modelValue: C.value,
        "onUpdate:modelValue": l[0] || (l[0] = (u) => C.value = u),
        color: r.color,
        shortcuts: r.shortcuts,
        shortcut: r.shortcut,
        double: r.double,
        disabled: r.disabled
      }, null, 8, ["modelValue", "color", "shortcuts", "shortcut", "double", "disabled"])) : E("v-if", !0),
      N(
        "div",
        {
          class: U(["maz-picker-calendar__main", { "--has-double": r.double }])
        },
        [
          k(Se, {
            "calendar-date": h.value,
            "onUpdate:calendarDate": l[1] || (l[1] = (u) => h.value = u),
            locale: r.locale,
            double: r.double,
            onOpenMonthSwitcher: l[2] || (l[2] = (u) => v.value = !0),
            onOpenYearSwitcher: l[3] || (l[3] = (u) => i.value = !0)
          }, null, 8, ["calendar-date", "locale", "double"]),
          k(Z, { name: "maz-picker-slide" }, {
            default: z(() => [
              v.value ? (d(), q($(e), {
                key: 0,
                "calendar-date": h.value,
                "onUpdate:calendarDate": l[4] || (l[4] = (u) => h.value = u),
                color: r.color,
                double: r.double,
                locale: r.locale,
                onClose: l[5] || (l[5] = (u) => v.value = !1)
              }, null, 8, ["calendar-date", "color", "double", "locale"])) : E("v-if", !0)
            ]),
            _: 1
            /* STABLE */
          }),
          k(Z, { name: "maz-picker-slide" }, {
            default: z(() => [
              i.value ? (d(), q($(p), {
                key: 0,
                "calendar-date": h.value,
                "onUpdate:calendarDate": l[6] || (l[6] = (u) => h.value = u),
                color: r.color,
                locale: r.locale,
                onClose: l[7] || (l[7] = (u) => i.value = !1)
              }, null, 8, ["calendar-date", "color", "locale"])) : E("v-if", !0)
            ]),
            _: 1
            /* STABLE */
          }),
          N("div", je, [
            (d(!0), y(
              W,
              null,
              j(F.value, (u) => (d(), q(Oe, {
                key: u,
                modelValue: C.value,
                "onUpdate:modelValue": l[8] || (l[8] = (x) => C.value = x),
                "hoverred-day": c.value,
                "onUpdate:hoverredDay": l[9] || (l[9] = (x) => c.value = x),
                "calendar-date": h.value,
                locale: r.locale,
                "has-time": r.hasTime,
                color: r.color,
                "offset-month": u,
                "first-day-of-week": r.firstDayOfWeek,
                "min-date": r.minDate,
                "max-date": r.maxDate,
                disabled: r.disabled,
                "disabled-weekly": r.disabledWeekly,
                "disabled-dates": r.disabledDates
              }, null, 8, ["modelValue", "hoverred-day", "calendar-date", "locale", "has-time", "color", "offset-month", "first-day-of-week", "min-date", "max-date", "disabled", "disabled-weekly", "disabled-dates"]))),
              128
              /* KEYED_FRAGMENT */
            ))
          ])
        ],
        2
        /* CLASS */
      )
    ]));
  }
}), Ae = /* @__PURE__ */ A(Pe, [["__scopeId", "data-v-dd9f0175"]]), Fe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ae
}, Symbol.toStringTag, { value: "Module" }));
export {
  _ as C,
  Fe as M
};
