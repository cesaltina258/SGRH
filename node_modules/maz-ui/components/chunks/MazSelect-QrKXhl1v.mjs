import "../assets/MazSelect.css";
import { computed as c, defineComponent as ce, defineAsyncComponent as k, ref as d, getCurrentInstance as de, onMounted as we, useSlots as ke, openBlock as m, createElementBlock as z, normalizeClass as L, normalizeStyle as R, createElementVNode as M, renderSlot as E, createVNode as V, unref as y, createCommentVNode as p, withDirectives as Se, mergeProps as me, toHandlers as xe, vModelDynamic as Ie, createTextVNode as Be, toDisplayString as fe, createBlock as Z, withModifiers as q, withCtx as H, useCssVars as Ce, onBeforeMount as Ke, Transition as $e, Fragment as Ae, renderList as Le, nextTick as oe } from "vue";
function Me(l, f) {
  let v;
  return function(...S) {
    clearTimeout(v), v = setTimeout(() => {
      l.apply(this, S);
    }, f);
  };
}
const ye = ({
  componentName: l,
  instance: f,
  providedId: v
}) => c(() => v ?? `${l}-${f == null ? void 0 : f.uid}`), De = {
  key: 0,
  class: "m-input-wrapper-left"
}, Ne = { class: "m-input-wrapper-input" }, Te = ["id", "type", "name", "placeholder", "aria-label", "disabled", "readonly", "required"], Pe = { key: 0 }, Fe = {
  key: 1,
  class: "m-input-wrapper-right"
}, qe = /* @__PURE__ */ ce({
  inheritAttrs: !1,
  __name: "MazInput",
  props: {
    style: {
      type: [String, Array, Object],
      default: void 0
    },
    class: {
      type: [String, Array, Object],
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean],
      default: void 0
    },
    placeholder: { type: String, default: void 0 },
    color: {
      type: String,
      default: "primary"
    },
    label: { type: String, default: void 0 },
    name: { type: String, default: "input" },
    type: {
      type: String,
      default: "text",
      validator: (l) => [
        "text",
        "date",
        "number",
        "tel",
        "search",
        "url",
        "password",
        "month",
        "time",
        "week",
        "email"
      ].includes(l)
    },
    required: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    id: { type: String, default: void 0 },
    error: { type: Boolean, default: !1 },
    success: { type: Boolean, default: !1 },
    warning: { type: Boolean, default: !1 },
    hint: { type: String, default: void 0 },
    inputClasses: { type: String, default: void 0 },
    noBorder: { type: Boolean, default: !1 },
    noRadius: { type: Boolean, default: !1 },
    size: {
      type: String,
      default: "md",
      validator: (l) => ["mini", "xs", "sm", "md", "lg", "xl"].includes(l)
    },
    debounce: { type: Boolean, default: !1 },
    debounceDelay: { type: Number, default: 500 },
    validButton: { type: Boolean, default: !1 },
    validButtonLoading: { type: Boolean, default: !1 },
    autoFocus: { type: Boolean, default: !1 },
    borderActive: { type: Boolean, default: !1 },
    leftIcon: { type: String, default: void 0 },
    rightIcon: { type: String, default: void 0 }
  },
  emits: ["focus", "blur", "update:model-value", "click", "change", "update"],
  setup(l, { emit: f }) {
    const v = k(() => import("./MazBtn-AVguv2N0.mjs")), S = k(() => import("./MazIcon-RrJDzX3V.mjs")), D = k(() => import("./eye-slash-UoWe3WK1.mjs")), G = k(() => import("./eye-3jm1b22X.mjs")), J = k(() => import("./check-_5Up9njX.mjs")), e = l, b = f, g = d(!1), s = d(!1), $ = d(), X = de(), Y = ye({
      componentName: "MazInput",
      instance: X,
      providedId: e.id
    });
    we(() => {
      var i;
      e.autoFocus && ((i = $.value) == null || i.focus());
    });
    const O = c(() => e.type === "password"), x = c(() => g.value ? "text" : e.type), _ = c(() => {
      if (!e.noBorder) {
        if (e.error)
          return "maz-border-danger";
        if (e.success)
          return "maz-border-success";
        if (e.warning)
          return "maz-border-warning";
        if (s.value || e.borderActive) {
          if (e.color === "black")
            return "maz-border-black";
          if (e.color === "danger")
            return "maz-border-danger";
          if (e.color === "info")
            return "maz-border-info";
          if (e.color === "primary")
            return "maz-border-primary";
          if (e.color === "secondary")
            return "maz-border-secondary";
          if (e.color === "success")
            return "maz-border-success";
          if (e.color === "warning")
            return "maz-border-warning";
          if (e.color === "white")
            return "maz-border-white";
        }
        return "--default-border";
      }
    }), I = ke(), U = c(() => {
      const { required: i, placeholder: u } = e;
      if (u)
        return i ? `${u} *` : u;
    }), j = c(() => e.modelValue !== void 0 && e.modelValue !== ""), N = c({
      get: () => e.modelValue,
      set: (i) => P(i)
    }), W = c(() => (!!e.label || !!e.hint) && (s.value || !!j.value || !!e.placeholder || ["date", "month", "week"].includes(e.type))), C = c(() => !!e.label || !!e.hint), T = () => !!I["right-icon"] || O.value || !!I["valid-button"] || e.validButton || !!e.rightIcon, ee = () => !!I["left-icon"] || !!e.leftIcon, te = (i) => {
      b("focus", i), s.value = !0;
    }, K = (i) => {
      b("blur", i), s.value = !1;
    }, B = (i) => b("change", i), Q = Me((i) => {
      b("update:model-value", i);
    }, e.debounceDelay), P = (i) => {
      if (e.debounce)
        return Q(i);
      b("update:model-value", i);
    };
    return (i, u) => (m(), z(
      "div",
      {
        class: L(["m-input", [
          {
            "--is-focused": s.value || l.borderActive,
            "--should-up": W.value,
            "--has-label": C.value,
            "--is-disabled": l.disabled,
            "--is-readonly": l.readonly,
            "--has-z-2": l.error || l.warning || l.success,
            "--has-state": l.error || l.warning || l.success
          },
          e.class,
          `--${l.color}`,
          `--${l.size}`
        ]]),
        style: R(l.style)
      },
      [
        M(
          "div",
          {
            class: L(["m-input-wrapper", [l.inputClasses, _.value, { "maz-rounded": !l.noRadius }]])
          },
          [
            ee() ? (m(), z("div", De, [
              i.$slots["left-icon"] || l.leftIcon ? E(i.$slots, "left-icon", { key: 0 }, () => [
                V(y(S), {
                  name: l.leftIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])
              ], !0) : p("v-if", !0)
            ])) : p("v-if", !0),
            M("div", Ne, [
              Se(M("input", me({
                id: y(Y),
                ref_key: "input",
                ref: $,
                "onUpdate:modelValue": u[0] || (u[0] = (w) => N.value = w),
                type: x.value,
                name: l.name
              }, i.$attrs, {
                placeholder: U.value,
                "aria-label": l.label || l.placeholder,
                disabled: l.disabled,
                readonly: l.readonly,
                required: l.required,
                class: "m-input-input"
              }, xe({
                blur: K,
                focus: te,
                change: B
              }, !0), {
                onClick: u[1] || (u[1] = (w) => i.$emit("click", w))
              }), null, 16, Te), [
                [Ie, N.value]
              ]),
              l.label || l.hint ? (m(), z(
                "span",
                {
                  key: 0,
                  ref: "label",
                  class: L(["m-input-label", [
                    {
                      "maz-text-danger-600": l.error,
                      "maz-text-success-600": l.success,
                      "maz-text-warning-600": l.warning
                    }
                  ]])
                },
                [
                  Be(
                    fe(l.hint || l.label) + " ",
                    1
                    /* TEXT */
                  ),
                  l.required ? (m(), z("sup", Pe, "*")) : p("v-if", !0)
                ],
                2
                /* CLASS */
              )) : p("v-if", !0)
            ]),
            T() ? (m(), z("div", Fe, [
              i.$slots["right-icon"] || l.rightIcon ? E(i.$slots, "right-icon", { key: 0 }, () => [
                V(y(S), {
                  name: l.rightIcon,
                  class: "maz-text-xl maz-text-muted"
                }, null, 8, ["name"])
              ], !0) : p("v-if", !0),
              O.value ? (m(), Z(y(v), {
                key: 1,
                color: "transparent",
                tabindex: "-1",
                size: "mini",
                onClick: u[2] || (u[2] = q((w) => g.value = !g.value, ["stop"]))
              }, {
                default: H(() => [
                  g.value ? (m(), Z(y(D), {
                    key: 0,
                    class: "maz-text-xl maz-text-muted"
                  })) : (m(), Z(y(G), {
                    key: 1,
                    class: "maz-text-xl maz-text-muted"
                  }))
                ]),
                _: 1
                /* STABLE */
              })) : p("v-if", !0),
              i.$slots["valid-button"] || l.validButton ? E(i.$slots, "valid-button", { key: 2 }, () => [
                V(y(v), {
                  color: "transparent",
                  disabled: l.disabled,
                  tabindex: "-1",
                  loading: l.validButtonLoading,
                  class: "m-input-valid-button",
                  size: "mini",
                  type: "submit"
                }, {
                  default: H(() => [
                    V(y(J), { class: "maz-text-2xl maz-text-normal" })
                  ]),
                  _: 1
                  /* STABLE */
                }, 8, ["disabled", "loading"])
              ], !0) : p("v-if", !0)
            ])) : p("v-if", !0)
          ],
          2
          /* CLASS */
        )
      ],
      6
      /* CLASS, STYLE */
    ));
  }
}), pe = (l, f) => {
  const v = l.__vccOpts || l;
  for (const [S, D] of f)
    v[S] = D;
  return v;
}, re = /* @__PURE__ */ pe(qe, [["__scopeId", "data-v-acaa27d2"]]);
d("system");
d("system");
d();
d([]);
let ne = null;
function Ee(l, f) {
  ne && clearTimeout(ne), ne = setTimeout(l, f);
}
const He = ["onClick"], Oe = {
  key: 0,
  tabindex: "-1",
  class: "m-select-list__search-wrapper"
}, Ue = { class: "m-select-list__no-results" }, je = {
  key: 2,
  class: "m-select-list__scroll-wrapper",
  tabindex: "-1"
}, We = ["onClick"], Qe = /* @__PURE__ */ ce({
  inheritAttrs: !1,
  __name: "MazSelect",
  props: {
    style: {
      type: [String, Array, Object],
      default: void 0
    },
    class: {
      type: [String, Array, Object],
      default: void 0
    },
    modelValue: {
      type: [Number, String, Boolean, Array],
      default: void 0
    },
    id: { type: String, default: void 0 },
    options: { type: Array, default: void 0 },
    optionValueKey: { type: String, default: "value" },
    optionLabelKey: { type: String, default: "label" },
    optionInputValueKey: { type: String, default: "label" },
    listPosition: {
      type: String,
      default: "bottom left",
      validator: (l) => ["top", "top right", "top left", "bottom", "bottom right", "bottom left"].includes(
        l
      )
    },
    required: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    open: { type: Boolean, default: !1 },
    /** Choose color of the input */
    color: {
      type: String,
      default: "primary"
    },
    /** Choose the option list item height */
    itemHeight: { type: Number, default: 40 },
    maxListHeight: { type: Number, default: 240 },
    /** Add max-width value to option list */
    maxListWidth: { type: Number, default: void 0 },
    /** Choose size of the input */
    size: {
      type: String,
      default: "md",
      validator: (l) => ["mini", "xs", "sm", "md", "lg", "xl"].includes(l)
    },
    /** Display search input in option list */
    search: { type: Boolean, default: !1 },
    /** Search input placeholder */
    searchPlaceholder: { type: String, default: "Search in options" },
    /** Enable feature to select multiple values */
    multiple: { type: Boolean, default: !1 }
  },
  emits: [
    "close",
    "open",
    "blur",
    "focus",
    "change",
    "update:model-value",
    /** On selected value, returns the option object */
    "selected-option"
  ],
  setup(l, { emit: f }) {
    Ce((t) => ({
      "99826e10": O.value,
      "6c56f7b7": X.value,
      99876842: Y.value
    }));
    const v = k(() => import("./MazCheckbox-pXHcef3K.mjs")), S = k(() => import("./magnifying-glass-ebhrla2J.mjs")), D = k(() => import("./chevron-down-bC0s_0yH.mjs")), G = k(() => import("./no-symbol-JnXtUaU-.mjs")), J = de(), e = l, b = f, g = d(!1), s = d(), $ = c(
      () => ["black", "transparent", "white"].includes(e.color)
    ), X = c(
      () => $.value ? "var(--maz-color-black)" : `var(--maz-color-${e.color}-800)`
    ), Y = c(
      () => $.value ? "var(--maz-color-muted)" : `var(--maz-color-${e.color}-100)`
    ), O = c(
      () => $.value ? "var(--maz-color-muted)" : `var(--maz-color-${e.color}-200)`
    ), x = c(() => g.value || e.open), _ = ye({
      componentName: "MazSelect",
      instance: J,
      providedId: e.id
    }), I = c(
      () => {
        var t;
        return ((t = e.options) == null ? void 0 : t.filter((a) => e.multiple ? Array.isArray(e.modelValue) ? e.modelValue.includes(a[e.optionValueKey]) && !C(a[e.optionValueKey]) : !1 : e.modelValue === a[e.optionValueKey] && !C(a[e.optionValueKey]))) ?? [];
      }
    );
    Ke(() => {
      var t;
      (t = e.options) != null && t.length || console.warn("[maz-ui](MazSelect) you must provide options"), ae();
    });
    const U = d(), j = d(), N = d(), W = d(), C = (t) => t == null;
    function T(t) {
      var o;
      return (((o = I.value) == null ? void 0 : o.some(
        (n) => n[e.optionValueKey] === t[e.optionValueKey]
      )) ?? !1) && !C(t[e.optionValueKey]);
    }
    const ee = c(() => {
      var t, a;
      return e.multiple && e.modelValue && Array.isArray(e.modelValue) ? e.modelValue.map(
        (o) => {
          var n, r;
          return (r = (n = e.options) == null ? void 0 : n.find((h) => h[e.optionValueKey] === o)) == null ? void 0 : r[e.optionInputValueKey];
        }
      ).join(", ") : (a = (t = e.options) == null ? void 0 : t.find((o) => o[e.optionValueKey] === e.modelValue)) == null ? void 0 : a[e.optionInputValueKey];
    }), te = c(
      () => e.listPosition.includes("bottom") ? "maz-slide" : "maz-slideinvert"
    ), K = d(""), B = d("");
    function Q(t) {
      return t.normalize("NFD").replaceAll(/[\u0300-\u036F]/g, "").replaceAll(/[^\dA-Za-z\u0400-\u04FF]/g, "");
    }
    const P = (t, a) => a && t && Q(t.toString().toLocaleLowerCase().trim()).includes(
      Q(a.toLocaleLowerCase().trim())
    );
    function i(t) {
      var a;
      return t ? (a = e.options) == null ? void 0 : a.filter((o) => {
        const n = o[e.optionLabelKey], r = o[e.optionValueKey], h = o[e.optionInputValueKey];
        return P(n, t) || P(r, t) || P(h, t);
      }) : e.options;
    }
    const u = c(() => i(K.value)), w = async (t) => {
      var a;
      if (t && ("relatedTarget" in t && ((a = U.value) != null && a.contains(t.relatedTarget)) || t.type === "keydown"))
        return t.preventDefault();
      await oe(), g.value = !1, s.value = 0, b("close", t);
    }, F = async (t) => {
      e.disabled || x.value || (t == null || t.preventDefault(), g.value = !0, await le(), b("focus", t), b("open", g.value));
    };
    function ie() {
      var t, a;
      (a = ((t = j.value) == null ? void 0 : t.$el).querySelector("input")) == null || a.focus();
    }
    function ve(t) {
      g.value ? w(t) : ie();
    }
    function be(t) {
      var a, o;
      K.value = t, (o = ((a = N.value) == null ? void 0 : a.$el).querySelector("input")) == null || o.focus();
    }
    function he(t) {
      var o;
      t === "Backspace" && B.value.length > 0 ? B.value = B.value.slice(0, -1) : B.value += t;
      const a = i(B.value);
      a != null && a.length && (s.value = (o = u.value) == null ? void 0 : o.findIndex(
        (n) => n[e.optionValueKey] === a[0][e.optionValueKey]
      ), typeof s.value == "number" && s.value >= 0 && le(s.value)), Ee(() => {
        B.value = "";
      }, 1e3);
    }
    const ge = (t) => {
      const a = t.key;
      /^[\dA-Za-z\u0400-\u04FF]$/.test(a) ? (t.preventDefault(), F(t), e.search ? be(a) : he(a)) : se(t);
    }, se = (t) => {
      const a = t.code, o = ["ArrowUp", "ArrowDown"].includes(a), n = ["Enter", "Space"].includes(a), r = a === "Escape" && x.value;
      o ? ze(t, s.value) : n ? Ve(t, s.value) : r && w();
    }, ze = (t, a) => {
      var r;
      t.preventDefault();
      const o = t.code;
      x.value || F(t);
      const n = (r = u.value) == null ? void 0 : r.length;
      n && (typeof a == "number" ? a === n - 1 && o === "ArrowDown" ? s.value = 0 : a === 0 && o === "ArrowUp" ? s.value = n - 1 : s.value = o === "ArrowDown" ? a + 1 : a - 1 : s.value = o === "ArrowDown" ? 0 : n - 1, le(s.value));
    }, Ve = (t, a) => {
      var n, r, h;
      if (t.preventDefault(), !x.value)
        return F(t);
      const o = a ? ((n = u.value) == null ? void 0 : n[a]) ?? ((r = u.value) == null ? void 0 : r[0]) : (h = u.value) == null ? void 0 : h[0];
      C(o) || ue(o);
    };
    async function le(t) {
      var o, n;
      await oe(), typeof t != "number" && ae();
      const a = t ?? s.value;
      typeof a == "number" && a >= 0 && ((n = (o = W.value) == null ? void 0 : o.querySelectorAll(".m-select-list-item")[a]) == null || n.scrollIntoView({
        behavior: "auto",
        block: "nearest",
        inline: "start"
      }));
    }
    function ae(t) {
      var o;
      const a = (o = u.value) == null ? void 0 : o.findIndex((n) => {
        var r, h;
        return e.multiple && Array.isArray(e.modelValue) ? t ? t[e.optionValueKey] === n[e.optionValueKey] : [...e.modelValue].reverse()[0] === n[e.optionValueKey] : ((h = (r = I.value) == null ? void 0 : r[0]) == null ? void 0 : h[e.optionValueKey]) === n[e.optionValueKey];
      });
      s.value = a && a >= 0 ? a : 0;
    }
    const ue = (t, a = !0) => {
      var h;
      a && !e.multiple && oe(() => w()), K.value = "";
      const o = (h = I.value) == null ? void 0 : h.some(
        (A) => A[e.optionValueKey] === t[e.optionValueKey]
      );
      let n = I.value;
      o && e.multiple ? n = n == null ? void 0 : n.filter(
        (A) => A[e.optionValueKey] !== t[e.optionValueKey]
      ) : e.multiple ? n.push(t) : n = [t];
      const r = n.map((A) => A[e.optionValueKey]);
      b("update:model-value", e.multiple ? r : r[0]), b("selected-option", t), ae(t), ie();
    };
    return (t, a) => (m(), z(
      "div",
      {
        ref_key: "mazSelectElement",
        ref: U,
        class: L(["m-select", [{ "--is-open": x.value, "--disabled": l.disabled }, e.class]]),
        style: R(l.style),
        onBlurCapture: w
      },
      [
        V(re, me({
          id: y(_),
          ref_key: "mazInputComponent",
          ref: j,
          class: "m-select-input"
        }, t.$attrs, {
          required: l.required,
          "border-active": g.value,
          color: l.color,
          "model-value": ee.value,
          autocomplete: "off",
          size: l.size,
          disabled: l.disabled,
          onFocus: q(F, ["prevent", "stop"]),
          onClick: q(F, ["prevent", "stop"]),
          onChange: a[0] || (a[0] = (o) => b("change", o)),
          onKeydown: ge
        }), {
          "right-icon": H(() => [
            M("button", {
              tabindex: "-1",
              type: "button",
              class: "m-select-input__toggle-button maz-custom",
              onClick: q(ve, ["stop"])
            }, [
              V(y(D), { class: "m-select-chevron maz-text-xl" })
            ], 8, He)
          ]),
          _: 1
          /* STABLE */
        }, 16, ["id", "required", "border-active", "color", "model-value", "size", "disabled", "onFocus", "onClick"]),
        V($e, { name: te.value }, {
          default: H(() => [
            x.value ? (m(), z(
              "div",
              {
                key: 0,
                ref_key: "optionsListElement",
                ref: W,
                class: L(["m-select-list", {
                  "--top": l.listPosition.includes("top"),
                  "--left": l.listPosition.includes("left"),
                  "--right": l.listPosition.includes("right"),
                  "--bottom": l.listPosition.includes("bottom")
                }]),
                style: R({
                  maxHeight: `${l.maxListHeight}px`,
                  maxWidth: `${l.maxListWidth}px`
                })
              },
              [
                l.search ? (m(), z("div", Oe, [
                  V(re, {
                    ref_key: "searchInputComponent",
                    ref: N,
                    modelValue: K.value,
                    "onUpdate:modelValue": [
                      a[1] || (a[1] = (o) => K.value = o),
                      a[2] || (a[2] = (o) => s.value = 0)
                    ],
                    size: "sm",
                    color: l.color,
                    placeholder: l.searchPlaceholder,
                    name: "search",
                    autocomplete: "off",
                    tabindex: "-1",
                    class: "m-select-list__search-input",
                    onKeydown: se
                  }, {
                    "left-icon": H(() => [
                      V(y(S), { class: "maz-h-[1.3rem] maz-w-[1.3rem]" })
                    ]),
                    _: 1
                    /* STABLE */
                  }, 8, ["modelValue", "color", "placeholder"])
                ])) : p("v-if", !0),
                p(`
          @slot No results slot - Displayed when no results corresponding with seeach query
        `),
                !u.value || u.value.length <= 0 ? E(t.$slots, "no-results", { key: 1 }, () => [
                  M("span", Ue, [
                    V(y(G), { class: "maz-h-6 maz-w-6 maz-text-normal" })
                  ])
                ], !0) : (m(), z("div", je, [
                  (m(!0), z(
                    Ae,
                    null,
                    Le(u.value, (o, n) => (m(), z("button", {
                      key: n,
                      tabindex: "-1",
                      type: "button",
                      class: L(["m-select-list-item maz-custom", [
                        {
                          "--is-keyboard-selected": s.value === n,
                          "--is-selected": T(o),
                          "--is-none-value": C(o[l.optionValueKey])
                        }
                      ]]),
                      style: R({ minHeight: `${l.itemHeight}px` }),
                      onClick: q((r) => ue(o), ["prevent", "stop"])
                    }, [
                      l.multiple ? (m(), Z(y(v), {
                        key: 0,
                        tabindex: "-1",
                        "model-value": T(o),
                        size: "sm",
                        color: l.color
                      }, null, 8, ["model-value", "color"])) : p("v-if", !0),
                      p(`
              @slot Custom option
                @binding {Object} option
                @binding {Boolean} is-selected
            `),
                      E(t.$slots, "default", {
                        option: o,
                        isSelected: T(o)
                      }, () => [
                        M(
                          "span",
                          null,
                          fe(o[l.optionLabelKey]),
                          1
                          /* TEXT */
                        )
                      ], !0)
                    ], 14, We))),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ]))
              ],
              6
              /* CLASS, STYLE */
            )) : p("v-if", !0)
          ]),
          _: 3
          /* FORWARDED */
        }, 8, ["name"])
      ],
      38
      /* CLASS, STYLE, NEED_HYDRATION */
    ));
  }
}), Ge = /* @__PURE__ */ pe(Qe, [["__scopeId", "data-v-8f4d312d"]]);
export {
  Ge as M,
  pe as _,
  ye as u
};
