import { type PropType } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    noClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: StringConstructor;
        default: undefined;
    };
    variant: {
        type: PropType<"top" | "bottom" | "left" | "right">;
        default: string;
        validator: (value: string) => boolean;
    };
    backdropClass: {
        default: undefined;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    close: (...args: any[]) => void;
    open: (...args: any[]) => void;
    "update:model-value": (...args: any[]) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    noClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: StringConstructor;
        default: undefined;
    };
    variant: {
        type: PropType<"top" | "bottom" | "left" | "right">;
        default: string;
        validator: (value: string) => boolean;
    };
    backdropClass: {
        default: undefined;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    onClose?: ((...args: any[]) => any) | undefined;
    onOpen?: ((...args: any[]) => any) | undefined;
    "onUpdate:model-value"?: ((...args: any[]) => any) | undefined;
}, {
    size: string;
    title: string;
    variant: "top" | "bottom" | "left" | "right";
    backdropClass: undefined;
    noClose: boolean;
}, {}>, {
    title?(_: {
        close: any;
    }): any;
    default?(_: {
        close: any;
    }): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
